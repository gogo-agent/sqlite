scenario_id,scenario_name,scenario_type,feature_name,file_path,language_area,requires_runtime
clauses-call-Call1-01,[1] Standalone call to procedure that takes no arguments and yields no results,Scenario,Call1 - Basic procedure calling,clauses/call/Call1.feature,clauses.call,False
clauses-call-Call1-02,"[2] Standalone call to procedure that takes no arguments and yields no results, called with implicit arguments",Scenario,Call1 - Basic procedure calling,clauses/call/Call1.feature,clauses.call,False
clauses-call-Call1-03,[3] In-query call to procedure that takes no arguments and yields no results,Scenario,Call1 - Basic procedure calling,clauses/call/Call1.feature,clauses.call,False
clauses-call-Call1-04,[4] In-query call to procedure that takes no arguments and yields no results and consumes no rows,Scenario,Call1 - Basic procedure calling,clauses/call/Call1.feature,clauses.call,False
clauses-call-Call1-05,[5] Standalone call to STRING procedure that takes no arguments,Scenario,Call1 - Basic procedure calling,clauses/call/Call1.feature,clauses.call,False
clauses-call-Call1-06,[6] In-query call to STRING procedure that takes no arguments,Scenario,Call1 - Basic procedure calling,clauses/call/Call1.feature,clauses.call,False
clauses-call-Call1-07,[7] Standalone call to procedure should fail if explicit argument is missing,Scenario,Call1 - Basic procedure calling,clauses/call/Call1.feature,clauses.call,False
clauses-call-Call1-08,[8] In-query call to procedure should fail if explicit argument is missing,Scenario,Call1 - Basic procedure calling,clauses/call/Call1.feature,clauses.call,False
clauses-call-Call1-09,[9] Standalone call to procedure should fail if too many explicit argument are given,Scenario,Call1 - Basic procedure calling,clauses/call/Call1.feature,clauses.call,False
clauses-call-Call1-10,[10] In-query call to procedure should fail if too many explicit argument are given,Scenario,Call1 - Basic procedure calling,clauses/call/Call1.feature,clauses.call,False
clauses-call-Call1-11,[11] Standalone call to procedure should fail if implicit argument is missing,Scenario,Call1 - Basic procedure calling,clauses/call/Call1.feature,clauses.call,False
clauses-call-Call1-12,[12] In-query call to procedure that has outputs fails if no outputs are yielded,Scenario,Call1 - Basic procedure calling,clauses/call/Call1.feature,clauses.call,False
clauses-call-Call1-13,[13] Standalone call to unknown procedure should fail,Scenario,Call1 - Basic procedure calling,clauses/call/Call1.feature,clauses.call,False
clauses-call-Call1-14,[14] In-query call to unknown procedure should fail,Scenario,Call1 - Basic procedure calling,clauses/call/Call1.feature,clauses.call,False
clauses-call-Call1-15,[15] In-query procedure call should fail if shadowing an already bound variable,Scenario,Call1 - Basic procedure calling,clauses/call/Call1.feature,clauses.call,False
clauses-call-Call1-16,[16] In-query procedure call should fail if one of the argument expressions uses an aggregation function,Scenario,Call1 - Basic procedure calling,clauses/call/Call1.feature,clauses.call,False
clauses-call-Call2-01,[1] In-query call to procedure with explicit arguments,Scenario,Call2 - Procedure arguments,clauses/call/Call2.feature,clauses.call,False
clauses-call-Call2-02,[2] Standalone call to procedure with explicit arguments,Scenario,Call2 - Procedure arguments,clauses/call/Call2.feature,clauses.call,False
clauses-call-Call2-03,[3] Standalone call to procedure with implicit arguments,Scenario,Call2 - Procedure arguments,clauses/call/Call2.feature,clauses.call,False
clauses-call-Call2-04,[4] In-query call to procedure that takes arguments fails when trying to pass them implicitly,Scenario,Call2 - Procedure arguments,clauses/call/Call2.feature,clauses.call,False
clauses-call-Call2-05,[5] Standalone call to procedure should fail if input type is wrong,Scenario,Call2 - Procedure arguments,clauses/call/Call2.feature,clauses.call,False
clauses-call-Call2-06,[6] In-query call to procedure should fail if input type is wrong,Scenario,Call2 - Procedure arguments,clauses/call/Call2.feature,clauses.call,False
clauses-call-Call3-01,[1] Standalone call to procedure with argument of type NUMBER accepts value of type INTEGER,Scenario,Call3 - Assignable-type arguments,clauses/call/Call3.feature,clauses.call,True
clauses-call-Call3-02,[2] In-query call to procedure with argument of type NUMBER accepts value of type INTEGER,Scenario,Call3 - Assignable-type arguments,clauses/call/Call3.feature,clauses.call,True
clauses-call-Call3-03,[3] Standalone call to procedure with argument of type NUMBER accepts value of type FLOAT,Scenario,Call3 - Assignable-type arguments,clauses/call/Call3.feature,clauses.call,True
clauses-call-Call3-04,[4] In-query call to procedure with argument of type NUMBER accepts value of type FLOAT,Scenario,Call3 - Assignable-type arguments,clauses/call/Call3.feature,clauses.call,True
clauses-call-Call3-05,[5] Standalone call to procedure with argument of type FLOAT accepts value of type INTEGER,Scenario,Call3 - Assignable-type arguments,clauses/call/Call3.feature,clauses.call,True
clauses-call-Call3-06,[6] In-query call to procedure with argument of type FLOAT accepts value of type INTEGER,Scenario,Call3 - Assignable-type arguments,clauses/call/Call3.feature,clauses.call,True
clauses-call-Call4-01,[1] Standalone call to procedure with null argument,Scenario,Call4 - Null Arguments,clauses/call/Call4.feature,clauses.call,True
clauses-call-Call4-02,[2] In-query call to procedure with null argument,Scenario,Call4 - Null Arguments,clauses/call/Call4.feature,clauses.call,True
clauses-call-Call5-01,[1] Explicit procedure result projection,Scenario,Call5 - Results projection,clauses/call/Call5.feature,clauses.call,False
clauses-call-Call5-02,[2] Explicit procedure result projection with RETURN *,Scenario,Call5 - Results projection,clauses/call/Call5.feature,clauses.call,False
clauses-call-Call5-03,[3] The order of yield items is irrelevant,Scenario Outline,Call5 - Results projection,clauses/call/Call5.feature,clauses.call,False
clauses-call-Call5-04,[4] Rename outputs to unbound variable names,Scenario Outline,Call5 - Results projection,clauses/call/Call5.feature,clauses.call,False
clauses-call-Call5-05,[5] Fail on renaming to an already bound variable name,Scenario,Call5 - Results projection,clauses/call/Call5.feature,clauses.call,False
clauses-call-Call5-06,[6] Fail on renaming all outputs to the same variable name,Scenario,Call5 - Results projection,clauses/call/Call5.feature,clauses.call,False
clauses-call-Call5-07,[7] Fail on in-query call to procedure with YIELD *,Scenario,Call5 - Results projection,clauses/call/Call5.feature,clauses.call,False
clauses-call-Call5-08,[8] Allow standalone call to procedure with YIELD *,Scenario,Call5 - Results projection,clauses/call/Call5.feature,clauses.call,False
clauses-call-Call6-01,[1] Calling the same STRING procedure twice using the same outputs in each call,Scenario,Call6 - Call clause interoperation with other clauses,clauses/call/Call6.feature,clauses.call,True
clauses-call-Call6-02,[2] Project procedure results between query scopes with WITH clause,Scenario,Call6 - Call clause interoperation with other clauses,clauses/call/Call6.feature,clauses.call,True
clauses-call-Call6-03,[3] Project procedure results between query scopes with WITH clause and rename the projection,Scenario,Call6 - Call clause interoperation with other clauses,clauses/call/Call6.feature,clauses.call,True
clauses-create-Create1-01,[1] Create a single node,Scenario,Create1 - Creating nodes,clauses/create/Create1.feature,clauses.create,False
clauses-create-Create1-02,[2] Create two nodes,Scenario,Create1 - Creating nodes,clauses/create/Create1.feature,clauses.create,False
clauses-create-Create1-03,[3] Create a single node with a label,Scenario,Create1 - Creating nodes,clauses/create/Create1.feature,clauses.create,False
clauses-create-Create1-04,[4] Create two nodes with same label,Scenario,Create1 - Creating nodes,clauses/create/Create1.feature,clauses.create,False
clauses-create-Create1-05,[5] Create a single node with multiple labels,Scenario,Create1 - Creating nodes,clauses/create/Create1.feature,clauses.create,False
clauses-create-Create1-06,[6] Create three nodes with multiple labels,Scenario,Create1 - Creating nodes,clauses/create/Create1.feature,clauses.create,False
clauses-create-Create1-07,[7] Create a single node with a property,Scenario,Create1 - Creating nodes,clauses/create/Create1.feature,clauses.create,False
clauses-create-Create1-08,[8] Create a single node with a property and return it,Scenario,Create1 - Creating nodes,clauses/create/Create1.feature,clauses.create,False
clauses-create-Create1-09,[9] Create a single node with two properties,Scenario,Create1 - Creating nodes,clauses/create/Create1.feature,clauses.create,False
clauses-create-Create1-10,[10] Create a single node with two properties and return them,Scenario,Create1 - Creating nodes,clauses/create/Create1.feature,clauses.create,False
clauses-create-Create1-11,[11] Create a single node with null properties should not return those properties,Scenario,Create1 - Creating nodes,clauses/create/Create1.feature,clauses.create,False
clauses-create-Create1-12,[12] CREATE does not lose precision on large integers,Scenario,Create1 - Creating nodes,clauses/create/Create1.feature,clauses.create,False
clauses-create-Create1-13,[13] Fail when creating a node that is already bound,Scenario,Create1 - Creating nodes,clauses/create/Create1.feature,clauses.create,False
clauses-create-Create1-14,[14] Fail when creating a node with properties that is already bound,Scenario,Create1 - Creating nodes,clauses/create/Create1.feature,clauses.create,False
clauses-create-Create1-15,[15] Fail when adding a new label predicate on a node that is already bound 1,Scenario,Create1 - Creating nodes,clauses/create/Create1.feature,clauses.create,False
clauses-create-Create1-16,[16] Fail when adding new label predicate on a node that is already bound 2,Scenario,Create1 - Creating nodes,clauses/create/Create1.feature,clauses.create,False
clauses-create-Create1-17,[17] Fail when adding new label predicate on a node that is already bound 3,Scenario,Create1 - Creating nodes,clauses/create/Create1.feature,clauses.create,False
clauses-create-Create1-18,[18] Fail when adding new label predicate on a node that is already bound 4,Scenario,Create1 - Creating nodes,clauses/create/Create1.feature,clauses.create,False
clauses-create-Create1-19,[19] Fail when adding new label predicate on a node that is already bound 5,Scenario,Create1 - Creating nodes,clauses/create/Create1.feature,clauses.create,False
clauses-create-Create1-20,[20] Fail when creating a node using undefined variable in pattern,Scenario,Create1 - Creating nodes,clauses/create/Create1.feature,clauses.create,False
clauses-create-Create2-01,[1] Create two nodes and a single relationship in a single pattern,Scenario,Create2 - Creating relationships,clauses/create/Create2.feature,clauses.create,False
clauses-create-Create2-02,[2] Create two nodes and a single relationship in separate patterns,Scenario,Create2 - Creating relationships,clauses/create/Create2.feature,clauses.create,False
clauses-create-Create2-03,[3] Create two nodes and a single relationship in separate clauses,Scenario,Create2 - Creating relationships,clauses/create/Create2.feature,clauses.create,False
clauses-create-Create2-04,[4] Create two nodes and a single relationship in the reverse direction,Scenario,Create2 - Creating relationships,clauses/create/Create2.feature,clauses.create,False
clauses-create-Create2-05,[5] Create a single relationship between two existing nodes,Scenario,Create2 - Creating relationships,clauses/create/Create2.feature,clauses.create,False
clauses-create-Create2-06,[6] Create a single relationship between two existing nodes in the reverse direction,Scenario,Create2 - Creating relationships,clauses/create/Create2.feature,clauses.create,False
clauses-create-Create2-07,[7] Create a single node and a single self loop in a single pattern,Scenario,Create2 - Creating relationships,clauses/create/Create2.feature,clauses.create,False
clauses-create-Create2-08,[8] Create a single node and a single self loop in separate patterns,Scenario,Create2 - Creating relationships,clauses/create/Create2.feature,clauses.create,False
clauses-create-Create2-09,[9] Create a single node and a single self loop in separate clauses,Scenario,Create2 - Creating relationships,clauses/create/Create2.feature,clauses.create,False
clauses-create-Create2-10,[10] Create a single self loop on an existing node,Scenario,Create2 - Creating relationships,clauses/create/Create2.feature,clauses.create,False
clauses-create-Create2-11,[11] Create a single relationship and an end node on an existing starting node,Scenario,Create2 - Creating relationships,clauses/create/Create2.feature,clauses.create,False
clauses-create-Create2-12,[12] Create a single relationship and a starting node on an existing end node,Scenario,Create2 - Creating relationships,clauses/create/Create2.feature,clauses.create,False
clauses-create-Create2-13,[13] Create a single relationship with a property,Scenario,Create2 - Creating relationships,clauses/create/Create2.feature,clauses.create,False
clauses-create-Create2-14,[14] Create a single relationship with a property and return it,Scenario,Create2 - Creating relationships,clauses/create/Create2.feature,clauses.create,False
clauses-create-Create2-15,[15] Create a single relationship with two properties,Scenario,Create2 - Creating relationships,clauses/create/Create2.feature,clauses.create,False
clauses-create-Create2-16,[16] Create a single relationship with two properties and return them,Scenario,Create2 - Creating relationships,clauses/create/Create2.feature,clauses.create,False
clauses-create-Create2-17,[17] Create a single relationship with null properties should not return those properties,Scenario,Create2 - Creating relationships,clauses/create/Create2.feature,clauses.create,False
clauses-create-Create2-18,[18] Fail when creating a relationship without a type,Scenario,Create2 - Creating relationships,clauses/create/Create2.feature,clauses.create,False
clauses-create-Create2-19,[19] Fail when creating a relationship without a direction,Scenario,Create2 - Creating relationships,clauses/create/Create2.feature,clauses.create,False
clauses-create-Create2-20,[20] Fail when creating a relationship with two directions,Scenario,Create2 - Creating relationships,clauses/create/Create2.feature,clauses.create,False
clauses-create-Create2-21,[21] Fail when creating a relationship with more than one type,Scenario,Create2 - Creating relationships,clauses/create/Create2.feature,clauses.create,False
clauses-create-Create2-22,[22] Fail when creating a variable-length relationship,Scenario,Create2 - Creating relationships,clauses/create/Create2.feature,clauses.create,False
clauses-create-Create2-23,[23] Fail when creating a relationship that is already bound,Scenario,Create2 - Creating relationships,clauses/create/Create2.feature,clauses.create,False
clauses-create-Create2-24,[24] Fail when creating a relationship using undefined variable in pattern,Scenario,Create2 - Creating relationships,clauses/create/Create2.feature,clauses.create,False
clauses-create-Create3-01,[1] MATCH-CREATE,Scenario,Create3 - Interoperation with other clauses,clauses/create/Create3.feature,clauses.create,True
clauses-create-Create3-02,[2] WITH-CREATE,Scenario,Create3 - Interoperation with other clauses,clauses/create/Create3.feature,clauses.create,True
clauses-create-Create3-03,[3] MATCH-CREATE-WITH-CREATE,Scenario,Create3 - Interoperation with other clauses,clauses/create/Create3.feature,clauses.create,True
clauses-create-Create3-04,[4] MATCH-CREATE: Newly-created nodes not visible to preceding MATCH,Scenario,Create3 - Interoperation with other clauses,clauses/create/Create3.feature,clauses.create,True
clauses-create-Create3-05,[5] WITH-CREATE: Nodes are not created when aliases are applied to variable names,Scenario,Create3 - Interoperation with other clauses,clauses/create/Create3.feature,clauses.create,True
clauses-create-Create3-06,[6] WITH-CREATE: Only a single node is created when an alias is applied to a variable name,Scenario,Create3 - Interoperation with other clauses,clauses/create/Create3.feature,clauses.create,True
clauses-create-Create3-07,[7] WITH-CREATE: Nodes are not created when aliases are applied to variable names multiple times,Scenario,Create3 - Interoperation with other clauses,clauses/create/Create3.feature,clauses.create,True
clauses-create-Create3-08,[8] WITH-CREATE: Only a single node is created when an alias is applied to a variable name multiple times,Scenario,Create3 - Interoperation with other clauses,clauses/create/Create3.feature,clauses.create,True
clauses-create-Create3-09,[9] WITH-CREATE: A bound node should be recognized after projection with WITH + WITH,Scenario,Create3 - Interoperation with other clauses,clauses/create/Create3.feature,clauses.create,True
clauses-create-Create3-10,[10] WITH-UNWIND-CREATE: A bound node should be recognized after projection with WITH + UNWIND,Scenario,Create3 - Interoperation with other clauses,clauses/create/Create3.feature,clauses.create,True
clauses-create-Create3-11,[11] WITH-MERGE-CREATE: A bound node should be recognized after projection with WITH + MERGE node,Scenario,Create3 - Interoperation with other clauses,clauses/create/Create3.feature,clauses.create,True
clauses-create-Create3-12,[12] WITH-MERGE-CREATE: A bound node should be recognized after projection with WITH + MERGE pattern,Scenario,Create3 - Interoperation with other clauses,clauses/create/Create3.feature,clauses.create,True
clauses-create-Create3-13,[13] Merge followed by multiple creates,Scenario,Create3 - Interoperation with other clauses,clauses/create/Create3.feature,clauses.create,True
clauses-create-Create4-01,[1] Generate the movie graph,Scenario,Create4 - Large Create Query,clauses/create/Create4.feature,clauses.create,True
clauses-create-Create4-02,[2] Many CREATE clauses,Scenario,Create4 - Large Create Query,clauses/create/Create4.feature,clauses.create,True
clauses-create-Create5-01,[1] Create a pattern with multiple hops,Scenario,Create5 - Multiple hops create patterns,clauses/create/Create5.feature,clauses.create,True
clauses-create-Create5-02,[2] Create a pattern with multiple hops in the reverse direction,Scenario,Create5 - Multiple hops create patterns,clauses/create/Create5.feature,clauses.create,True
clauses-create-Create5-03,[3] Create a pattern with multiple hops in varying directions,Scenario,Create5 - Multiple hops create patterns,clauses/create/Create5.feature,clauses.create,True
clauses-create-Create5-04,[4] Create a pattern with multiple hops with multiple types and varying directions,Scenario,Create5 - Multiple hops create patterns,clauses/create/Create5.feature,clauses.create,True
clauses-create-Create5-05,[5] Create a pattern with multiple hops and varying directions,Scenario,Create5 - Multiple hops create patterns,clauses/create/Create5.feature,clauses.create,True
clauses-create-Create6-01,[1] Limiting to zero results after creating nodes affects the result set but not the side effects,Scenario,Create6 - Persistence of create clause side effects,clauses/create/Create6.feature,clauses.create,True
clauses-create-Create6-02,[2] Skipping all results after creating nodes affects the result set but not the side effects,Scenario,Create6 - Persistence of create clause side effects,clauses/create/Create6.feature,clauses.create,True
clauses-create-Create6-03,[3] Skipping and limiting to a few results after creating nodes does not affect the result set nor the side effects,Scenario,Create6 - Persistence of create clause side effects,clauses/create/Create6.feature,clauses.create,True
clauses-create-Create6-04,[4] Skipping zero result and limiting to all results after creating nodes does not affect the result set nor the side effects,Scenario,Create6 - Persistence of create clause side effects,clauses/create/Create6.feature,clauses.create,True
clauses-create-Create6-05,[5] Filtering after creating nodes affects the result set but not the side effects,Scenario,Create6 - Persistence of create clause side effects,clauses/create/Create6.feature,clauses.create,True
clauses-create-Create6-06,[6] Aggregating in `RETURN` after creating nodes affects the result set but not the side effects,Scenario,Create6 - Persistence of create clause side effects,clauses/create/Create6.feature,clauses.create,True
clauses-create-Create6-07,[7] Aggregating in `WITH` after creating nodes affects the result set but not the side effects,Scenario,Create6 - Persistence of create clause side effects,clauses/create/Create6.feature,clauses.create,True
clauses-create-Create6-08,[8] Limiting to zero results after creating relationships affects the result set but not the side effects,Scenario,Create6 - Persistence of create clause side effects,clauses/create/Create6.feature,clauses.create,True
clauses-create-Create6-09,[9] Skipping all results after creating relationships affects the result set but not the side effects,Scenario,Create6 - Persistence of create clause side effects,clauses/create/Create6.feature,clauses.create,True
clauses-create-Create6-10,[10] Skipping and limiting to a few results after creating relationships does not affect the result set nor the side effects,Scenario,Create6 - Persistence of create clause side effects,clauses/create/Create6.feature,clauses.create,True
clauses-create-Create6-11,[11] Skipping zero result and limiting to all results after creating relationships does not affect the result set nor the side effects,Scenario,Create6 - Persistence of create clause side effects,clauses/create/Create6.feature,clauses.create,True
clauses-create-Create6-12,[12] Filtering after creating relationships affects the result set but not the side effects,Scenario,Create6 - Persistence of create clause side effects,clauses/create/Create6.feature,clauses.create,True
clauses-create-Create6-13,[13] Aggregating in `RETURN` after creating relationships affects the result set but not the side effects,Scenario,Create6 - Persistence of create clause side effects,clauses/create/Create6.feature,clauses.create,True
clauses-create-Create6-14,[14] Aggregating in `WITH` after creating relationships affects the result set but not the side effects,Scenario,Create6 - Persistence of create clause side effects,clauses/create/Create6.feature,clauses.create,True
clauses-delete-Delete1-01,[1] Delete nodes,Scenario,Delete1 - Deleting nodes,clauses/delete/Delete1.feature,clauses.delete,False
clauses-delete-Delete1-02,[2] Detach delete node,Scenario,Delete1 - Deleting nodes,clauses/delete/Delete1.feature,clauses.delete,False
clauses-delete-Delete1-03,[3] Detach deleting connected nodes and relationships,Scenario,Delete1 - Deleting nodes,clauses/delete/Delete1.feature,clauses.delete,False
clauses-delete-Delete1-04,[4] Delete on null node,Scenario,Delete1 - Deleting nodes,clauses/delete/Delete1.feature,clauses.delete,False
clauses-delete-Delete1-05,[5] Ignore null when deleting node,Scenario,Delete1 - Deleting nodes,clauses/delete/Delete1.feature,clauses.delete,False
clauses-delete-Delete1-06,[6] Detach delete on null node,Scenario,Delete1 - Deleting nodes,clauses/delete/Delete1.feature,clauses.delete,False
clauses-delete-Delete1-07,[7] Failing when deleting connected nodes,Scenario,Delete1 - Deleting nodes,clauses/delete/Delete1.feature,clauses.delete,False
clauses-delete-Delete1-08,[8] Failing when deleting a label,Scenario,Delete1 - Deleting nodes,clauses/delete/Delete1.feature,clauses.delete,False
clauses-delete-Delete2-01,[1] Delete relationships,Scenario,Delete2 - Deleting relationships,clauses/delete/Delete2.feature,clauses.delete,False
clauses-delete-Delete2-02,[2] Delete optionally matched relationship,Scenario,Delete2 - Deleting relationships,clauses/delete/Delete2.feature,clauses.delete,False
clauses-delete-Delete2-03,[3] Delete relationship with bidirectional matching,Scenario,Delete2 - Deleting relationships,clauses/delete/Delete2.feature,clauses.delete,False
clauses-delete-Delete2-04,[4] Ignore null when deleting relationship,Scenario,Delete2 - Deleting relationships,clauses/delete/Delete2.feature,clauses.delete,False
clauses-delete-Delete2-05,[5] Failing when deleting a relationship type,Scenario,Delete2 - Deleting relationships,clauses/delete/Delete2.feature,clauses.delete,False
clauses-delete-Delete3-01,[1] Detach deleting paths,Scenario,Delete3 - Deleting named paths,clauses/delete/Delete3.feature,clauses.delete,True
clauses-delete-Delete3-02,[2] Delete on null path,Scenario,Delete3 - Deleting named paths,clauses/delete/Delete3.feature,clauses.delete,True
clauses-delete-Delete4-01,[1] Undirected expand followed by delete and count,Scenario,Delete4 - Delete clause interoperation with other clauses,clauses/delete/Delete4.feature,clauses.delete,True
clauses-delete-Delete4-02,[2] Undirected variable length expand followed by delete and count,Scenario,Delete4 - Delete clause interoperation with other clauses,clauses/delete/Delete4.feature,clauses.delete,True
clauses-delete-Delete4-03,[3] Create and delete in same query,Scenario,Delete4 - Delete clause interoperation with other clauses,clauses/delete/Delete4.feature,clauses.delete,True
clauses-delete-Delete5-01,[1] Delete node from a list,Scenario,Delete5 - Delete clause interoperation with built-in data types,clauses/delete/Delete5.feature,clauses.delete,False
clauses-delete-Delete5-02,[2] Delete relationship from a list,Scenario,Delete5 - Delete clause interoperation with built-in data types,clauses/delete/Delete5.feature,clauses.delete,False
clauses-delete-Delete5-03,[3] Delete nodes from a map,Scenario,Delete5 - Delete clause interoperation with built-in data types,clauses/delete/Delete5.feature,clauses.delete,False
clauses-delete-Delete5-04,[4] Delete relationships from a map,Scenario,Delete5 - Delete clause interoperation with built-in data types,clauses/delete/Delete5.feature,clauses.delete,False
clauses-delete-Delete5-05,[5] Detach delete nodes from nested map/list,Scenario,Delete5 - Delete clause interoperation with built-in data types,clauses/delete/Delete5.feature,clauses.delete,False
clauses-delete-Delete5-06,[6] Delete relationships from nested map/list,Scenario,Delete5 - Delete clause interoperation with built-in data types,clauses/delete/Delete5.feature,clauses.delete,False
clauses-delete-Delete5-07,[7] Delete paths from nested map/list,Scenario,Delete5 - Delete clause interoperation with built-in data types,clauses/delete/Delete5.feature,clauses.delete,False
clauses-delete-Delete5-08,[8] Failing when using undefined variable in DELETE,Scenario,Delete5 - Delete clause interoperation with built-in data types,clauses/delete/Delete5.feature,clauses.delete,False
clauses-delete-Delete5-09,[9] Failing when deleting an integer expression,Scenario,Delete5 - Delete clause interoperation with built-in data types,clauses/delete/Delete5.feature,clauses.delete,False
clauses-delete-Delete6-01,[1] Limiting to zero results after deleting nodes affects the result set but not the side effects,Scenario,Delete6 - Persistence of delete clause side effects,clauses/delete/Delete6.feature,clauses.delete,True
clauses-delete-Delete6-02,[2] Skipping all results after deleting nodes affects the result set but not the side effects,Scenario,Delete6 - Persistence of delete clause side effects,clauses/delete/Delete6.feature,clauses.delete,True
clauses-delete-Delete6-03,[3] Skipping and limiting to a few results after deleting nodes affects the result set but not the side effects,Scenario,Delete6 - Persistence of delete clause side effects,clauses/delete/Delete6.feature,clauses.delete,True
clauses-delete-Delete6-04,[4] Skipping zero results and limiting to all results after deleting nodes does not affect the result set nor the side effects,Scenario,Delete6 - Persistence of delete clause side effects,clauses/delete/Delete6.feature,clauses.delete,True
clauses-delete-Delete6-05,[5] Filtering after deleting nodes affects the result set but not the side effects,Scenario,Delete6 - Persistence of delete clause side effects,clauses/delete/Delete6.feature,clauses.delete,True
clauses-delete-Delete6-06,[6] Aggregating in `RETURN` after deleting nodes affects the result set but not the side effects,Scenario,Delete6 - Persistence of delete clause side effects,clauses/delete/Delete6.feature,clauses.delete,True
clauses-delete-Delete6-07,[7] Aggregating in `WITH` after deleting nodes affects the result set but not the side effects,Scenario,Delete6 - Persistence of delete clause side effects,clauses/delete/Delete6.feature,clauses.delete,True
clauses-delete-Delete6-08,[8] Limiting to zero results after deleting relationships affects the result set but not the side effects,Scenario,Delete6 - Persistence of delete clause side effects,clauses/delete/Delete6.feature,clauses.delete,True
clauses-delete-Delete6-09,[9] Skipping all results after deleting relationships affects the result set but not the side effects,Scenario,Delete6 - Persistence of delete clause side effects,clauses/delete/Delete6.feature,clauses.delete,True
clauses-delete-Delete6-10,[10] Skipping and limiting to a few results after deleting relationships affects the result set but not the side effects,Scenario,Delete6 - Persistence of delete clause side effects,clauses/delete/Delete6.feature,clauses.delete,True
clauses-delete-Delete6-11,[11] Skipping zero result and limiting to all results after deleting relationships does not affect the result set nor the side effects,Scenario,Delete6 - Persistence of delete clause side effects,clauses/delete/Delete6.feature,clauses.delete,True
clauses-delete-Delete6-12,[12] Filtering after deleting relationships affects the result set but not the side effects,Scenario,Delete6 - Persistence of delete clause side effects,clauses/delete/Delete6.feature,clauses.delete,True
clauses-delete-Delete6-13,[13] Aggregating in `RETURN` after deleting relationships affects the result set but not the side effects,Scenario,Delete6 - Persistence of delete clause side effects,clauses/delete/Delete6.feature,clauses.delete,True
clauses-delete-Delete6-14,[14] Aggregating in `WITH` after deleting relationships affects the result set but not the side effects,Scenario,Delete6 - Persistence of delete clause side effects,clauses/delete/Delete6.feature,clauses.delete,True
clauses-match-Match1-01,[1] Match non-existent nodes returns empty,Scenario,Match1 - Match nodes,clauses/match/Match1.feature,clauses.match,False
clauses-match-Match1-02,[2] Matching all nodes,Scenario,Match1 - Match nodes,clauses/match/Match1.feature,clauses.match,False
clauses-match-Match1-03,[3] Matching nodes using multiple labels,Scenario,Match1 - Match nodes,clauses/match/Match1.feature,clauses.match,False
clauses-match-Match1-04,[4] Simple node inline property predicate,Scenario,Match1 - Match nodes,clauses/match/Match1.feature,clauses.match,False
clauses-match-Match1-05,[5] Use multiple MATCH clauses to do a Cartesian product,Scenario,Match1 - Match nodes,clauses/match/Match1.feature,clauses.match,False
clauses-match-Match1-06,[6] Fail when using parameter as node predicate in MATCH,Scenario,Match1 - Match nodes,clauses/match/Match1.feature,clauses.match,False
clauses-match-Match1-07,[7] Fail when a relationship has the same variable in a preceding MATCH,Scenario Outline,Match1 - Match nodes,clauses/match/Match1.feature,clauses.match,False
clauses-match-Match1-08,[8] Fail when a path has the same variable in a preceding MATCH,Scenario Outline,Match1 - Match nodes,clauses/match/Match1.feature,clauses.match,False
clauses-match-Match1-09,[9] Fail when a relationship has the same variable in the same pattern,Scenario Outline,Match1 - Match nodes,clauses/match/Match1.feature,clauses.match,False
clauses-match-Match1-10,[10] Fail when a path has the same variable in the same pattern,Scenario Outline,Match1 - Match nodes,clauses/match/Match1.feature,clauses.match,False
clauses-match-Match1-11,[11] Fail when matching a node variable bound to a value,Scenario Outline,Match1 - Match nodes,clauses/match/Match1.feature,clauses.match,False
clauses-match-Match2-01,[1] Match non-existent relationships returns empty,Scenario,Match2 - Match relationships,clauses/match/Match2.feature,clauses.match,False
clauses-match-Match2-02,[2] Matching a relationship pattern using a label predicate on both sides,Scenario,Match2 - Match relationships,clauses/match/Match2.feature,clauses.match,False
clauses-match-Match2-03,[3] Matching a self-loop with an undirected relationship pattern,Scenario,Match2 - Match relationships,clauses/match/Match2.feature,clauses.match,False
clauses-match-Match2-04,[4] Matching a self-loop with a directed relationship pattern,Scenario,Match2 - Match relationships,clauses/match/Match2.feature,clauses.match,False
clauses-match-Match2-05,[5] Match relationship with inline property value,Scenario,Match2 - Match relationships,clauses/match/Match2.feature,clauses.match,False
clauses-match-Match2-06,[6] Match relationships with multiple types,Scenario,Match2 - Match relationships,clauses/match/Match2.feature,clauses.match,False
clauses-match-Match2-07,[7] Matching twice with conflicting relationship types on same relationship,Scenario,Match2 - Match relationships,clauses/match/Match2.feature,clauses.match,False
clauses-match-Match2-08,[8] Fail when using parameter as relationship predicate in MATCH,Scenario,Match2 - Match relationships,clauses/match/Match2.feature,clauses.match,False
clauses-match-Match2-09,[9] Fail when a node has the same variable in a preceding MATCH,Scenario Outline,Match2 - Match relationships,clauses/match/Match2.feature,clauses.match,False
clauses-match-Match2-10,[10] Fail when a path has the same variable in a preceding MATCH,Scenario Outline,Match2 - Match relationships,clauses/match/Match2.feature,clauses.match,False
clauses-match-Match2-11,[11] Fail when a node has the same variable in the same pattern,Scenario Outline,Match2 - Match relationships,clauses/match/Match2.feature,clauses.match,False
clauses-match-Match2-12,[12] Fail when a path has the same variable in the same pattern,Scenario Outline,Match2 - Match relationships,clauses/match/Match2.feature,clauses.match,False
clauses-match-Match2-13,[13] Fail when matching a relationship variable bound to a value,Scenario Outline,Match2 - Match relationships,clauses/match/Match2.feature,clauses.match,False
clauses-match-Match3-01,[1] Get neighbours,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-02,[2] Directed match of a simple relationship,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-03,[3] Undirected match on simple relationship graph,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-04,[4] Get two related nodes,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-05,[5] Return two subgraphs with bound undirected relationship,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-06,[6] Matching a relationship pattern using a label predicate,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-07,[7] Matching nodes with many labels,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-08,[8] Matching using relationship predicate with multiples of the same type,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-09,[9] Get related to related to,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-10,[10] Matching using self-referencing pattern returns no result,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-11,[11] Undirected match in self-relationship graph,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-12,[12] Undirected match of self-relationship in self-relationship graph,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-13,[13] Directed match on self-relationship graph,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-14,[14] Directed match of self-relationship on self-relationship graph,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-15,"[15] Mixing directed and undirected pattern parts with self-relationship, simple",Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-16,"[16] Mixing directed and undirected pattern parts with self-relationship, undirected",Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-17,[17] Handling cyclic patterns,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-18,[18] Handling cyclic patterns when separated into two parts,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-19,[19] Two bound nodes pointing to the same node,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-20,[20] Three bound nodes pointing to the same node,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-21,[21] Three bound nodes pointing to the same node with extra connections,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-22,[22] Returning bound nodes that are not part of the pattern,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-23,[23] Matching disconnected patterns,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-24,[24] Matching twice with duplicate relationship types on same relationship,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-25,[25] Matching twice with an additional node label,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-26,[26] Matching twice with a duplicate predicate,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-27,[27] Matching from null nodes should return no results owing to finding no matches,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-28,[28] Matching from null nodes should return no results owing to matches being filtered out,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-29,[29] Fail when re-using a relationship in the same pattern,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match3-30,[30] Fail when using a list or nodes as a node,Scenario,Match3 - Match fixed length patterns,clauses/match/Match3.feature,clauses.match,False
clauses-match-Match4-01,[1] Handling fixed-length variable length pattern,Scenario,Match4 - Match variable length patterns scenarios,clauses/match/Match4.feature,clauses.match,False
clauses-match-Match4-02,[2] Simple variable length pattern,Scenario,Match4 - Match variable length patterns scenarios,clauses/match/Match4.feature,clauses.match,False
clauses-match-Match4-03,[3] Zero-length variable length pattern in the middle of the pattern,Scenario,Match4 - Match variable length patterns scenarios,clauses/match/Match4.feature,clauses.match,False
clauses-match-Match4-04,[4] Matching longer variable length paths,Scenario,Match4 - Match variable length patterns scenarios,clauses/match/Match4.feature,clauses.match,False
clauses-match-Match4-05,[5] Matching variable length pattern with property predicate,Scenario,Match4 - Match variable length patterns scenarios,clauses/match/Match4.feature,clauses.match,False
clauses-match-Match4-06,[6] Matching variable length patterns from a bound node,Scenario,Match4 - Match variable length patterns scenarios,clauses/match/Match4.feature,clauses.match,False
clauses-match-Match4-07,[7] Matching variable length patterns including a bound relationship,Scenario,Match4 - Match variable length patterns scenarios,clauses/match/Match4.feature,clauses.match,False
clauses-match-Match4-08,[8] Matching relationships into a list and matching variable length using the list,Scenario,Match4 - Match variable length patterns scenarios,clauses/match/Match4.feature,clauses.match,False
clauses-match-Match4-09,[9] Fail when asterisk operator is missing,Scenario,Match4 - Match variable length patterns scenarios,clauses/match/Match4.feature,clauses.match,False
clauses-match-Match4-10,[10] Fail on negative bound,Scenario,Match4 - Match variable length patterns scenarios,clauses/match/Match4.feature,clauses.match,False
clauses-match-Match5-01,[1] Handling unbounded variable length match,Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-02,[2] Handling explicitly unbounded variable length match,Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-03,[3] Handling single bounded variable length match 1,Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-04,[4] Handling single bounded variable length match 2,Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-05,[5] Handling single bounded variable length match 3,Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-06,[6] Handling upper and lower bounded variable length match 1,Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-07,[7] Handling upper and lower bounded variable length match 2,Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-08,"[8] Handling symmetrically bounded variable length match, bounds are zero",Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-09,"[9] Handling symmetrically bounded variable length match, bounds are one",Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-10,"[10] Handling symmetrically bounded variable length match, bounds are two",Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-11,"[11] Handling upper and lower bounded variable length match, empty interval 1",Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-12,"[12] Handling upper and lower bounded variable length match, empty interval 2",Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-13,"[13] Handling upper bounded variable length match, empty interval",Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-14,[14] Handling upper bounded variable length match 1,Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-15,[15] Handling upper bounded variable length match 2,Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-16,[16] Handling lower bounded variable length match 1,Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-17,[17] Handling lower bounded variable length match 2,Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-18,[18] Handling lower bounded variable length match 3,Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-19,"[19] Handling a variable length relationship and a standard relationship in chain, zero length 1",Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-20,"[20] Handling a variable length relationship and a standard relationship in chain, zero length 2",Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-21,"[21] Handling a variable length relationship and a standard relationship in chain, single length 1",Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-22,"[22] Handling a variable length relationship and a standard relationship in chain, single length 2",Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-23,"[23] Handling a variable length relationship and a standard relationship in chain, longer 1",Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-24,"[24] Handling a variable length relationship and a standard relationship in chain, longer 2",Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-25,"[25] Handling a variable length relationship and a standard relationship in chain, longer 3",Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-26,[26] Handling mixed relationship patterns and directions 1,Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-27,[27] Handling mixed relationship patterns and directions 2,Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-28,[28] Handling mixed relationship patterns 1,Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match5-29,[29] Handling mixed relationship patterns 2,Scenario,Match5 - Match variable length patterns over given graphs scenarios,clauses/match/Match5.feature,clauses.match,True
clauses-match-Match6-01,[1] Zero-length named path,Scenario,Match6 - Match named paths scenarios,clauses/match/Match6.feature,clauses.match,False
clauses-match-Match6-02,[2] Return a simple path,Scenario,Match6 - Match named paths scenarios,clauses/match/Match6.feature,clauses.match,False
clauses-match-Match6-03,[3] Return a three node path,Scenario,Match6 - Match named paths scenarios,clauses/match/Match6.feature,clauses.match,False
clauses-match-Match6-04,[4] Respecting direction when matching non-existent path,Scenario,Match6 - Match named paths scenarios,clauses/match/Match6.feature,clauses.match,False
clauses-match-Match6-05,[5] Path query should return results in written order,Scenario,Match6 - Match named paths scenarios,clauses/match/Match6.feature,clauses.match,False
clauses-match-Match6-06,[6] Handling direction of named paths,Scenario,Match6 - Match named paths scenarios,clauses/match/Match6.feature,clauses.match,False
clauses-match-Match6-07,[7] Respecting direction when matching existing path,Scenario,Match6 - Match named paths scenarios,clauses/match/Match6.feature,clauses.match,False
clauses-match-Match6-08,[8] Respecting direction when matching non-existent path with multiple directions,Scenario,Match6 - Match named paths scenarios,clauses/match/Match6.feature,clauses.match,False
clauses-match-Match6-09,[9] Longer path query should return results in written order,Scenario,Match6 - Match named paths scenarios,clauses/match/Match6.feature,clauses.match,False
clauses-match-Match6-10,[10] Named path with alternating directed/undirected relationships,Scenario,Match6 - Match named paths scenarios,clauses/match/Match6.feature,clauses.match,False
clauses-match-Match6-11,[11] Named path with multiple alternating directed/undirected relationships,Scenario,Match6 - Match named paths scenarios,clauses/match/Match6.feature,clauses.match,False
clauses-match-Match6-12,[12] Matching path with multiple bidirectional relationships,Scenario,Match6 - Match named paths scenarios,clauses/match/Match6.feature,clauses.match,False
clauses-match-Match6-13,[13] Matching path with both directions should respect other directions,Scenario,Match6 - Match named paths scenarios,clauses/match/Match6.feature,clauses.match,False
clauses-match-Match6-14,[14] Named path with undirected fixed variable length pattern,Scenario,Match6 - Match named paths scenarios,clauses/match/Match6.feature,clauses.match,False
clauses-match-Match6-15,[15] Variable-length named path,Scenario,Match6 - Match named paths scenarios,clauses/match/Match6.feature,clauses.match,False
clauses-match-Match6-16,[16] Return a var length path,Scenario,Match6 - Match named paths scenarios,clauses/match/Match6.feature,clauses.match,False
clauses-match-Match6-17,[17] Return a named var length path of length zero,Scenario,Match6 - Match named paths scenarios,clauses/match/Match6.feature,clauses.match,False
clauses-match-Match6-18,[18] Undirected named path,Scenario,Match6 - Match named paths scenarios,clauses/match/Match6.feature,clauses.match,False
clauses-match-Match6-19,[19] Variable length relationship without lower bound,Scenario,Match6 - Match named paths scenarios,clauses/match/Match6.feature,clauses.match,False
clauses-match-Match6-20,[20] Variable length relationship without bounds,Scenario,Match6 - Match named paths scenarios,clauses/match/Match6.feature,clauses.match,False
clauses-match-Match6-21,[21] Fail when a node has the same variable in a preceding MATCH,Scenario Outline,Match6 - Match named paths scenarios,clauses/match/Match6.feature,clauses.match,False
clauses-match-Match6-22,[22] Fail when a relationship has the same variable in a preceding MATCH,Scenario Outline,Match6 - Match named paths scenarios,clauses/match/Match6.feature,clauses.match,False
clauses-match-Match6-23,[23] Fail when a node has the same variable in the same pattern,Scenario Outline,Match6 - Match named paths scenarios,clauses/match/Match6.feature,clauses.match,False
clauses-match-Match6-24,[24] Fail when a relationship has the same variable in the same pattern,Scenario Outline,Match6 - Match named paths scenarios,clauses/match/Match6.feature,clauses.match,False
clauses-match-Match6-25,[25] Fail when matching a path variable bound to a value,Scenario Outline,Match6 - Match named paths scenarios,clauses/match/Match6.feature,clauses.match,False
clauses-match-Match7-01,[1] Simple OPTIONAL MATCH on empty graph,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-02,[2] OPTIONAL MATCH with previously bound nodes,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-03,[3] OPTIONAL MATCH and bound nodes,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-04,[4] Optionally matching relationship with bound nodes in reverse direction,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-05,[5] Optionally matching relationship with a relationship that is already bound,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-06,[6] Optionally matching relationship with a relationship and node that are both already bound,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-07,[7] MATCH with OPTIONAL MATCH in longer pattern,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-08,[8] Longer pattern with bound nodes without matches,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-09,[9] Longer pattern with bound nodes,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-10,[10] Optionally matching from null nodes should return null,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-11,[11] Return two subgraphs with bound undirected relationship and optional relationship,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-12,[12] Variable length optional relationships,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-13,[13] Variable length optional relationships with bound nodes,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-14,[14] Variable length optional relationships with length predicates,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-15,[15] Variable length patterns and nulls,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-16,[16] Optionally matching named paths - null result,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-17,[17] Optionally matching named paths - existing result,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-18,[18] Named paths inside optional matches with node predicates,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-19,[19] Optionally matching named paths with single and variable length patterns,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-20,"[20] Variable length optional relationships with bound nodes, no matches",Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-21,[21] Handling optional matches between nulls,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-22,[22] MATCH after OPTIONAL MATCH,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-23,[23] OPTIONAL MATCH with labels on the optional end node,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-24,[24] Optionally matching self-loops,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-25,[25] Optionally matching self-loops without matches,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-26,[26] Handling correlated optional matches; first does not match implies second does not match,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-27,[27] Handling optional matches between optionally matched entities,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-28,[28] Handling optional matches with inline label predicate,Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-29,"[29] Satisfies the open world assumption, relationships between same nodes",Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-30,"[30] Satisfies the open world assumption, single relationship",Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match7-31,"[31] Satisfies the open world assumption, relationships between different nodes",Scenario,Match7 - Optional match,clauses/match/Match7.feature,clauses.match,True
clauses-match-Match8-01,[1] Pattern independent of bound variables results in cross product,Scenario,Match8 - Match clause interoperation with other clauses,clauses/match/Match8.feature,clauses.match,True
clauses-match-Match8-02,"[2] Counting rows after MATCH, MERGE, OPTIONAL MATCH",Scenario,Match8 - Match clause interoperation with other clauses,clauses/match/Match8.feature,clauses.match,True
clauses-match-Match8-03,"[3] Matching and disregarding output, then matching again",Scenario,Match8 - Match clause interoperation with other clauses,clauses/match/Match8.feature,clauses.match,True
clauses-match-Match9-01,[1] Variable length relationship variables are lists of relationships,Scenario,Match9 - Match deprecated scenarios,clauses/match/Match9.feature,clauses.match,True
clauses-match-Match9-02,"[2] Return relationships by collecting them as a list - directed, one way",Scenario,Match9 - Match deprecated scenarios,clauses/match/Match9.feature,clauses.match,True
clauses-match-Match9-03,"[3] Return relationships by collecting them as a list - undirected, starting from two extremes",Scenario,Match9 - Match deprecated scenarios,clauses/match/Match9.feature,clauses.match,True
clauses-match-Match9-04,"[4] Return relationships by collecting them as a list - undirected, starting from one extreme",Scenario,Match9 - Match deprecated scenarios,clauses/match/Match9.feature,clauses.match,True
clauses-match-Match9-05,[5] Variable length pattern with label predicate on both sides,Scenario,Match9 - Match deprecated scenarios,clauses/match/Match9.feature,clauses.match,True
clauses-match-Match9-06,"[6] Matching relationships into a list and matching variable length using the list, with bound nodes",Scenario,Match9 - Match deprecated scenarios,clauses/match/Match9.feature,clauses.match,True
clauses-match-Match9-07,"[7] Matching relationships into a list and matching variable length using the list, with bound nodes, wrong direction",Scenario,Match9 - Match deprecated scenarios,clauses/match/Match9.feature,clauses.match,True
clauses-match-Match9-08,[8] Variable length relationship in OPTIONAL MATCH,Scenario,Match9 - Match deprecated scenarios,clauses/match/Match9.feature,clauses.match,True
clauses-match-Match9-09,[9] Optionally matching named paths with variable length patterns,Scenario,Match9 - Match deprecated scenarios,clauses/match/Match9.feature,clauses.match,True
clauses-match-where-MatchWhere1-01,[1] Filter node with node label predicate on multi variables with multiple bindings,Scenario,MatchWhere1 - Filter single variable,clauses/match-where/MatchWhere1.feature,clauses.match-where,False
clauses-match-where-MatchWhere1-02,[2] Filter node with node label predicate on multi variables without any bindings,Scenario,MatchWhere1 - Filter single variable,clauses/match-where/MatchWhere1.feature,clauses.match-where,False
clauses-match-where-MatchWhere1-03,[3] Filter node with property predicate on a single variable with multiple bindings,Scenario,MatchWhere1 - Filter single variable,clauses/match-where/MatchWhere1.feature,clauses.match-where,False
clauses-match-where-MatchWhere1-04,[4] Filter start node of relationship with property predicate on multi variables with multiple bindings,Scenario,MatchWhere1 - Filter single variable,clauses/match-where/MatchWhere1.feature,clauses.match-where,False
clauses-match-where-MatchWhere1-05,[5] Filter end node of relationship with property predicate on multi variables with multiple bindings,Scenario,MatchWhere1 - Filter single variable,clauses/match-where/MatchWhere1.feature,clauses.match-where,False
clauses-match-where-MatchWhere1-06,[6] Filter node with a parameter in a property predicate on multi variables with one binding,Scenario,MatchWhere1 - Filter single variable,clauses/match-where/MatchWhere1.feature,clauses.match-where,False
clauses-match-where-MatchWhere1-07,[7] Filter relationship with relationship type predicate on multi variables with multiple bindings,Scenario,MatchWhere1 - Filter single variable,clauses/match-where/MatchWhere1.feature,clauses.match-where,False
clauses-match-where-MatchWhere1-08,[8] Filter relationship with property predicate on multi variables with multiple bindings,Scenario,MatchWhere1 - Filter single variable,clauses/match-where/MatchWhere1.feature,clauses.match-where,False
clauses-match-where-MatchWhere1-09,[9] Filter relationship with a parameter in a property predicate on multi variables with one binding,Scenario,MatchWhere1 - Filter single variable,clauses/match-where/MatchWhere1.feature,clauses.match-where,False
clauses-match-where-MatchWhere1-10,[10] Filter node with disjunctive property predicate on single variables with multiple bindings,Scenario,MatchWhere1 - Filter single variable,clauses/match-where/MatchWhere1.feature,clauses.match-where,False
clauses-match-where-MatchWhere1-11,[11] Filter relationship with disjunctive relationship type predicate on multi variables with multiple bindings,Scenario,MatchWhere1 - Filter single variable,clauses/match-where/MatchWhere1.feature,clauses.match-where,False
clauses-match-where-MatchWhere1-12,[12] Filter path with path length predicate on multi variables with one binding,Scenario,MatchWhere1 - Filter single variable,clauses/match-where/MatchWhere1.feature,clauses.match-where,False
clauses-match-where-MatchWhere1-13,[13] Filter path with false path length predicate on multi variables with one binding,Scenario,MatchWhere1 - Filter single variable,clauses/match-where/MatchWhere1.feature,clauses.match-where,False
clauses-match-where-MatchWhere1-14,[14] Fail when filtering path with property predicate,Scenario,MatchWhere1 - Filter single variable,clauses/match-where/MatchWhere1.feature,clauses.match-where,False
clauses-match-where-MatchWhere1-15,[15] Fail on aggregation in WHERE,Scenario,MatchWhere1 - Filter single variable,clauses/match-where/MatchWhere1.feature,clauses.match-where,False
clauses-match-where-MatchWhere2-01,[1] Filter nodes with conjunctive two-part property predicate on multi variables with multiple bindings,Scenario,MatchWhere2 - Filter multiple variables,clauses/match-where/MatchWhere2.feature,clauses.match-where,True
clauses-match-where-MatchWhere2-02,[2] Filter node with conjunctive multi-part property predicates on multi variables with multiple bindings,Scenario,MatchWhere2 - Filter multiple variables,clauses/match-where/MatchWhere2.feature,clauses.match-where,True
clauses-match-where-MatchWhere3-01,[1] Join between node identities,Scenario,MatchWhere3 - Equi-Joins on variables,clauses/match-where/MatchWhere3.feature,clauses.match-where,True
clauses-match-where-MatchWhere3-02,[2] Join between node properties of disconnected nodes,Scenario,MatchWhere3 - Equi-Joins on variables,clauses/match-where/MatchWhere3.feature,clauses.match-where,True
clauses-match-where-MatchWhere3-03,[3] Join between node properties of adjacent nodes,Scenario,MatchWhere3 - Equi-Joins on variables,clauses/match-where/MatchWhere3.feature,clauses.match-where,True
clauses-match-where-MatchWhere4-01,[1] Join nodes on inequality,Scenario,MatchWhere4 - Non-Equi-Joins on variables,clauses/match-where/MatchWhere4.feature,clauses.match-where,True
clauses-match-where-MatchWhere4-02,[2] Join with disjunctive multi-part predicates including patterns,Scenario,MatchWhere4 - Non-Equi-Joins on variables,clauses/match-where/MatchWhere4.feature,clauses.match-where,True
clauses-match-where-MatchWhere5-01,[1] Filter out on null,Scenario,MatchWhere5 - Filter on predicate resulting in null,clauses/match-where/MatchWhere5.feature,clauses.match-where,True
clauses-match-where-MatchWhere5-02,[2] Filter out on null if the AND'd predicate evaluates to false,Scenario,MatchWhere5 - Filter on predicate resulting in null,clauses/match-where/MatchWhere5.feature,clauses.match-where,True
clauses-match-where-MatchWhere5-03,[3] Filter out on null if the AND'd predicate evaluates to true,Scenario,MatchWhere5 - Filter on predicate resulting in null,clauses/match-where/MatchWhere5.feature,clauses.match-where,True
clauses-match-where-MatchWhere5-04,[4] Do not filter out on null if the OR'd predicate evaluates to true,Scenario,MatchWhere5 - Filter on predicate resulting in null,clauses/match-where/MatchWhere5.feature,clauses.match-where,True
clauses-match-where-MatchWhere6-01,[1] Filter node with node label predicate on multi variables with multiple bindings after MATCH and OPTIONAL MATCH,Scenario,MatchWhere6 - Filter optional matches,clauses/match-where/MatchWhere6.feature,clauses.match-where,True
clauses-match-where-MatchWhere6-02,[2] Filter node with false node label predicate after OPTIONAL MATCH,Scenario,MatchWhere6 - Filter optional matches,clauses/match-where/MatchWhere6.feature,clauses.match-where,True
clauses-match-where-MatchWhere6-03,[3] Filter node with property predicate on multi variables with multiple bindings after OPTIONAL MATCH,Scenario,MatchWhere6 - Filter optional matches,clauses/match-where/MatchWhere6.feature,clauses.match-where,True
clauses-match-where-MatchWhere6-04,[4] Do not fail when predicates on optionally matched and missed nodes are invalid,Scenario,MatchWhere6 - Filter optional matches,clauses/match-where/MatchWhere6.feature,clauses.match-where,True
clauses-match-where-MatchWhere6-05,[5] Matching and optionally matching with unbound nodes and equality predicate in reverse direction,Scenario,MatchWhere6 - Filter optional matches,clauses/match-where/MatchWhere6.feature,clauses.match-where,True
clauses-match-where-MatchWhere6-06,[6] Join nodes on non-equality of properties – OPTIONAL MATCH and WHERE,Scenario,MatchWhere6 - Filter optional matches,clauses/match-where/MatchWhere6.feature,clauses.match-where,True
clauses-match-where-MatchWhere6-07,[7] Join nodes on non-equality of properties – OPTIONAL MATCH on two relationships and WHERE,Scenario,MatchWhere6 - Filter optional matches,clauses/match-where/MatchWhere6.feature,clauses.match-where,True
clauses-match-where-MatchWhere6-08,[8] Join nodes on non-equality of properties – Two OPTIONAL MATCH clauses and WHERE,Scenario,MatchWhere6 - Filter optional matches,clauses/match-where/MatchWhere6.feature,clauses.match-where,True
clauses-merge-Merge1-01,[1] Merge node when no nodes exist,Scenario,Merge1 - Merge node,clauses/merge/Merge1.feature,clauses.merge,False
clauses-merge-Merge1-02,[2] Merge node with label,Scenario,Merge1 - Merge node,clauses/merge/Merge1.feature,clauses.merge,False
clauses-merge-Merge1-03,[3] Merge node with label when it exists,Scenario,Merge1 - Merge node,clauses/merge/Merge1.feature,clauses.merge,False
clauses-merge-Merge1-04,"[4] Merge node should create when it doesn't match, properties",Scenario,Merge1 - Merge node,clauses/merge/Merge1.feature,clauses.merge,False
clauses-merge-Merge1-05,"[5] Merge node should create when it doesn't match, properties and label",Scenario,Merge1 - Merge node,clauses/merge/Merge1.feature,clauses.merge,False
clauses-merge-Merge1-06,[6] Merge node with prop and label,Scenario,Merge1 - Merge node,clauses/merge/Merge1.feature,clauses.merge,False
clauses-merge-Merge1-07,[7] Merge should work when finding multiple elements,Scenario,Merge1 - Merge node,clauses/merge/Merge1.feature,clauses.merge,False
clauses-merge-Merge1-08,[8] Merge should handle argument properly,Scenario,Merge1 - Merge node,clauses/merge/Merge1.feature,clauses.merge,False
clauses-merge-Merge1-09,[9] Merge should support updates while merging,Scenario,Merge1 - Merge node,clauses/merge/Merge1.feature,clauses.merge,False
clauses-merge-Merge1-10,[10] Merge must properly handle multiple labels,Scenario,Merge1 - Merge node,clauses/merge/Merge1.feature,clauses.merge,False
clauses-merge-Merge1-11,[11] Merge should be able to merge using property of bound node,Scenario,Merge1 - Merge node,clauses/merge/Merge1.feature,clauses.merge,False
clauses-merge-Merge1-12,[12] Merge should be able to merge using property of freshly created node,Scenario,Merge1 - Merge node,clauses/merge/Merge1.feature,clauses.merge,False
clauses-merge-Merge1-13,[13] Merge should bind a path,Scenario,Merge1 - Merge node,clauses/merge/Merge1.feature,clauses.merge,False
clauses-merge-Merge1-14,[14] Merges should not be able to match on deleted nodes,Scenario,Merge1 - Merge node,clauses/merge/Merge1.feature,clauses.merge,False
clauses-merge-Merge1-15,[15] Fail when merge a node that is already bound,Scenario,Merge1 - Merge node,clauses/merge/Merge1.feature,clauses.merge,False
clauses-merge-Merge1-16,[16] Fail when using parameter as node predicate in MERGE,Scenario,Merge1 - Merge node,clauses/merge/Merge1.feature,clauses.merge,False
clauses-merge-Merge1-17,[17] Fail on merging node with null property,Scenario,Merge1 - Merge node,clauses/merge/Merge1.feature,clauses.merge,False
clauses-merge-Merge2-01,[1] Merge node with label add label on create,Scenario,Merge2 - Merge node - on create,clauses/merge/Merge2.feature,clauses.merge,False
clauses-merge-Merge2-02,[2] ON CREATE on created nodes,Scenario,Merge2 - Merge node - on create,clauses/merge/Merge2.feature,clauses.merge,False
clauses-merge-Merge2-03,[3] Merge node with label add property on create,Scenario,Merge2 - Merge node - on create,clauses/merge/Merge2.feature,clauses.merge,False
clauses-merge-Merge2-04,[4] Merge node with label add property on update when it exists,Scenario,Merge2 - Merge node - on create,clauses/merge/Merge2.feature,clauses.merge,False
clauses-merge-Merge2-05,[5] Merge should be able to use properties of bound node in ON CREATE,Scenario,Merge2 - Merge node - on create,clauses/merge/Merge2.feature,clauses.merge,False
clauses-merge-Merge2-06,[6] Fail when using undefined variable in ON CREATE,Scenario,Merge2 - Merge node - on create,clauses/merge/Merge2.feature,clauses.merge,False
clauses-merge-Merge3-01,[1] Merge should be able to set labels on match,Scenario,Merge3 - Merge node - on match,clauses/merge/Merge3.feature,clauses.merge,False
clauses-merge-Merge3-02,[2] Merge node with label add label on match when it exists,Scenario,Merge3 - Merge node - on match,clauses/merge/Merge3.feature,clauses.merge,False
clauses-merge-Merge3-03,[3] Merge node and set property on match,Scenario,Merge3 - Merge node - on match,clauses/merge/Merge3.feature,clauses.merge,False
clauses-merge-Merge3-04,[4] Merge should be able to use properties of bound node in ON MATCH,Scenario,Merge3 - Merge node - on match,clauses/merge/Merge3.feature,clauses.merge,False
clauses-merge-Merge3-05,[5] Fail when using undefined variable in ON MATCH,Scenario,Merge3 - Merge node - on match,clauses/merge/Merge3.feature,clauses.merge,False
clauses-merge-Merge4-01,[1] Merge should be able to set labels on match and on create,Scenario,Merge4 - Merge node - on match and on create,clauses/merge/Merge4.feature,clauses.merge,True
clauses-merge-Merge4-02,[2] Merge should be able to use properties of bound node in ON MATCH and ON CREATE,Scenario,Merge4 - Merge node - on match and on create,clauses/merge/Merge4.feature,clauses.merge,True
clauses-merge-Merge5-01,[1] Creating a relationship,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-02,[2] Matching a relationship,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-03,[3] Matching two relationships,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-04,[4] Using bound variables from other updating clause,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-05,[5] Filtering relationships,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-06,[6] Creating relationship when all matches filtered out,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-07,[7] Matching incoming relationship,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-08,[8] Creating relationship with property,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-09,[9] Creating relationship using merged nodes,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-10,[10] Merge should bind a path,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-11,[11] Use outgoing direction when unspecified,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-12,[12] Match outgoing relationship when direction unspecified,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-13,[13] Match both incoming and outgoing relationships when direction unspecified,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-14,[14] Using list properties via variable,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-15,[15] Matching using list property,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-16,[16] Aliasing of existing nodes 1,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-17,[17] Aliasing of existing nodes 2,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-18,[18] Double aliasing of existing nodes 1,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-19,[19] Double aliasing of existing nodes 2,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-20,[20] Do not match on deleted entities,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-21,[21] Do not match on deleted relationships,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-22,[22] Fail when imposing new predicates on a variable that is already bound,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-23,[23] Fail when merging relationship without type,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-24,"[24] Fail when merging relationship without type, no colon",Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-25,[25] Fail when merging relationship with more than one type,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-26,[26] Fail when merging relationship that is already bound,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-27,[27] Fail when using parameter as relationship predicate in MERGE,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-28,[28] Fail when using variable length relationship in MERGE,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge5-29,[29] Fail on merging relationship with null property,Scenario,Merge5 - Merge relationships,clauses/merge/Merge5.feature,clauses.merge,False
clauses-merge-Merge6-01,[1] Using ON CREATE on a node,Scenario,Merge6 - Merge relationships - on create,clauses/merge/Merge6.feature,clauses.merge,True
clauses-merge-Merge6-02,[2] Using ON CREATE on a relationship,Scenario,Merge6 - Merge relationships - on create,clauses/merge/Merge6.feature,clauses.merge,True
clauses-merge-Merge6-03,[3] Updating one property with ON CREATE,Scenario,Merge6 - Merge relationships - on create,clauses/merge/Merge6.feature,clauses.merge,True
clauses-merge-Merge6-04,[4] Null-setting one property with ON CREATE,Scenario,Merge6 - Merge relationships - on create,clauses/merge/Merge6.feature,clauses.merge,True
clauses-merge-Merge6-05,[6] Copying properties from node with ON CREATE,Scenario,Merge6 - Merge relationships - on create,clauses/merge/Merge6.feature,clauses.merge,True
clauses-merge-Merge6-06,[7] Copying properties from literal map with ON CREATE,Scenario,Merge6 - Merge relationships - on create,clauses/merge/Merge6.feature,clauses.merge,True
clauses-merge-Merge7-01,[1] Using ON MATCH on created node,Scenario,Merge7 - Merge relationships - on match,clauses/merge/Merge7.feature,clauses.merge,True
clauses-merge-Merge7-02,[2] Using ON MATCH on created relationship,Scenario,Merge7 - Merge relationships - on match,clauses/merge/Merge7.feature,clauses.merge,True
clauses-merge-Merge7-03,[3] Using ON MATCH on a relationship,Scenario,Merge7 - Merge relationships - on match,clauses/merge/Merge7.feature,clauses.merge,True
clauses-merge-Merge7-04,[4] Copying properties from node with ON MATCH,Scenario,Merge7 - Merge relationships - on match,clauses/merge/Merge7.feature,clauses.merge,True
clauses-merge-Merge7-05,[5] Copying properties from literal map with ON MATCH,Scenario,Merge7 - Merge relationships - on match,clauses/merge/Merge7.feature,clauses.merge,True
clauses-merge-Merge8-01,[1] Using ON CREATE and ON MATCH,Scenario,Merge8 - Merge relationships - on match and on create,clauses/merge/Merge8.feature,clauses.merge,True
clauses-merge-Merge9-01,[1] UNWIND with one MERGE,Scenario,Merge9 - Merge clause interoperation with other clauses,clauses/merge/Merge9.feature,clauses.merge,True
clauses-merge-Merge9-02,[2] UNWIND with multiple MERGE,Scenario,Merge9 - Merge clause interoperation with other clauses,clauses/merge/Merge9.feature,clauses.merge,True
clauses-merge-Merge9-03,[3] Mixing MERGE with CREATE,Scenario,Merge9 - Merge clause interoperation with other clauses,clauses/merge/Merge9.feature,clauses.merge,True
clauses-merge-Merge9-04,[4] MERGE after WITH with predicate and WITH with aggregation,Scenario,Merge9 - Merge clause interoperation with other clauses,clauses/merge/Merge9.feature,clauses.merge,True
clauses-remove-Remove1-01,[1] Remove a single node property,Scenario,Remove1 - Remove a Property,clauses/remove/Remove1.feature,clauses.remove,True
clauses-remove-Remove1-02,[2] Remove multiple node properties,Scenario,Remove1 - Remove a Property,clauses/remove/Remove1.feature,clauses.remove,True
clauses-remove-Remove1-03,[3] Remove a single relationship property,Scenario,Remove1 - Remove a Property,clauses/remove/Remove1.feature,clauses.remove,True
clauses-remove-Remove1-04,[4] Remove multiple relationship properties,Scenario,Remove1 - Remove a Property,clauses/remove/Remove1.feature,clauses.remove,True
clauses-remove-Remove1-05,[5] Ignore null when removing property from a node,Scenario,Remove1 - Remove a Property,clauses/remove/Remove1.feature,clauses.remove,True
clauses-remove-Remove1-06,[6] Ignore null when removing property from a relationship,Scenario,Remove1 - Remove a Property,clauses/remove/Remove1.feature,clauses.remove,True
clauses-remove-Remove1-07,[7] Remove a missing node property,Scenario,Remove1 - Remove a Property,clauses/remove/Remove1.feature,clauses.remove,True
clauses-remove-Remove2-01,[1] Remove a single label from a node with a single label,Scenario,Remove2 - Remove a Label,clauses/remove/Remove2.feature,clauses.remove,True
clauses-remove-Remove2-02,[2] Remove a single label from a node with two labels,Scenario,Remove2 - Remove a Label,clauses/remove/Remove2.feature,clauses.remove,True
clauses-remove-Remove2-03,[3] Remove two labels from a node with three labels,Scenario,Remove2 - Remove a Label,clauses/remove/Remove2.feature,clauses.remove,True
clauses-remove-Remove2-04,[4] Remove a non-existent node label,Scenario,Remove2 - Remove a Label,clauses/remove/Remove2.feature,clauses.remove,True
clauses-remove-Remove2-05,[5] Ignore null when removing a node label,Scenario,Remove2 - Remove a Label,clauses/remove/Remove2.feature,clauses.remove,True
clauses-remove-Remove3-01,[1] Limiting to zero results after removing a property from nodes affects the result set but not the side effects,Scenario,Remove3 - Persistence of remove clause side effects,clauses/remove/Remove3.feature,clauses.remove,True
clauses-remove-Remove3-02,[2] Skipping all results after removing a property from nodes affects the result set but not the side effects,Scenario,Remove3 - Persistence of remove clause side effects,clauses/remove/Remove3.feature,clauses.remove,True
clauses-remove-Remove3-03,[3] Skipping and limiting to a few results after removing a property from nodes affects the result set but not the side effects,Scenario,Remove3 - Persistence of remove clause side effects,clauses/remove/Remove3.feature,clauses.remove,True
clauses-remove-Remove3-04,[4] Skipping zero results and limiting to all results after removing a property from nodes does not affect the result set nor the side effects,Scenario,Remove3 - Persistence of remove clause side effects,clauses/remove/Remove3.feature,clauses.remove,True
clauses-remove-Remove3-05,[5] Filtering after removing a property from nodes affects the result set but not the side effects,Scenario,Remove3 - Persistence of remove clause side effects,clauses/remove/Remove3.feature,clauses.remove,True
clauses-remove-Remove3-06,[6] Aggregating in `RETURN` after removing a property from nodes affects the result set but not the side effects,Scenario,Remove3 - Persistence of remove clause side effects,clauses/remove/Remove3.feature,clauses.remove,True
clauses-remove-Remove3-07,[7] Aggregating in `WITH` after removing a property from nodes affects the result set but not the side effects,Scenario,Remove3 - Persistence of remove clause side effects,clauses/remove/Remove3.feature,clauses.remove,True
clauses-remove-Remove3-08,[8] Limiting to zero results after removing a label from nodes affects the result set but not the side effects,Scenario,Remove3 - Persistence of remove clause side effects,clauses/remove/Remove3.feature,clauses.remove,True
clauses-remove-Remove3-09,[9] Skipping all results after removing a label from nodes affects the result set but not the side effects,Scenario,Remove3 - Persistence of remove clause side effects,clauses/remove/Remove3.feature,clauses.remove,True
clauses-remove-Remove3-10,[10] Skipping and limiting to a few results after removing a label from nodes affects the result set but not the side effects,Scenario,Remove3 - Persistence of remove clause side effects,clauses/remove/Remove3.feature,clauses.remove,True
clauses-remove-Remove3-11,[11] Skipping zero result and limiting to all results after removing a label from nodes does not affect the result set nor the side effects,Scenario,Remove3 - Persistence of remove clause side effects,clauses/remove/Remove3.feature,clauses.remove,True
clauses-remove-Remove3-12,[12] Filtering after removing a label from nodes affects the result set but not the side effects,Scenario,Remove3 - Persistence of remove clause side effects,clauses/remove/Remove3.feature,clauses.remove,True
clauses-remove-Remove3-13,[13] Aggregating in `RETURN` after removing a label from nodes affects the result set but not the side effects,Scenario,Remove3 - Persistence of remove clause side effects,clauses/remove/Remove3.feature,clauses.remove,True
clauses-remove-Remove3-14,[14] Aggregating in `WITH` after removing a label from nodes affects the result set but not the side effects,Scenario,Remove3 - Persistence of remove clause side effects,clauses/remove/Remove3.feature,clauses.remove,True
clauses-remove-Remove3-15,[15] Limiting to zero results after removing a property from relationships affects the result set but not the side effects,Scenario,Remove3 - Persistence of remove clause side effects,clauses/remove/Remove3.feature,clauses.remove,True
clauses-remove-Remove3-16,[16] Skipping all results after removing a property from relationships affects the result set but not the side effects,Scenario,Remove3 - Persistence of remove clause side effects,clauses/remove/Remove3.feature,clauses.remove,True
clauses-remove-Remove3-17,[17] Skipping and limiting to a few results after removing a property from relationships affects the result set but not the side effects,Scenario,Remove3 - Persistence of remove clause side effects,clauses/remove/Remove3.feature,clauses.remove,True
clauses-remove-Remove3-18,[18] Skipping zero result and limiting to all results after removing a property from relationships does not affect the result set nor the side effects,Scenario,Remove3 - Persistence of remove clause side effects,clauses/remove/Remove3.feature,clauses.remove,True
clauses-remove-Remove3-19,[19] Filtering after removing a property from relationships affects the result set but not the side effects,Scenario,Remove3 - Persistence of remove clause side effects,clauses/remove/Remove3.feature,clauses.remove,True
clauses-remove-Remove3-20,[20] Aggregating in `RETURN` after removing a property from relationships affects the result set but not the side effects,Scenario,Remove3 - Persistence of remove clause side effects,clauses/remove/Remove3.feature,clauses.remove,True
clauses-remove-Remove3-21,[21] Aggregating in `WITH` after removing a property from relationships affects the result set but not the side effects,Scenario,Remove3 - Persistence of remove clause side effects,clauses/remove/Remove3.feature,clauses.remove,True
clauses-return-Return1-01,[1] Returning a list property,Scenario,Return1 - Return single variable (correct return of values according to their type),clauses/return/Return1.feature,clauses.return,False
clauses-return-Return1-02,[2] Fail when returning an undefined variable,Scenario,Return1 - Return single variable (correct return of values according to their type),clauses/return/Return1.feature,clauses.return,False
clauses-return-Return2-01,[1] Arithmetic expressions should propagate null values,Scenario,Return2 - Return single expression (correctly projecting an expression),clauses/return/Return2.feature,clauses.return,False
clauses-return-Return2-02,[2] Returning a node property value,Scenario,Return2 - Return single expression (correctly projecting an expression),clauses/return/Return2.feature,clauses.return,False
clauses-return-Return2-03,[3] Missing node property should become null,Scenario,Return2 - Return single expression (correctly projecting an expression),clauses/return/Return2.feature,clauses.return,False
clauses-return-Return2-04,[4] Returning a relationship property value,Scenario,Return2 - Return single expression (correctly projecting an expression),clauses/return/Return2.feature,clauses.return,False
clauses-return-Return2-05,[5] Missing relationship property should become null,Scenario,Return2 - Return single expression (correctly projecting an expression),clauses/return/Return2.feature,clauses.return,False
clauses-return-Return2-06,[6] Adding a property and a literal in projection,Scenario,Return2 - Return single expression (correctly projecting an expression),clauses/return/Return2.feature,clauses.return,False
clauses-return-Return2-07,[7] Adding list properties in projection,Scenario,Return2 - Return single expression (correctly projecting an expression),clauses/return/Return2.feature,clauses.return,False
clauses-return-Return2-08,[8] Returning label predicate expression,Scenario,Return2 - Return single expression (correctly projecting an expression),clauses/return/Return2.feature,clauses.return,False
clauses-return-Return2-09,[9] Returning a projected map,Scenario,Return2 - Return single expression (correctly projecting an expression),clauses/return/Return2.feature,clauses.return,False
clauses-return-Return2-10,[10] Return count aggregation over an empty graph,Scenario,Return2 - Return single expression (correctly projecting an expression),clauses/return/Return2.feature,clauses.return,False
clauses-return-Return2-11,[11] RETURN does not lose precision on large integers,Scenario,Return2 - Return single expression (correctly projecting an expression),clauses/return/Return2.feature,clauses.return,False
clauses-return-Return2-12,[12] Projecting a list of nodes and relationships,Scenario,Return2 - Return single expression (correctly projecting an expression),clauses/return/Return2.feature,clauses.return,False
clauses-return-Return2-13,[13] Projecting a map of nodes and relationships,Scenario,Return2 - Return single expression (correctly projecting an expression),clauses/return/Return2.feature,clauses.return,False
clauses-return-Return2-14,[14] Do not fail when returning type of deleted relationships,Scenario,Return2 - Return single expression (correctly projecting an expression),clauses/return/Return2.feature,clauses.return,False
clauses-return-Return2-15,[15] Fail when returning properties of deleted nodes,Scenario,Return2 - Return single expression (correctly projecting an expression),clauses/return/Return2.feature,clauses.return,False
clauses-return-Return2-16,[16] Fail when returning labels of deleted nodes,Scenario,Return2 - Return single expression (correctly projecting an expression),clauses/return/Return2.feature,clauses.return,False
clauses-return-Return2-17,[17] Fail when returning properties of deleted relationships,Scenario,Return2 - Return single expression (correctly projecting an expression),clauses/return/Return2.feature,clauses.return,False
clauses-return-Return2-18,[18] Fail on projecting a non-existent function,Scenario,Return2 - Return single expression (correctly projecting an expression),clauses/return/Return2.feature,clauses.return,False
clauses-return-Return3-01,[1] Returning multiple expressions,Scenario,Return3 - Return multiple expressions (if column order correct),clauses/return/Return3.feature,clauses.return,True
clauses-return-Return3-02,[2] Returning multiple node property values,Scenario,Return3 - Return multiple expressions (if column order correct),clauses/return/Return3.feature,clauses.return,True
clauses-return-Return3-03,[3] Projecting nodes and relationships,Scenario,Return3 - Return multiple expressions (if column order correct),clauses/return/Return3.feature,clauses.return,True
clauses-return-Return4-01,[1] Honour the column name for RETURN items,Scenario,Return4 - Column renaming,clauses/return/Return4.feature,clauses.return,False
clauses-return-Return4-02,[2] Support column renaming,Scenario,Return4 - Column renaming,clauses/return/Return4.feature,clauses.return,False
clauses-return-Return4-03,[3] Aliasing expressions,Scenario,Return4 - Column renaming,clauses/return/Return4.feature,clauses.return,False
clauses-return-Return4-04,[4] Keeping used expression 1,Scenario,Return4 - Column renaming,clauses/return/Return4.feature,clauses.return,False
clauses-return-Return4-05,[5] Keeping used expression 2,Scenario,Return4 - Column renaming,clauses/return/Return4.feature,clauses.return,False
clauses-return-Return4-06,[6] Keeping used expression 3,Scenario,Return4 - Column renaming,clauses/return/Return4.feature,clauses.return,False
clauses-return-Return4-07,[7] Keeping used expression 4,Scenario,Return4 - Column renaming,clauses/return/Return4.feature,clauses.return,False
clauses-return-Return4-08,[8] Support column renaming for aggregations,Scenario,Return4 - Column renaming,clauses/return/Return4.feature,clauses.return,False
clauses-return-Return4-09,[9] Handle subexpression in aggregation also occurring as standalone expression with nested aggregation in a literal map,Scenario,Return4 - Column renaming,clauses/return/Return4.feature,clauses.return,False
clauses-return-Return4-10,[10] Fail when returning multiple columns with same name,Scenario,Return4 - Column renaming,clauses/return/Return4.feature,clauses.return,False
clauses-return-Return4-11,[11] Reusing variable names in RETURN,Scenario,Return4 - Column renaming,clauses/return/Return4.feature,clauses.return,False
clauses-return-Return5-01,[1] DISTINCT inside aggregation should work with lists in maps,Scenario,Return5 - Implicit grouping with distinct,clauses/return/Return5.feature,clauses.return,True
clauses-return-Return5-02,[2] DISTINCT on nullable values,Scenario,Return5 - Implicit grouping with distinct,clauses/return/Return5.feature,clauses.return,True
clauses-return-Return5-03,[3] DISTINCT inside aggregation should work with nested lists in maps,Scenario,Return5 - Implicit grouping with distinct,clauses/return/Return5.feature,clauses.return,True
clauses-return-Return5-04,[4] DISTINCT inside aggregation should work with nested lists of maps in maps,Scenario,Return5 - Implicit grouping with distinct,clauses/return/Return5.feature,clauses.return,True
clauses-return-Return5-05,[5] Aggregate on list values,Scenario,Return5 - Implicit grouping with distinct,clauses/return/Return5.feature,clauses.return,True
clauses-return-Return6-01,[1] Return count aggregation over nodes,Scenario,Return6 - Implicit grouping with aggregates,clauses/return/Return6.feature,clauses.return,False
clauses-return-Return6-02,[2] Projecting an arithmetic expression with aggregation,Scenario,Return6 - Implicit grouping with aggregates,clauses/return/Return6.feature,clauses.return,False
clauses-return-Return6-03,[3] Aggregating by a list property has a correct definition of equality,Scenario,Return6 - Implicit grouping with aggregates,clauses/return/Return6.feature,clauses.return,False
clauses-return-Return6-04,[4] Support multiple divisions in aggregate function,Scenario,Return6 - Implicit grouping with aggregates,clauses/return/Return6.feature,clauses.return,False
clauses-return-Return6-05,[5] Aggregates inside normal functions,Scenario,Return6 - Implicit grouping with aggregates,clauses/return/Return6.feature,clauses.return,False
clauses-return-Return6-06,[6] Handle aggregates inside non-aggregate expressions,Scenario,Return6 - Implicit grouping with aggregates,clauses/return/Return6.feature,clauses.return,False
clauses-return-Return6-07,[7] Aggregate on property,Scenario,Return6 - Implicit grouping with aggregates,clauses/return/Return6.feature,clauses.return,False
clauses-return-Return6-08,[8] Handle aggregation on functions,Scenario,Return6 - Implicit grouping with aggregates,clauses/return/Return6.feature,clauses.return,False
clauses-return-Return6-09,[9] Aggregates with arithmetics,Scenario,Return6 - Implicit grouping with aggregates,clauses/return/Return6.feature,clauses.return,False
clauses-return-Return6-10,[10] Multiple aggregates on same variable,Scenario,Return6 - Implicit grouping with aggregates,clauses/return/Return6.feature,clauses.return,False
clauses-return-Return6-11,[11] Counting matches,Scenario,Return6 - Implicit grouping with aggregates,clauses/return/Return6.feature,clauses.return,False
clauses-return-Return6-12,[12] Counting matches per group,Scenario,Return6 - Implicit grouping with aggregates,clauses/return/Return6.feature,clauses.return,False
clauses-return-Return6-13,[13] Returning the minimum length of paths,Scenario,Return6 - Implicit grouping with aggregates,clauses/return/Return6.feature,clauses.return,False
clauses-return-Return6-14,[14] Aggregates in aggregates,Scenario,Return6 - Implicit grouping with aggregates,clauses/return/Return6.feature,clauses.return,False
clauses-return-Return6-15,[15] Using `rand()` in aggregations,Scenario,Return6 - Implicit grouping with aggregates,clauses/return/Return6.feature,clauses.return,False
clauses-return-Return6-16,[16] Aggregation on complex expressions,Scenario,Return6 - Implicit grouping with aggregates,clauses/return/Return6.feature,clauses.return,False
clauses-return-Return6-17,[17] Handle constants and parameters inside an expression which contains an aggregation expression,Scenario,Return6 - Implicit grouping with aggregates,clauses/return/Return6.feature,clauses.return,False
clauses-return-Return6-18,[18] Handle returned variables inside an expression which contains an aggregation expression,Scenario,Return6 - Implicit grouping with aggregates,clauses/return/Return6.feature,clauses.return,False
clauses-return-Return6-19,[19] Handle returned property accesses inside an expression which contains an aggregation expression,Scenario,Return6 - Implicit grouping with aggregates,clauses/return/Return6.feature,clauses.return,False
clauses-return-Return6-20,[20] Fail if not returned variables are used inside an expression which contains an aggregation expression,Scenario,Return6 - Implicit grouping with aggregates,clauses/return/Return6.feature,clauses.return,False
clauses-return-Return6-21,"[21] Fail if more complex expressions, even if returned, are used inside expression which contains an aggregation expression",Scenario,Return6 - Implicit grouping with aggregates,clauses/return/Return6.feature,clauses.return,False
clauses-return-Return7-01,[1] Return all variables,Scenario,Return7 - Return all variables,clauses/return/Return7.feature,clauses.return,False
clauses-return-Return7-02,[2] Fail when using RETURN * without variables in scope,Scenario,Return7 - Return all variables,clauses/return/Return7.feature,clauses.return,False
clauses-return-Return8-01,[1] Return aggregation after With filtering,Scenario,Return8 - Return clause interoperation with other clauses,clauses/return/Return8.feature,clauses.return,True
clauses-return-orderby-ReturnOrderBy1-01,[1] ORDER BY should order booleans in the expected order,Scenario,ReturnOrderBy1 - Order by a single variable (correct order of values according to their type),clauses/return-orderby/ReturnOrderBy1.feature,clauses.return-orderby,True
clauses-return-orderby-ReturnOrderBy1-02,[2] ORDER BY DESC should order booleans in the expected order,Scenario,ReturnOrderBy1 - Order by a single variable (correct order of values according to their type),clauses/return-orderby/ReturnOrderBy1.feature,clauses.return-orderby,True
clauses-return-orderby-ReturnOrderBy1-03,[3] ORDER BY should order strings in the expected order,Scenario,ReturnOrderBy1 - Order by a single variable (correct order of values according to their type),clauses/return-orderby/ReturnOrderBy1.feature,clauses.return-orderby,True
clauses-return-orderby-ReturnOrderBy1-04,[4] ORDER BY DESC should order strings in the expected order,Scenario,ReturnOrderBy1 - Order by a single variable (correct order of values according to their type),clauses/return-orderby/ReturnOrderBy1.feature,clauses.return-orderby,True
clauses-return-orderby-ReturnOrderBy1-05,[5] ORDER BY should order ints in the expected order,Scenario,ReturnOrderBy1 - Order by a single variable (correct order of values according to their type),clauses/return-orderby/ReturnOrderBy1.feature,clauses.return-orderby,True
clauses-return-orderby-ReturnOrderBy1-06,[6] ORDER BY DESC should order ints in the expected order,Scenario,ReturnOrderBy1 - Order by a single variable (correct order of values according to their type),clauses/return-orderby/ReturnOrderBy1.feature,clauses.return-orderby,True
clauses-return-orderby-ReturnOrderBy1-07,[7] ORDER BY should order floats in the expected order,Scenario,ReturnOrderBy1 - Order by a single variable (correct order of values according to their type),clauses/return-orderby/ReturnOrderBy1.feature,clauses.return-orderby,True
clauses-return-orderby-ReturnOrderBy1-08,[8] ORDER BY DESC should order floats in the expected order,Scenario,ReturnOrderBy1 - Order by a single variable (correct order of values according to their type),clauses/return-orderby/ReturnOrderBy1.feature,clauses.return-orderby,True
clauses-return-orderby-ReturnOrderBy1-09,[9] ORDER BY should order lists in the expected order,Scenario,ReturnOrderBy1 - Order by a single variable (correct order of values according to their type),clauses/return-orderby/ReturnOrderBy1.feature,clauses.return-orderby,True
clauses-return-orderby-ReturnOrderBy1-10,[10] ORDER BY DESC should order lists in the expected order,Scenario,ReturnOrderBy1 - Order by a single variable (correct order of values according to their type),clauses/return-orderby/ReturnOrderBy1.feature,clauses.return-orderby,True
clauses-return-orderby-ReturnOrderBy1-11,[11] ORDER BY should order distinct types in the expected order,Scenario,ReturnOrderBy1 - Order by a single variable (correct order of values according to their type),clauses/return-orderby/ReturnOrderBy1.feature,clauses.return-orderby,True
clauses-return-orderby-ReturnOrderBy1-12,[12] ORDER BY DESC should order distinct types in the expected order,Scenario,ReturnOrderBy1 - Order by a single variable (correct order of values according to their type),clauses/return-orderby/ReturnOrderBy1.feature,clauses.return-orderby,True
clauses-return-orderby-ReturnOrderBy2-01,[1] ORDER BY should return results in ascending order,Scenario,ReturnOrderBy2 - Order by a single expression (order of projection),clauses/return-orderby/ReturnOrderBy2.feature,clauses.return-orderby,False
clauses-return-orderby-ReturnOrderBy2-02,[2] ORDER BY DESC should return results in descending order,Scenario,ReturnOrderBy2 - Order by a single expression (order of projection),clauses/return-orderby/ReturnOrderBy2.feature,clauses.return-orderby,False
clauses-return-orderby-ReturnOrderBy2-03,[3] Sort on aggregated function,Scenario,ReturnOrderBy2 - Order by a single expression (order of projection),clauses/return-orderby/ReturnOrderBy2.feature,clauses.return-orderby,False
clauses-return-orderby-ReturnOrderBy2-04,[4] Support sort and distinct,Scenario,ReturnOrderBy2 - Order by a single expression (order of projection),clauses/return-orderby/ReturnOrderBy2.feature,clauses.return-orderby,False
clauses-return-orderby-ReturnOrderBy2-05,[5] Support ordering by a property after being distinct-ified,Scenario,ReturnOrderBy2 - Order by a single expression (order of projection),clauses/return-orderby/ReturnOrderBy2.feature,clauses.return-orderby,False
clauses-return-orderby-ReturnOrderBy2-06,[6] Count star should count everything in scope,Scenario,ReturnOrderBy2 - Order by a single expression (order of projection),clauses/return-orderby/ReturnOrderBy2.feature,clauses.return-orderby,False
clauses-return-orderby-ReturnOrderBy2-07,[7] Ordering with aggregation,Scenario,ReturnOrderBy2 - Order by a single expression (order of projection),clauses/return-orderby/ReturnOrderBy2.feature,clauses.return-orderby,False
clauses-return-orderby-ReturnOrderBy2-08,[8] Returning all variables with ordering,Scenario,ReturnOrderBy2 - Order by a single expression (order of projection),clauses/return-orderby/ReturnOrderBy2.feature,clauses.return-orderby,False
clauses-return-orderby-ReturnOrderBy2-09,[9] Using aliased DISTINCT expression in ORDER BY,Scenario,ReturnOrderBy2 - Order by a single expression (order of projection),clauses/return-orderby/ReturnOrderBy2.feature,clauses.return-orderby,False
clauses-return-orderby-ReturnOrderBy2-10,[10] Returned columns do not change from using ORDER BY,Scenario,ReturnOrderBy2 - Order by a single expression (order of projection),clauses/return-orderby/ReturnOrderBy2.feature,clauses.return-orderby,False
clauses-return-orderby-ReturnOrderBy2-11,[11] Aggregates ordered by arithmetics,Scenario,ReturnOrderBy2 - Order by a single expression (order of projection),clauses/return-orderby/ReturnOrderBy2.feature,clauses.return-orderby,False
clauses-return-orderby-ReturnOrderBy2-12,[12] Aggregation of named paths,Scenario,ReturnOrderBy2 - Order by a single expression (order of projection),clauses/return-orderby/ReturnOrderBy2.feature,clauses.return-orderby,False
clauses-return-orderby-ReturnOrderBy2-13,[13] Fail when sorting on variable removed by DISTINCT,Scenario,ReturnOrderBy2 - Order by a single expression (order of projection),clauses/return-orderby/ReturnOrderBy2.feature,clauses.return-orderby,False
clauses-return-orderby-ReturnOrderBy2-14,[14] Fail on aggregation in ORDER BY after RETURN,Scenario,ReturnOrderBy2 - Order by a single expression (order of projection),clauses/return-orderby/ReturnOrderBy2.feature,clauses.return-orderby,False
clauses-return-orderby-ReturnOrderBy3-01,[1] Sort on aggregate function and normal property,Scenario,ReturnOrderBy3 - Order by multiple expressions (order obey priority of expressions),clauses/return-orderby/ReturnOrderBy3.feature,clauses.return-orderby,True
clauses-return-orderby-ReturnOrderBy4-01,[1] ORDER BY of a column introduced in RETURN should return salient results in ascending order,Scenario,ReturnOrderBy4 - Order by in combination with projection,clauses/return-orderby/ReturnOrderBy4.feature,clauses.return-orderby,True
clauses-return-orderby-ReturnOrderBy4-02,[2] Handle projections with ORDER BY,Scenario,ReturnOrderBy4 - Order by in combination with projection,clauses/return-orderby/ReturnOrderBy4.feature,clauses.return-orderby,True
clauses-return-orderby-ReturnOrderBy5-01,[1] Renaming columns before ORDER BY should return results in ascending order,Scenario,ReturnOrderBy5 - Order by in combination with column renaming,clauses/return-orderby/ReturnOrderBy5.feature,clauses.return-orderby,True
clauses-return-orderby-ReturnOrderBy6-01,[1] Handle constants and parameters inside an order by item which contains an aggregation expression,Scenario,ReturnOrderBy6 - Aggregation expressions in order by,clauses/return-orderby/ReturnOrderBy6.feature,clauses.return-orderby,False
clauses-return-orderby-ReturnOrderBy6-02,[2] Handle returned aliases inside an order by item which contains an aggregation expression,Scenario,ReturnOrderBy6 - Aggregation expressions in order by,clauses/return-orderby/ReturnOrderBy6.feature,clauses.return-orderby,False
clauses-return-orderby-ReturnOrderBy6-03,[3] Handle returned property accesses inside an order by item which contains an aggregation expression,Scenario,ReturnOrderBy6 - Aggregation expressions in order by,clauses/return-orderby/ReturnOrderBy6.feature,clauses.return-orderby,False
clauses-return-orderby-ReturnOrderBy6-04,[4] Fail if not returned variables are used inside an order by item which contains an aggregation expression,Scenario,ReturnOrderBy6 - Aggregation expressions in order by,clauses/return-orderby/ReturnOrderBy6.feature,clauses.return-orderby,False
clauses-return-orderby-ReturnOrderBy6-05,"[5] Fail if more complex expressions, even if returned, are used inside an order by item which contains an aggregation expression",Scenario,ReturnOrderBy6 - Aggregation expressions in order by,clauses/return-orderby/ReturnOrderBy6.feature,clauses.return-orderby,False
clauses-return-skip-limit-ReturnSkipLimit1-01,[1] Start the result from the second row,Scenario,ReturnSkipLimit1 - Skip,clauses/return-skip-limit/ReturnSkipLimit1.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit1-02,[2] Start the result from the second row by param,Scenario,ReturnSkipLimit1 - Skip,clauses/return-skip-limit/ReturnSkipLimit1.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit1-03,[3] SKIP with an expression that does not depend on variables,Scenario,ReturnSkipLimit1 - Skip,clauses/return-skip-limit/ReturnSkipLimit1.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit1-04,[4] Accept skip zero,Scenario,ReturnSkipLimit1 - Skip,clauses/return-skip-limit/ReturnSkipLimit1.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit1-05,[5] SKIP with an expression that depends on variables should fail,Scenario,ReturnSkipLimit1 - Skip,clauses/return-skip-limit/ReturnSkipLimit1.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit1-06,[6] Negative parameter for SKIP should fail,Scenario,ReturnSkipLimit1 - Skip,clauses/return-skip-limit/ReturnSkipLimit1.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit1-07,[7] Negative SKIP should fail,Scenario,ReturnSkipLimit1 - Skip,clauses/return-skip-limit/ReturnSkipLimit1.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit1-08,[8] Floating point parameter for SKIP should fail,Scenario,ReturnSkipLimit1 - Skip,clauses/return-skip-limit/ReturnSkipLimit1.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit1-09,[9] Floating point SKIP should fail,Scenario,ReturnSkipLimit1 - Skip,clauses/return-skip-limit/ReturnSkipLimit1.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit1-10,[10] Fail when using non-constants in SKIP,Scenario,ReturnSkipLimit1 - Skip,clauses/return-skip-limit/ReturnSkipLimit1.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit1-11,[11] Fail when using negative value in SKIP,Scenario,ReturnSkipLimit1 - Skip,clauses/return-skip-limit/ReturnSkipLimit1.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit2-01,[1] Limit to two hits,Scenario,ReturnSkipLimit2 - Limit,clauses/return-skip-limit/ReturnSkipLimit2.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit2-02,[2] Limit to two hits with explicit order,Scenario,ReturnSkipLimit2 - Limit,clauses/return-skip-limit/ReturnSkipLimit2.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit2-03,[3] LIMIT 0 should return an empty result,Scenario,ReturnSkipLimit2 - Limit,clauses/return-skip-limit/ReturnSkipLimit2.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit2-04,[4] Handle ORDER BY with LIMIT 1,Scenario,ReturnSkipLimit2 - Limit,clauses/return-skip-limit/ReturnSkipLimit2.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit2-05,[5] ORDER BY with LIMIT 0 should not generate errors,Scenario,ReturnSkipLimit2 - Limit,clauses/return-skip-limit/ReturnSkipLimit2.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit2-06,[6] LIMIT with an expression that does not depend on variables,Scenario,ReturnSkipLimit2 - Limit,clauses/return-skip-limit/ReturnSkipLimit2.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit2-07,[7] Limit to more rows than actual results 1,Scenario,ReturnSkipLimit2 - Limit,clauses/return-skip-limit/ReturnSkipLimit2.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit2-08,[8] Limit to more rows than actual results 2,Scenario,ReturnSkipLimit2 - Limit,clauses/return-skip-limit/ReturnSkipLimit2.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit2-09,[9] Fail when using non-constants in LIMIT,Scenario,ReturnSkipLimit2 - Limit,clauses/return-skip-limit/ReturnSkipLimit2.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit2-10,[10] Negative parameter for LIMIT should fail,Scenario,ReturnSkipLimit2 - Limit,clauses/return-skip-limit/ReturnSkipLimit2.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit2-11,[11] Negative parameter for LIMIT with ORDER BY should fail,Scenario,ReturnSkipLimit2 - Limit,clauses/return-skip-limit/ReturnSkipLimit2.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit2-12,[12] Fail when using negative value in LIMIT 1,Scenario,ReturnSkipLimit2 - Limit,clauses/return-skip-limit/ReturnSkipLimit2.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit2-13,[13] Fail when using negative value in LIMIT 2,Scenario,ReturnSkipLimit2 - Limit,clauses/return-skip-limit/ReturnSkipLimit2.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit2-14,[14] Floating point parameter for LIMIT should fail,Scenario,ReturnSkipLimit2 - Limit,clauses/return-skip-limit/ReturnSkipLimit2.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit2-15,[15] Floating point parameter for LIMIT with ORDER BY should fail,Scenario,ReturnSkipLimit2 - Limit,clauses/return-skip-limit/ReturnSkipLimit2.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit2-16,[16] Fail when using floating point in LIMIT 1,Scenario,ReturnSkipLimit2 - Limit,clauses/return-skip-limit/ReturnSkipLimit2.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit2-17,[17] Fail when using floating point in LIMIT 2,Scenario,ReturnSkipLimit2 - Limit,clauses/return-skip-limit/ReturnSkipLimit2.feature,clauses.return-skip-limit,False
clauses-return-skip-limit-ReturnSkipLimit3-01,[1] Get rows in the middle,Scenario,ReturnSkipLimit3 - Skip and limit,clauses/return-skip-limit/ReturnSkipLimit3.feature,clauses.return-skip-limit,True
clauses-return-skip-limit-ReturnSkipLimit3-02,[2] Get rows in the middle by param,Scenario,ReturnSkipLimit3 - Skip and limit,clauses/return-skip-limit/ReturnSkipLimit3.feature,clauses.return-skip-limit,True
clauses-return-skip-limit-ReturnSkipLimit3-03,[3] Limiting amount of rows when there are fewer left than the LIMIT argument,Scenario,ReturnSkipLimit3 - Skip and limit,clauses/return-skip-limit/ReturnSkipLimit3.feature,clauses.return-skip-limit,True
clauses-set-Set1-01,[1] Set a property,Scenario,Set1 - Set a Property,clauses/set/Set1.feature,clauses.set,False
clauses-set-Set1-02,[2] Set a property to an expression,Scenario,Set1 - Set a Property,clauses/set/Set1.feature,clauses.set,False
clauses-set-Set1-03,[3] Set a property by selecting the node using a simple expression,Scenario,Set1 - Set a Property,clauses/set/Set1.feature,clauses.set,False
clauses-set-Set1-04,[4] Set a property by selecting the relationship using a simple expression,Scenario,Set1 - Set a Property,clauses/set/Set1.feature,clauses.set,False
clauses-set-Set1-05,[5] Adding a list property,Scenario,Set1 - Set a Property,clauses/set/Set1.feature,clauses.set,False
clauses-set-Set1-06,[6] Concatenate elements onto a list property,Scenario,Set1 - Set a Property,clauses/set/Set1.feature,clauses.set,False
clauses-set-Set1-07,[7] Concatenate elements in reverse onto a list property,Scenario,Set1 - Set a Property,clauses/set/Set1.feature,clauses.set,False
clauses-set-Set1-08,[8] Ignore null when setting property,Scenario,Set1 - Set a Property,clauses/set/Set1.feature,clauses.set,False
clauses-set-Set1-09,[9] Failing when using undefined variable in SET,Scenario,Set1 - Set a Property,clauses/set/Set1.feature,clauses.set,False
clauses-set-Set1-10,[10] Failing when setting a list of maps as a property,Scenario,Set1 - Set a Property,clauses/set/Set1.feature,clauses.set,False
clauses-set-Set1-11,[11] Set multiple node properties,Scenario,Set1 - Set a Property,clauses/set/Set1.feature,clauses.set,False
clauses-set-Set2-01,[1] Setting a node property to null removes the existing property,Scenario,Set2 - Set a Property to Null,clauses/set/Set2.feature,clauses.set,True
clauses-set-Set2-02,"[2] Setting a node property to null removes the existing property, but not before SET",Scenario,Set2 - Set a Property to Null,clauses/set/Set2.feature,clauses.set,True
clauses-set-Set2-03,[3] Setting a relationship property to null removes the existing property,Scenario,Set2 - Set a Property to Null,clauses/set/Set2.feature,clauses.set,True
clauses-set-Set3-01,[1] Add a single label to a node with no label,Scenario,Set3 - Set a Label,clauses/set/Set3.feature,clauses.set,True
clauses-set-Set3-02,[2] Adding multiple labels to a node with no label,Scenario,Set3 - Set a Label,clauses/set/Set3.feature,clauses.set,True
clauses-set-Set3-03,[3] Add a single label to a node with an existing label,Scenario,Set3 - Set a Label,clauses/set/Set3.feature,clauses.set,True
clauses-set-Set3-04,[4] Adding multiple labels to a node with an existing label,Scenario,Set3 - Set a Label,clauses/set/Set3.feature,clauses.set,True
clauses-set-Set3-05,[5] Ignore whitespace before colon 1,Scenario,Set3 - Set a Label,clauses/set/Set3.feature,clauses.set,True
clauses-set-Set3-06,[6] Ignore whitespace before colon 2,Scenario,Set3 - Set a Label,clauses/set/Set3.feature,clauses.set,True
clauses-set-Set3-07,[7] Ignore whitespace before colon 3,Scenario,Set3 - Set a Label,clauses/set/Set3.feature,clauses.set,True
clauses-set-Set3-08,[8] Ignore null when setting label,Scenario,Set3 - Set a Label,clauses/set/Set3.feature,clauses.set,True
clauses-set-Set4-01,[1] Set multiple properties with a property map,Scenario,Set4 - Set all properties with a map,clauses/set/Set4.feature,clauses.set,True
clauses-set-Set4-02,[2] Non-existent values in a property map are removed with SET,Scenario,Set4 - Set all properties with a map,clauses/set/Set4.feature,clauses.set,True
clauses-set-Set4-03,[3] Null values in a property map are removed with SET,Scenario,Set4 - Set all properties with a map,clauses/set/Set4.feature,clauses.set,True
clauses-set-Set4-04,[4] All properties are removed if node is set to empty property map,Scenario,Set4 - Set all properties with a map,clauses/set/Set4.feature,clauses.set,True
clauses-set-Set4-05,[5] Ignore null when setting properties using an overriding map,Scenario,Set4 - Set all properties with a map,clauses/set/Set4.feature,clauses.set,True
clauses-set-Set5-01,[1] Ignore null when setting properties using an appending map,Scenario,Set5 - Set multiple properties with a map,clauses/set/Set5.feature,clauses.set,True
clauses-set-Set5-02,[2] Overwrite values when using +=,Scenario,Set5 - Set multiple properties with a map,clauses/set/Set5.feature,clauses.set,True
clauses-set-Set5-03,[3] Retain old values when using +=,Scenario,Set5 - Set multiple properties with a map,clauses/set/Set5.feature,clauses.set,True
clauses-set-Set5-04,[4] Explicit null values in a map remove old values,Scenario,Set5 - Set multiple properties with a map,clauses/set/Set5.feature,clauses.set,True
clauses-set-Set5-05,[5] Set an empty map when using += has no effect,Scenario,Set5 - Set multiple properties with a map,clauses/set/Set5.feature,clauses.set,True
clauses-set-Set6-01,[1] Limiting to zero results after setting a property on nodes affects the result set but not the side effects,Scenario,Set6 - Persistence of set clause side effects,clauses/set/Set6.feature,clauses.set,True
clauses-set-Set6-02,[2] Skipping all results after setting a property on nodes affects the result set but not the side effects,Scenario,Set6 - Persistence of set clause side effects,clauses/set/Set6.feature,clauses.set,True
clauses-set-Set6-03,[3] Skipping and limiting to a few results after setting a property on nodes affects the result set but not the side effects,Scenario,Set6 - Persistence of set clause side effects,clauses/set/Set6.feature,clauses.set,True
clauses-set-Set6-04,[4] Skipping zero results and limiting to all results after setting a property on nodes does not affect the result set nor the side effects,Scenario,Set6 - Persistence of set clause side effects,clauses/set/Set6.feature,clauses.set,True
clauses-set-Set6-05,[5] Filtering after setting a property on nodes affects the result set but not the side effects,Scenario,Set6 - Persistence of set clause side effects,clauses/set/Set6.feature,clauses.set,True
clauses-set-Set6-06,[6] Aggregating in `RETURN` after setting a property on nodes affects the result set but not the side effects,Scenario,Set6 - Persistence of set clause side effects,clauses/set/Set6.feature,clauses.set,True
clauses-set-Set6-07,[7] Aggregating in `WITH` after setting a property on nodes affects the result set but not the side effects,Scenario,Set6 - Persistence of set clause side effects,clauses/set/Set6.feature,clauses.set,True
clauses-set-Set6-08,[8] Limiting to zero results after adding a label on nodes affects the result set but not the side effects,Scenario,Set6 - Persistence of set clause side effects,clauses/set/Set6.feature,clauses.set,True
clauses-set-Set6-09,[9] Skipping all results after adding a label on nodes affects the result set but not the side effects,Scenario,Set6 - Persistence of set clause side effects,clauses/set/Set6.feature,clauses.set,True
clauses-set-Set6-10,[10] Skipping and limiting to a few results after adding a label on nodes affects the result set but not the side effects,Scenario,Set6 - Persistence of set clause side effects,clauses/set/Set6.feature,clauses.set,True
clauses-set-Set6-11,[11] Skipping zero result and limiting to all results after adding a label on nodes does not affect the result set nor the side effects,Scenario,Set6 - Persistence of set clause side effects,clauses/set/Set6.feature,clauses.set,True
clauses-set-Set6-12,[12] Filtering after adding a label on nodes affects the result set but not the side effects,Scenario,Set6 - Persistence of set clause side effects,clauses/set/Set6.feature,clauses.set,True
clauses-set-Set6-13,[13] Aggregating in `RETURN` after adding a label on nodes affects the result set but not the side effects,Scenario,Set6 - Persistence of set clause side effects,clauses/set/Set6.feature,clauses.set,True
clauses-set-Set6-14,[14] Aggregating in `WITH` after adding a label on nodes affects the result set but not the side effects,Scenario,Set6 - Persistence of set clause side effects,clauses/set/Set6.feature,clauses.set,True
clauses-set-Set6-15,[15] Limiting to zero results after setting a property on relationships affects the result set but not the side effects,Scenario,Set6 - Persistence of set clause side effects,clauses/set/Set6.feature,clauses.set,True
clauses-set-Set6-16,[16] Skipping all results after setting a property on relationships affects the result set but not the side effects,Scenario,Set6 - Persistence of set clause side effects,clauses/set/Set6.feature,clauses.set,True
clauses-set-Set6-17,[17] Skipping and limiting to a few results after setting a property on relationships affects the result set but not the side effects,Scenario,Set6 - Persistence of set clause side effects,clauses/set/Set6.feature,clauses.set,True
clauses-set-Set6-18,[18] Skipping zero result and limiting to all results after setting a property on relationships does not affect the result set nor the side effects,Scenario,Set6 - Persistence of set clause side effects,clauses/set/Set6.feature,clauses.set,True
clauses-set-Set6-19,[19] Filtering after setting a property on relationships affects the result set but not the side effects,Scenario,Set6 - Persistence of set clause side effects,clauses/set/Set6.feature,clauses.set,True
clauses-set-Set6-20,[20] Aggregating in `RETURN` after setting a property on relationships affects the result set but not the side effects,Scenario,Set6 - Persistence of set clause side effects,clauses/set/Set6.feature,clauses.set,True
clauses-set-Set6-21,[21] Aggregating in `WITH` after setting a property on relationships affects the result set but not the side effects,Scenario,Set6 - Persistence of set clause side effects,clauses/set/Set6.feature,clauses.set,True
clauses-union-Union1-01,"[1] Two elements, both unique, distinct",Scenario,Union1 - Union,clauses/union/Union1.feature,clauses.union,False
clauses-union-Union1-02,"[2] Three elements, two unique, distinct",Scenario,Union1 - Union,clauses/union/Union1.feature,clauses.union,False
clauses-union-Union1-03,"[3] Two single-column inputs, one with duplicates, distinct",Scenario,Union1 - Union,clauses/union/Union1.feature,clauses.union,False
clauses-union-Union1-04,[4] Should be able to create text output from union queries,Scenario,Union1 - Union,clauses/union/Union1.feature,clauses.union,False
clauses-union-Union1-05,[5] Failing when UNION has different columns,Scenario,Union1 - Union,clauses/union/Union1.feature,clauses.union,False
clauses-union-Union2-01,"[1] Two elements, both unique, not distinct",Scenario,Union2 - Union All,clauses/union/Union2.feature,clauses.union,False
clauses-union-Union2-02,"[2] Three elements, two unique, not distinct",Scenario,Union2 - Union All,clauses/union/Union2.feature,clauses.union,False
clauses-union-Union2-03,"[3] Two single-column inputs, one with duplicates, not distinct",Scenario,Union2 - Union All,clauses/union/Union2.feature,clauses.union,False
clauses-union-Union2-04,[4] Should be able to create text output from union all queries,Scenario,Union2 - Union All,clauses/union/Union2.feature,clauses.union,False
clauses-union-Union2-05,[5] Failing when UNION ALL has different columns,Scenario,Union2 - Union All,clauses/union/Union2.feature,clauses.union,False
clauses-union-Union3-01,[1] Failing when mixing UNION and UNION ALL,Scenario,Union3 - Union in combination with Union All,clauses/union/Union3.feature,clauses.union,False
clauses-union-Union3-02,[2] Failing when mixing UNION ALL and UNION,Scenario,Union3 - Union in combination with Union All,clauses/union/Union3.feature,clauses.union,False
clauses-unwind-Unwind1-01,[1] Unwinding a list,Scenario,Unwind1,clauses/unwind/Unwind1.feature,clauses.unwind,True
clauses-unwind-Unwind1-02,[2] Unwinding a range,Scenario,Unwind1,clauses/unwind/Unwind1.feature,clauses.unwind,True
clauses-unwind-Unwind1-03,[3] Unwinding a concatenation of lists,Scenario,Unwind1,clauses/unwind/Unwind1.feature,clauses.unwind,True
clauses-unwind-Unwind1-04,[4] Unwinding a collected unwound expression,Scenario,Unwind1,clauses/unwind/Unwind1.feature,clauses.unwind,True
clauses-unwind-Unwind1-05,[5] Unwinding a collected expression,Scenario,Unwind1,clauses/unwind/Unwind1.feature,clauses.unwind,True
clauses-unwind-Unwind1-06,[6] Creating nodes from an unwound parameter list,Scenario,Unwind1,clauses/unwind/Unwind1.feature,clauses.unwind,True
clauses-unwind-Unwind1-07,[7] Double unwinding a list of lists,Scenario,Unwind1,clauses/unwind/Unwind1.feature,clauses.unwind,True
clauses-unwind-Unwind1-08,[8] Unwinding the empty list,Scenario,Unwind1,clauses/unwind/Unwind1.feature,clauses.unwind,True
clauses-unwind-Unwind1-09,[9] Unwinding null,Scenario,Unwind1,clauses/unwind/Unwind1.feature,clauses.unwind,True
clauses-unwind-Unwind1-10,[10] Unwinding list with duplicates,Scenario,Unwind1,clauses/unwind/Unwind1.feature,clauses.unwind,True
clauses-unwind-Unwind1-11,[11] Unwind does not prune context,Scenario,Unwind1,clauses/unwind/Unwind1.feature,clauses.unwind,True
clauses-unwind-Unwind1-12,[12] Unwind does not remove variables from scope,Scenario,Unwind1,clauses/unwind/Unwind1.feature,clauses.unwind,True
clauses-unwind-Unwind1-13,[13] Multiple unwinds after each other,Scenario,Unwind1,clauses/unwind/Unwind1.feature,clauses.unwind,True
clauses-unwind-Unwind1-14,[14] Unwind with merge,Scenario,Unwind1,clauses/unwind/Unwind1.feature,clauses.unwind,True
clauses-with-With1-01,[1] Forwarind a node variable 1,Scenario,With1 - Forward single variable,clauses/with/With1.feature,clauses.with,True
clauses-with-With1-02,[2] Forwarind a node variable 2,Scenario,With1 - Forward single variable,clauses/with/With1.feature,clauses.with,True
clauses-with-With1-03,[3] Forwarding a relationship variable,Scenario,With1 - Forward single variable,clauses/with/With1.feature,clauses.with,True
clauses-with-With1-04,[4] Forwarding a path variable,Scenario,With1 - Forward single variable,clauses/with/With1.feature,clauses.with,True
clauses-with-With1-05,[5] Forwarding null,Scenario,With1 - Forward single variable,clauses/with/With1.feature,clauses.with,True
clauses-with-With1-06,[6] Forwarind a node variable possibly null,Scenario,With1 - Forward single variable,clauses/with/With1.feature,clauses.with,True
clauses-with-With2-01,[1] Forwarding a property to express a join,Scenario,With2 - Forward single expression,clauses/with/With2.feature,clauses.with,True
clauses-with-With2-02,[2] Forwarding a nested map literal,Scenario,With2 - Forward single expression,clauses/with/With2.feature,clauses.with,True
clauses-with-With3-01,[1] Forwarding multiple node and relationship variables,Scenario,With3 - Forward multiple expressions,clauses/with/With3.feature,clauses.with,True
clauses-with-With4-01,[1] Aliasing relationship variable,Scenario,With4 - Variable aliasing,clauses/with/With4.feature,clauses.with,False
clauses-with-With4-02,[2] Aliasing expression to new variable name,Scenario,With4 - Variable aliasing,clauses/with/With4.feature,clauses.with,False
clauses-with-With4-03,[3] Aliasing expression to existing variable name,Scenario,With4 - Variable aliasing,clauses/with/With4.feature,clauses.with,False
clauses-with-With4-04,[4] Fail when forwarding multiple aliases with the same name,Scenario,With4 - Variable aliasing,clauses/with/With4.feature,clauses.with,False
clauses-with-With4-05,[5] Fail when not aliasing expressions in WITH,Scenario,With4 - Variable aliasing,clauses/with/With4.feature,clauses.with,False
clauses-with-With4-06,[6] Reusing variable names in WITH,Scenario,With4 - Variable aliasing,clauses/with/With4.feature,clauses.with,False
clauses-with-With4-07,[7] Multiple aliasing and backreferencing,Scenario,With4 - Variable aliasing,clauses/with/With4.feature,clauses.with,False
clauses-with-With5-01,[1] DISTINCT on an expression,Scenario,With5 - Implicit grouping with DISTINCT,clauses/with/With5.feature,clauses.with,True
clauses-with-With5-02,[2] Handling DISTINCT with lists in maps,Scenario,With5 - Implicit grouping with DISTINCT,clauses/with/With5.feature,clauses.with,True
clauses-with-With6-01,[1] Implicit grouping with single expression as grouping key and single aggregation,Scenario,With6 - Implicit grouping with aggregates,clauses/with/With6.feature,clauses.with,False
clauses-with-With6-02,[2] Implicit grouping with single relationship variable as grouping key and single aggregation,Scenario,With6 - Implicit grouping with aggregates,clauses/with/With6.feature,clauses.with,False
clauses-with-With6-03,[3] Implicit grouping with multiple node and relationship variables as grouping key and single aggregation,Scenario,With6 - Implicit grouping with aggregates,clauses/with/With6.feature,clauses.with,False
clauses-with-With6-04,[4] Implicit grouping with single path variable as grouping key and single aggregation,Scenario,With6 - Implicit grouping with aggregates,clauses/with/With6.feature,clauses.with,False
clauses-with-With6-05,[5] Handle constants and parameters inside an expression which contains an aggregation expression,Scenario,With6 - Implicit grouping with aggregates,clauses/with/With6.feature,clauses.with,False
clauses-with-With6-06,[6] Handle projected variables inside an expression which contains an aggregation expression,Scenario,With6 - Implicit grouping with aggregates,clauses/with/With6.feature,clauses.with,False
clauses-with-With6-07,[7] Handle projected property accesses inside an expression which contains an aggregation expression,Scenario,With6 - Implicit grouping with aggregates,clauses/with/With6.feature,clauses.with,False
clauses-with-With6-08,[8] Fail if not projected variables are used inside an expression which contains an aggregation expression,Scenario,With6 - Implicit grouping with aggregates,clauses/with/With6.feature,clauses.with,False
clauses-with-With6-09,"[9] Fail if more complex expression, even if projected, are used inside expression which contains an aggregation expression",Scenario,With6 - Implicit grouping with aggregates,clauses/with/With6.feature,clauses.with,False
clauses-with-With7-01,[1] A simple pattern with one bound endpoint,Scenario,With7 - WITH on WITH,clauses/with/With7.feature,clauses.with,True
clauses-with-With7-02,[2] Multiple WITHs using a predicate and aggregation,Scenario,With7 - WITH on WITH,clauses/with/With7.feature,clauses.with,True
clauses-with-orderBy-WithOrderBy1-01,[1] Sort booleans in ascending order,Scenario,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-02,[2] Sort booleans in descending order,Scenario,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-03,[3] Sort integers in ascending order,Scenario,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-04,[4] Sort integers in descending order,Scenario,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-05,[5] Sort floats in ascending order,Scenario,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-06,[6] Sort floats in descending order,Scenario,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-07,[7] Sort strings in ascending order,Scenario,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-08,[8] Sort strings in descending order,Scenario,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-09,[9] Sort lists in ascending order,Scenario,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-10,[10] Sort lists in descending order,Scenario,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-11,[11] Sort dates in ascending order,Scenario,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-12,[12] Sort dates in descending order,Scenario,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-13,[13] Sort local times in ascending order,Scenario,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-14,[14] Sort local times in descending order,Scenario,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-15,[15] Sort times in ascending order,Scenario,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-16,[16] Sort times in descending order,Scenario,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-17,[17] Sort local date times in ascending order,Scenario,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-18,[18] Sort local date times in descending order,Scenario,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-19,[19] Sort date times in ascending order,Scenario,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-20,[20] Sort date times in descending order,Scenario,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-21,[21] Sort distinct types in ascending order,Scenario,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-22,[22] Sort distinct types in descending order,Scenario,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-23,[23] Sort by a boolean variable projected from a node property in ascending order,Scenario Outline,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-24,[24] Sort by a boolean variable projected from a node property in descending order,Scenario Outline,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-25,[25] Sort by an integer variable projected from a node property in ascending order,Scenario Outline,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-26,[26] Sort by an integer variable projected from a node property in descending order,Scenario Outline,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-27,[27] Sort by a float variable projected from a node property in ascending order,Scenario Outline,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-28,[28] Sort by a float variable projected from a node property in descending order,Scenario Outline,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-29,[29] Sort by a string variable projected from a node property in ascending order,Scenario Outline,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-30,[30] Sort by a string variable projected from a node property in descending order,Scenario Outline,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-31,[31] Sort by a list variable projected from a node property in ascending order,Scenario Outline,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-32,[32] Sort by a list variable projected from a node property in descending order,Scenario Outline,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-33,[33] Sort by a date variable projected from a node property in ascending order,Scenario Outline,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-34,[34] Sort by a date variable projected from a node property in descending order,Scenario Outline,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-35,[35] Sort by a local time variable projected from a node property in ascending order,Scenario Outline,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-36,[36] Sort by a local time variable projected from a node property in descending order,Scenario Outline,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-37,[37] Sort by a time variable projected from a node property in ascending order,Scenario Outline,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-38,[38] Sort by a time variable projected from a node property in descending order,Scenario Outline,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-39,[39] Sort by a local date time variable projected from a node property in ascending order,Scenario Outline,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-40,[40] Sort by a local date time variable projected from a node property in descending order,Scenario Outline,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-41,[41] Sort by a date time variable projected from a node property in ascending order,Scenario Outline,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-42,[42] Sort by a date time variable projected from a node property in descending order,Scenario Outline,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-43,[43] Sort by a variable that is only partially orderable on a non-distinct binding table,Scenario Outline,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-44,"[44] Sort by a variable that is only partially orderable on a non-distinct binding table, but made distinct",Scenario Outline,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-45,[45] Sort order should be consistent with comparisons where comparisons are defined #Example: <exampleName>,Scenario Outline,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy1-46,[46] Fail on sorting by an undefined variable #Example: <exampleName>,Scenario Outline,WithOrderBy1 - Order by a single variable,clauses/with-orderBy/WithOrderBy1.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy2-01,[1] Sort by a boolean expression in ascending order,Scenario Outline,WithOrderBy2 - Order by a single expression,clauses/with-orderBy/WithOrderBy2.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy2-02,[2] Sort by a boolean expression in descending order,Scenario Outline,WithOrderBy2 - Order by a single expression,clauses/with-orderBy/WithOrderBy2.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy2-03,[3] Sort by an integer expression in ascending order,Scenario Outline,WithOrderBy2 - Order by a single expression,clauses/with-orderBy/WithOrderBy2.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy2-04,[4] Sort by an integer expression in descending order,Scenario Outline,WithOrderBy2 - Order by a single expression,clauses/with-orderBy/WithOrderBy2.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy2-05,[5] Sort by a float expression in ascending order,Scenario Outline,WithOrderBy2 - Order by a single expression,clauses/with-orderBy/WithOrderBy2.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy2-06,[6] Sort by a float expression in descending order,Scenario Outline,WithOrderBy2 - Order by a single expression,clauses/with-orderBy/WithOrderBy2.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy2-07,[7] Sort by a string expression in ascending order,Scenario Outline,WithOrderBy2 - Order by a single expression,clauses/with-orderBy/WithOrderBy2.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy2-08,[8] Sort by a string expression in descending order,Scenario Outline,WithOrderBy2 - Order by a single expression,clauses/with-orderBy/WithOrderBy2.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy2-09,[9] Sort by a list expression in ascending order,Scenario Outline,WithOrderBy2 - Order by a single expression,clauses/with-orderBy/WithOrderBy2.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy2-10,[10] Sort by a list expression in descending order,Scenario Outline,WithOrderBy2 - Order by a single expression,clauses/with-orderBy/WithOrderBy2.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy2-11,[11] Sort by a date expression in ascending order,Scenario Outline,WithOrderBy2 - Order by a single expression,clauses/with-orderBy/WithOrderBy2.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy2-12,[12] Sort by a date expression in descending order,Scenario Outline,WithOrderBy2 - Order by a single expression,clauses/with-orderBy/WithOrderBy2.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy2-13,[13] Sort by a local time expression in ascending order,Scenario Outline,WithOrderBy2 - Order by a single expression,clauses/with-orderBy/WithOrderBy2.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy2-14,[14] Sort by a local time expression in descending order,Scenario Outline,WithOrderBy2 - Order by a single expression,clauses/with-orderBy/WithOrderBy2.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy2-15,[15] Sort by a time expression in ascending order,Scenario Outline,WithOrderBy2 - Order by a single expression,clauses/with-orderBy/WithOrderBy2.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy2-16,[16] Sort by a time expression in descending order,Scenario Outline,WithOrderBy2 - Order by a single expression,clauses/with-orderBy/WithOrderBy2.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy2-17,[17] Sort by a local date time expression in ascending order,Scenario Outline,WithOrderBy2 - Order by a single expression,clauses/with-orderBy/WithOrderBy2.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy2-18,[18] Sort by a local date time expression in descending order,Scenario Outline,WithOrderBy2 - Order by a single expression,clauses/with-orderBy/WithOrderBy2.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy2-19,[19] Sort by a date time expression in ascending order,Scenario Outline,WithOrderBy2 - Order by a single expression,clauses/with-orderBy/WithOrderBy2.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy2-20,[20] Sort by a date time expression in descending order,Scenario Outline,WithOrderBy2 - Order by a single expression,clauses/with-orderBy/WithOrderBy2.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy2-21,[21] Sort by an expression that is only partially orderable on a non-distinct binding table,Scenario Outline,WithOrderBy2 - Order by a single expression,clauses/with-orderBy/WithOrderBy2.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy2-22,"[22] Sort by an expression that is only partially orderable on a non-distinct binding table, but used as a grouping key",Scenario Outline,WithOrderBy2 - Order by a single expression,clauses/with-orderBy/WithOrderBy2.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy2-23,"[23] Sort by an expression that is only partially orderable on a non-distinct binding table, but used in parts as a grouping key",Scenario Outline,WithOrderBy2 - Order by a single expression,clauses/with-orderBy/WithOrderBy2.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy2-24,"[24] Sort by an expression that is only partially orderable on a non-distinct binding table, but made distinct",Scenario Outline,WithOrderBy2 - Order by a single expression,clauses/with-orderBy/WithOrderBy2.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy2-25,[25] Fail on sorting by an aggregation,Scenario Outline,WithOrderBy2 - Order by a single expression,clauses/with-orderBy/WithOrderBy2.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy3-01,"[1] Sort by two expressions, both in ascending order",Scenario Outline,WithOrderBy3 - Order by multiple expressions,clauses/with-orderBy/WithOrderBy3.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy3-02,"[2] Sort by two expressions, first in ascending order, second in descending order",Scenario Outline,WithOrderBy3 - Order by multiple expressions,clauses/with-orderBy/WithOrderBy3.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy3-03,"[3] Sort by two expressions, first in descending order, second in ascending order",Scenario Outline,WithOrderBy3 - Order by multiple expressions,clauses/with-orderBy/WithOrderBy3.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy3-04,"[4] Sort by two expressions, both in descending order",Scenario Outline,WithOrderBy3 - Order by multiple expressions,clauses/with-orderBy/WithOrderBy3.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy3-05,[5] An expression without explicit sort direction is sorted in ascending order,Scenario Outline,WithOrderBy3 - Order by multiple expressions,clauses/with-orderBy/WithOrderBy3.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy3-06,[6] An constant expression does not influence the order determined by other expression before and after the constant expression,Scenario Outline,WithOrderBy3 - Order by multiple expressions,clauses/with-orderBy/WithOrderBy3.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy3-07,[7] The order direction cannot be overwritten,Scenario Outline,WithOrderBy3 - Order by multiple expressions,clauses/with-orderBy/WithOrderBy3.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy3-08,[8] Fail on sorting by any number of undefined variables in any position #Example: <exampleName>,Scenario Outline,WithOrderBy3 - Order by multiple expressions,clauses/with-orderBy/WithOrderBy3.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy4-01,[1] Sort by a projected expression,Scenario,WithOrderBy4 - Order by in combination with projection and aliasing,clauses/with-orderBy/WithOrderBy4.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy4-02,[2] Sort by an alias of a projected expression,Scenario,WithOrderBy4 - Order by in combination with projection and aliasing,clauses/with-orderBy/WithOrderBy4.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy4-03,[3] Sort by two projected expressions with order priority being different than projection order,Scenario,WithOrderBy4 - Order by in combination with projection and aliasing,clauses/with-orderBy/WithOrderBy4.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy4-04,[4] Sort by one projected expression and one alias of a projected expression with order priority being different than projection order,Scenario,WithOrderBy4 - Order by in combination with projection and aliasing,clauses/with-orderBy/WithOrderBy4.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy4-05,[5] Sort by one alias of a projected expression and one projected expression with order priority being different than projection order,Scenario,WithOrderBy4 - Order by in combination with projection and aliasing,clauses/with-orderBy/WithOrderBy4.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy4-06,[6] Sort by aliases of two projected expressions with order priority being different than projection order,Scenario,WithOrderBy4 - Order by in combination with projection and aliasing,clauses/with-orderBy/WithOrderBy4.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy4-07,[7] Sort by an alias of a projected expression where the alias shadows an existing variable,Scenario,WithOrderBy4 - Order by in combination with projection and aliasing,clauses/with-orderBy/WithOrderBy4.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy4-08,[8] Sort by non-projected existing variable,Scenario,WithOrderBy4 - Order by in combination with projection and aliasing,clauses/with-orderBy/WithOrderBy4.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy4-09,[9] Sort by an alias of a projected expression containing the variable shadowed by the alias,Scenario,WithOrderBy4 - Order by in combination with projection and aliasing,clauses/with-orderBy/WithOrderBy4.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy4-10,[10] Sort by a non-projected expression containing an alias of a projected expression containing the variable shadowed by the alias,Scenario,WithOrderBy4 - Order by in combination with projection and aliasing,clauses/with-orderBy/WithOrderBy4.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy4-11,[11] Sort by an aggregate projection,Scenario,WithOrderBy4 - Order by in combination with projection and aliasing,clauses/with-orderBy/WithOrderBy4.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy4-12,[12] Sort by an aliased aggregate projection,Scenario,WithOrderBy4 - Order by in combination with projection and aliasing,clauses/with-orderBy/WithOrderBy4.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy4-13,[13] Fail on sorting by a non-projected aggregation on a variable,Scenario,WithOrderBy4 - Order by in combination with projection and aliasing,clauses/with-orderBy/WithOrderBy4.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy4-14,[14] Fail on sorting by a non-projected aggregation on an expression,Scenario,WithOrderBy4 - Order by in combination with projection and aliasing,clauses/with-orderBy/WithOrderBy4.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy4-15,[15] Sort by an aliased aggregate projection does allow subsequent matching,Scenario,WithOrderBy4 - Order by in combination with projection and aliasing,clauses/with-orderBy/WithOrderBy4.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy4-16,[16] Handle constants and parameters inside an order by item which contains an aggregation expression,Scenario,WithOrderBy4 - Order by in combination with projection and aliasing,clauses/with-orderBy/WithOrderBy4.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy4-17,[17] Handle projected variables inside an order by item which contains an aggregation expression,Scenario,WithOrderBy4 - Order by in combination with projection and aliasing,clauses/with-orderBy/WithOrderBy4.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy4-18,[18]  Handle projected property accesses inside an order by item which contains an aggregation expression,Scenario,WithOrderBy4 - Order by in combination with projection and aliasing,clauses/with-orderBy/WithOrderBy4.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy4-19,[19] Fail if not projected variables are used inside an order by item which contains an aggregation expression,Scenario,WithOrderBy4 - Order by in combination with projection and aliasing,clauses/with-orderBy/WithOrderBy4.feature,clauses.with-orderBy,False
clauses-with-orderBy-WithOrderBy4-20,"[20] Fail if more complex expressions, even if projected, are used inside an order by item which contains an aggregation expression",Scenario,WithOrderBy4 - Order by in combination with projection and aliasing,clauses/with-orderBy/WithOrderBy4.feature,clauses.with-orderBy,False
clauses-with-skip-limit-WithSkipLimit1-01,[1] Handle dependencies across WITH with SKIP,Scenario,WithSkipLimit1 - Skip,clauses/with-skip-limit/WithSkipLimit1.feature,clauses.with-skip-limit,True
clauses-with-skip-limit-WithSkipLimit1-02,[2] Ordering and skipping on aggregate,Scenario,WithSkipLimit1 - Skip,clauses/with-skip-limit/WithSkipLimit1.feature,clauses.with-skip-limit,True
clauses-with-skip-limit-WithSkipLimit2-01,[1] ORDER BY and LIMIT can be used,Scenario,WithSkipLimit2 - Limit,clauses/with-skip-limit/WithSkipLimit2.feature,clauses.with-skip-limit,True
clauses-with-skip-limit-WithSkipLimit2-02,[2] Handle dependencies across WITH with LIMIT,Scenario,WithSkipLimit2 - Limit,clauses/with-skip-limit/WithSkipLimit2.feature,clauses.with-skip-limit,True
clauses-with-skip-limit-WithSkipLimit2-03,[3] Connected components succeeding WITH with LIMIT,Scenario,WithSkipLimit2 - Limit,clauses/with-skip-limit/WithSkipLimit2.feature,clauses.with-skip-limit,True
clauses-with-skip-limit-WithSkipLimit2-04,[4] Ordering and limiting on aggregate,Scenario,WithSkipLimit2 - Limit,clauses/with-skip-limit/WithSkipLimit2.feature,clauses.with-skip-limit,True
clauses-with-skip-limit-WithSkipLimit3-01,[1] Get rows in the middle,Scenario,WithSkipLimit3 - Skip and limit,clauses/with-skip-limit/WithSkipLimit3.feature,clauses.with-skip-limit,True
clauses-with-skip-limit-WithSkipLimit3-02,[2] Get rows in the middle by param,Scenario,WithSkipLimit3 - Skip and limit,clauses/with-skip-limit/WithSkipLimit3.feature,clauses.with-skip-limit,True
clauses-with-skip-limit-WithSkipLimit3-03,[3] Limiting amount of rows when there are fewer left than the LIMIT argument,Scenario,WithSkipLimit3 - Skip and limit,clauses/with-skip-limit/WithSkipLimit3.feature,clauses.with-skip-limit,True
clauses-with-where-WithWhere1-01,[1] Filter node with property predicate on a single variable with multiple bindings,Scenario,WithWhere1 - Filter single variable,clauses/with-where/WithWhere1.feature,clauses.with-where,True
clauses-with-where-WithWhere1-02,[2] Filter node with property predicate on a single variable with multiple distinct bindings,Scenario,WithWhere1 - Filter single variable,clauses/with-where/WithWhere1.feature,clauses.with-where,True
clauses-with-where-WithWhere1-03,[3] Filter for an unbound relationship variable,Scenario,WithWhere1 - Filter single variable,clauses/with-where/WithWhere1.feature,clauses.with-where,True
clauses-with-where-WithWhere1-04,[4] Filter for an unbound node variable,Scenario,WithWhere1 - Filter single variable,clauses/with-where/WithWhere1.feature,clauses.with-where,True
clauses-with-where-WithWhere2-01,[1] Filter nodes with conjunctive two-part property predicate on multi variables with multiple bindings,Scenario,WithWhere2 - Filter multiple variables,clauses/with-where/WithWhere2.feature,clauses.with-where,True
clauses-with-where-WithWhere2-02,[2] Filter node with conjunctive multi-part property predicates on multi variables with multiple bindings,Scenario,WithWhere2 - Filter multiple variables,clauses/with-where/WithWhere2.feature,clauses.with-where,True
clauses-with-where-WithWhere3-01,[1] Join between node identities,Scenario,WithWhere3 - Equi-Joins on variables,clauses/with-where/WithWhere3.feature,clauses.with-where,True
clauses-with-where-WithWhere3-02,[2] Join between node properties of disconnected nodes,Scenario,WithWhere3 - Equi-Joins on variables,clauses/with-where/WithWhere3.feature,clauses.with-where,True
clauses-with-where-WithWhere3-03,[3] Join between node properties of adjacent nodes,Scenario,WithWhere3 - Equi-Joins on variables,clauses/with-where/WithWhere3.feature,clauses.with-where,True
clauses-with-where-WithWhere4-01,[1] Join nodes on inequality,Scenario,WithWhere4 - Non-Equi-Joins on variables,clauses/with-where/WithWhere4.feature,clauses.with-where,True
clauses-with-where-WithWhere4-02,[2] Join with disjunctive multi-part predicates including patterns,Scenario,WithWhere4 - Non-Equi-Joins on variables,clauses/with-where/WithWhere4.feature,clauses.with-where,True
clauses-with-where-WithWhere5-01,[1] Filter out on null,Scenario,WithWhere5 - Filter on predicate resulting in null,clauses/with-where/WithWhere5.feature,clauses.with-where,True
clauses-with-where-WithWhere5-02,[2] Filter out on null if the AND'd predicate evaluates to false,Scenario,WithWhere5 - Filter on predicate resulting in null,clauses/with-where/WithWhere5.feature,clauses.with-where,True
clauses-with-where-WithWhere5-03,[3] Filter out on null if the AND'd predicate evaluates to true,Scenario,WithWhere5 - Filter on predicate resulting in null,clauses/with-where/WithWhere5.feature,clauses.with-where,True
clauses-with-where-WithWhere5-04,[4] Do not filter out on null if the OR'd predicate evaluates to true,Scenario,WithWhere5 - Filter on predicate resulting in null,clauses/with-where/WithWhere5.feature,clauses.with-where,True
clauses-with-where-WithWhere6-01,[1] Filter a single aggregate,Scenario,WithWhere6 - Filter on aggregates,clauses/with-where/WithWhere6.feature,clauses.with-where,True
clauses-with-where-WithWhere7-01,[1] WHERE sees a variable bound before but not after WITH,Scenario,WithWhere7 - Variable visibility under aliasing,clauses/with-where/WithWhere7.feature,clauses.with-where,True
clauses-with-where-WithWhere7-02,[2] WHERE sees a variable bound after but not before WITH,Scenario,WithWhere7 - Variable visibility under aliasing,clauses/with-where/WithWhere7.feature,clauses.with-where,True
clauses-with-where-WithWhere7-03,"[3] WHERE sees both, variable bound before but not after WITH and variable bound after but not before WITH",Scenario,WithWhere7 - Variable visibility under aliasing,clauses/with-where/WithWhere7.feature,clauses.with-where,True
expressions-aggregation-Aggregation1-01,[1] Count only non-null values,Scenario,Aggregation1 - Count,expressions/aggregation/Aggregation1.feature,expressions.aggregation,True
expressions-aggregation-Aggregation1-02,[2] Counting loop relationships,Scenario,Aggregation1 - Count,expressions/aggregation/Aggregation1.feature,expressions.aggregation,True
expressions-aggregation-Aggregation2-01,[1] `max()` over integers,Scenario,Aggregation2 - Min and Max,expressions/aggregation/Aggregation2.feature,expressions.aggregation,True
expressions-aggregation-Aggregation2-02,[2] `min()` over integers,Scenario,Aggregation2 - Min and Max,expressions/aggregation/Aggregation2.feature,expressions.aggregation,True
expressions-aggregation-Aggregation2-03,[3] `max()` over floats,Scenario,Aggregation2 - Min and Max,expressions/aggregation/Aggregation2.feature,expressions.aggregation,True
expressions-aggregation-Aggregation2-04,[4] `min()` over floats,Scenario,Aggregation2 - Min and Max,expressions/aggregation/Aggregation2.feature,expressions.aggregation,True
expressions-aggregation-Aggregation2-05,[5] `max()` over mixed numeric values,Scenario,Aggregation2 - Min and Max,expressions/aggregation/Aggregation2.feature,expressions.aggregation,True
expressions-aggregation-Aggregation2-06,[6] `min()` over mixed numeric values,Scenario,Aggregation2 - Min and Max,expressions/aggregation/Aggregation2.feature,expressions.aggregation,True
expressions-aggregation-Aggregation2-07,[7] `max()` over strings,Scenario,Aggregation2 - Min and Max,expressions/aggregation/Aggregation2.feature,expressions.aggregation,True
expressions-aggregation-Aggregation2-08,[8] `min()` over strings,Scenario,Aggregation2 - Min and Max,expressions/aggregation/Aggregation2.feature,expressions.aggregation,True
expressions-aggregation-Aggregation2-09,[9] `max()` over list values,Scenario,Aggregation2 - Min and Max,expressions/aggregation/Aggregation2.feature,expressions.aggregation,True
expressions-aggregation-Aggregation2-10,[10] `min()` over list values,Scenario,Aggregation2 - Min and Max,expressions/aggregation/Aggregation2.feature,expressions.aggregation,True
expressions-aggregation-Aggregation2-11,[11] `max()` over mixed values,Scenario,Aggregation2 - Min and Max,expressions/aggregation/Aggregation2.feature,expressions.aggregation,True
expressions-aggregation-Aggregation2-12,[12] `min()` over mixed values,Scenario,Aggregation2 - Min and Max,expressions/aggregation/Aggregation2.feature,expressions.aggregation,True
expressions-aggregation-Aggregation3-01,[1] Sum only non-null values,Scenario,Aggregation3 - Sum,expressions/aggregation/Aggregation3.feature,expressions.aggregation,True
expressions-aggregation-Aggregation3-02,[2] No overflow during summation,Scenario,Aggregation3 - Sum,expressions/aggregation/Aggregation3.feature,expressions.aggregation,True
expressions-aggregation-Aggregation5-01,[1] `collect()` filtering nulls,Scenario,Aggregation5 - Collect,expressions/aggregation/Aggregation5.feature,expressions.aggregation,True
expressions-aggregation-Aggregation5-02,[2] OPTIONAL MATCH and `collect()` on node property,Scenario,Aggregation5 - Collect,expressions/aggregation/Aggregation5.feature,expressions.aggregation,True
expressions-aggregation-Aggregation6-01,[1] `percentileDisc()`,Scenario Outline,Aggregation6 - Percentiles,expressions/aggregation/Aggregation6.feature,expressions.aggregation,True
expressions-aggregation-Aggregation6-02,[2] `percentileCont()`,Scenario Outline,Aggregation6 - Percentiles,expressions/aggregation/Aggregation6.feature,expressions.aggregation,True
expressions-aggregation-Aggregation6-03,[3] `percentileCont()` failing on bad arguments,Scenario Outline,Aggregation6 - Percentiles,expressions/aggregation/Aggregation6.feature,expressions.aggregation,True
expressions-aggregation-Aggregation6-04,[4] `percentileDisc()` failing on bad arguments,Scenario Outline,Aggregation6 - Percentiles,expressions/aggregation/Aggregation6.feature,expressions.aggregation,True
expressions-aggregation-Aggregation6-05,[5] `percentileDisc()` failing in more involved query,Scenario,Aggregation6 - Percentiles,expressions/aggregation/Aggregation6.feature,expressions.aggregation,True
expressions-aggregation-Aggregation8-01,[1] Distinct on unbound node,Scenario,Aggregation8 - DISTINCT,expressions/aggregation/Aggregation8.feature,expressions.aggregation,True
expressions-aggregation-Aggregation8-02,[2] Distinct on null,Scenario,Aggregation8 - DISTINCT,expressions/aggregation/Aggregation8.feature,expressions.aggregation,True
expressions-aggregation-Aggregation8-03,[3] Collect distinct nulls,Scenario,Aggregation8 - DISTINCT,expressions/aggregation/Aggregation8.feature,expressions.aggregation,True
expressions-aggregation-Aggregation8-04,[4] Collect distinct values mixed with nulls,Scenario,Aggregation8 - DISTINCT,expressions/aggregation/Aggregation8.feature,expressions.aggregation,True
expressions-boolean-Boolean1-01,[1] Conjunction of two truth values,Scenario,Boolean1 - And logical operations,expressions/boolean/Boolean1.feature,expressions.boolean,False
expressions-boolean-Boolean1-02,[2] Conjunction of three truth values,Scenario,Boolean1 - And logical operations,expressions/boolean/Boolean1.feature,expressions.boolean,False
expressions-boolean-Boolean1-03,[3] Conjunction of many truth values,Scenario,Boolean1 - And logical operations,expressions/boolean/Boolean1.feature,expressions.boolean,False
expressions-boolean-Boolean1-04,[4] Conjunction is commutative on non-null,Scenario,Boolean1 - And logical operations,expressions/boolean/Boolean1.feature,expressions.boolean,False
expressions-boolean-Boolean1-05,[5] Conjunction is commutative on null,Scenario,Boolean1 - And logical operations,expressions/boolean/Boolean1.feature,expressions.boolean,False
expressions-boolean-Boolean1-06,[6] Conjunction is associative on non-null,Scenario,Boolean1 - And logical operations,expressions/boolean/Boolean1.feature,expressions.boolean,False
expressions-boolean-Boolean1-07,[7] Conjunction is associative on null,Scenario,Boolean1 - And logical operations,expressions/boolean/Boolean1.feature,expressions.boolean,False
expressions-boolean-Boolean1-08,[8] Fail on conjunction of at least one non-booleans,Scenario Outline,Boolean1 - And logical operations,expressions/boolean/Boolean1.feature,expressions.boolean,False
expressions-boolean-Boolean2-01,[1] Disjunction of two truth values,Scenario,Boolean2 - OR logical operations,expressions/boolean/Boolean2.feature,expressions.boolean,False
expressions-boolean-Boolean2-02,[2] Disjunction of three truth values,Scenario,Boolean2 - OR logical operations,expressions/boolean/Boolean2.feature,expressions.boolean,False
expressions-boolean-Boolean2-03,[3] Disjunction of many truth values,Scenario,Boolean2 - OR logical operations,expressions/boolean/Boolean2.feature,expressions.boolean,False
expressions-boolean-Boolean2-04,[4] Disjunction is commutative on non-null,Scenario,Boolean2 - OR logical operations,expressions/boolean/Boolean2.feature,expressions.boolean,False
expressions-boolean-Boolean2-05,[5] Disjunction is commutative on null,Scenario,Boolean2 - OR logical operations,expressions/boolean/Boolean2.feature,expressions.boolean,False
expressions-boolean-Boolean2-06,[6] Disjunction is associative on non-null,Scenario,Boolean2 - OR logical operations,expressions/boolean/Boolean2.feature,expressions.boolean,False
expressions-boolean-Boolean2-07,[7] Disjunction is associative on null,Scenario,Boolean2 - OR logical operations,expressions/boolean/Boolean2.feature,expressions.boolean,False
expressions-boolean-Boolean2-08,[8] Fail on disjunction of at least one non-booleans,Scenario Outline,Boolean2 - OR logical operations,expressions/boolean/Boolean2.feature,expressions.boolean,False
expressions-boolean-Boolean3-01,[1] Exclusive disjunction of two truth values,Scenario,Boolean3 - XOR logical operations,expressions/boolean/Boolean3.feature,expressions.boolean,False
expressions-boolean-Boolean3-02,[2] Exclusive disjunction of three truth values,Scenario,Boolean3 - XOR logical operations,expressions/boolean/Boolean3.feature,expressions.boolean,False
expressions-boolean-Boolean3-03,[3] Exclusive disjunction of many truth values,Scenario,Boolean3 - XOR logical operations,expressions/boolean/Boolean3.feature,expressions.boolean,False
expressions-boolean-Boolean3-04,[4] Exclusive disjunction is commutative on non-null,Scenario,Boolean3 - XOR logical operations,expressions/boolean/Boolean3.feature,expressions.boolean,False
expressions-boolean-Boolean3-05,[5] Exclusive disjunction is commutative on null,Scenario,Boolean3 - XOR logical operations,expressions/boolean/Boolean3.feature,expressions.boolean,False
expressions-boolean-Boolean3-06,[6] Exclusive disjunction is associative on non-null,Scenario,Boolean3 - XOR logical operations,expressions/boolean/Boolean3.feature,expressions.boolean,False
expressions-boolean-Boolean3-07,[7] Exclusive disjunction is associative on null,Scenario,Boolean3 - XOR logical operations,expressions/boolean/Boolean3.feature,expressions.boolean,False
expressions-boolean-Boolean3-08,[8] Fail on exclusive disjunction of at least one non-booleans,Scenario Outline,Boolean3 - XOR logical operations,expressions/boolean/Boolean3.feature,expressions.boolean,False
expressions-boolean-Boolean4-01,[1] Logical negation of truth values,Scenario,Boolean4 - NOT logical operations,expressions/boolean/Boolean4.feature,expressions.boolean,False
expressions-boolean-Boolean4-02,[2] Double logical negation of truth values,Scenario,Boolean4 - NOT logical operations,expressions/boolean/Boolean4.feature,expressions.boolean,False
expressions-boolean-Boolean4-03,[3] NOT and false,Scenario,Boolean4 - NOT logical operations,expressions/boolean/Boolean4.feature,expressions.boolean,False
expressions-boolean-Boolean4-04,[4] Fail when using NOT on a non-boolean literal,Scenario Outline,Boolean4 - NOT logical operations,expressions/boolean/Boolean4.feature,expressions.boolean,False
expressions-boolean-Boolean5-01,[1] Disjunction is distributive over conjunction on non-null,Scenario,Boolean5 - Interop of logical operations,expressions/boolean/Boolean5.feature,expressions.boolean,True
expressions-boolean-Boolean5-02,[2] Disjunction is distributive over conjunction on null,Scenario,Boolean5 - Interop of logical operations,expressions/boolean/Boolean5.feature,expressions.boolean,True
expressions-boolean-Boolean5-03,[3] Conjunction is distributive over disjunction on non-null,Scenario,Boolean5 - Interop of logical operations,expressions/boolean/Boolean5.feature,expressions.boolean,True
expressions-boolean-Boolean5-04,[4] Conjunction is distributive over disjunction on null,Scenario,Boolean5 - Interop of logical operations,expressions/boolean/Boolean5.feature,expressions.boolean,True
expressions-boolean-Boolean5-05,[5] Conjunction is distributive over exclusive disjunction on non-null,Scenario,Boolean5 - Interop of logical operations,expressions/boolean/Boolean5.feature,expressions.boolean,True
expressions-boolean-Boolean5-06,[6] Conjunction is not distributive over exclusive disjunction on null,Scenario,Boolean5 - Interop of logical operations,expressions/boolean/Boolean5.feature,expressions.boolean,True
expressions-boolean-Boolean5-07,[7] De Morgan's law on non-null: the negation of a disjunction is the conjunction of the negations,Scenario,Boolean5 - Interop of logical operations,expressions/boolean/Boolean5.feature,expressions.boolean,True
expressions-boolean-Boolean5-08,[8] De Morgan's law on non-null: the negation of a conjunction is the disjunction of the negations,Scenario,Boolean5 - Interop of logical operations,expressions/boolean/Boolean5.feature,expressions.boolean,True
expressions-comparison-Comparison1-01,[1] Number-typed integer comparison,Scenario,Comparison1 - Equality,expressions/comparison/Comparison1.feature,expressions.comparison,False
expressions-comparison-Comparison1-02,[2] Number-typed float comparison,Scenario,Comparison1 - Equality,expressions/comparison/Comparison1.feature,expressions.comparison,False
expressions-comparison-Comparison1-03,[3] Any-typed string comparison,Scenario,Comparison1 - Equality,expressions/comparison/Comparison1.feature,expressions.comparison,False
expressions-comparison-Comparison1-04,[4] Comparing nodes to nodes,Scenario,Comparison1 - Equality,expressions/comparison/Comparison1.feature,expressions.comparison,False
expressions-comparison-Comparison1-05,[5] Comparing relationships to relationships,Scenario,Comparison1 - Equality,expressions/comparison/Comparison1.feature,expressions.comparison,False
expressions-comparison-Comparison1-06,[6] Comparing lists to lists,Scenario Outline,Comparison1 - Equality,expressions/comparison/Comparison1.feature,expressions.comparison,False
expressions-comparison-Comparison1-07,[7] Comparing maps to maps,Scenario Outline,Comparison1 - Equality,expressions/comparison/Comparison1.feature,expressions.comparison,False
expressions-comparison-Comparison1-08,[8] Equality and inequality of NaN,Scenario Outline,Comparison1 - Equality,expressions/comparison/Comparison1.feature,expressions.comparison,False
expressions-comparison-Comparison1-09,[9] Equality between strings and numbers,Scenario Outline,Comparison1 - Equality,expressions/comparison/Comparison1.feature,expressions.comparison,False
expressions-comparison-Comparison1-10,[10] Handling inlined equality of large integer,Scenario,Comparison1 - Equality,expressions/comparison/Comparison1.feature,expressions.comparison,False
expressions-comparison-Comparison1-11,[11] Handling explicit equality of large integer,Scenario,Comparison1 - Equality,expressions/comparison/Comparison1.feature,expressions.comparison,False
expressions-comparison-Comparison1-12,"[12] Handling inlined equality of large integer, non-equal values",Scenario,Comparison1 - Equality,expressions/comparison/Comparison1.feature,expressions.comparison,False
expressions-comparison-Comparison1-13,"[13] Handling explicit equality of large integer, non-equal values",Scenario,Comparison1 - Equality,expressions/comparison/Comparison1.feature,expressions.comparison,False
expressions-comparison-Comparison1-14,"[14] Direction of traversed relationship is not significant for path equality, simple",Scenario,Comparison1 - Equality,expressions/comparison/Comparison1.feature,expressions.comparison,False
expressions-comparison-Comparison1-15,[15] It is unknown - i.e. null - if a null is equal to a null,Scenario,Comparison1 - Equality,expressions/comparison/Comparison1.feature,expressions.comparison,False
expressions-comparison-Comparison1-16,[16] It is unknown - i.e. null - if a null is not equal to a null,Scenario,Comparison1 - Equality,expressions/comparison/Comparison1.feature,expressions.comparison,False
expressions-comparison-Comparison1-17,[17] Failing when comparing to an undefined variable,Scenario,Comparison1 - Equality,expressions/comparison/Comparison1.feature,expressions.comparison,False
expressions-comparison-Comparison2-01,[1] Comparing strings and integers using > in an AND'd predicate,Scenario,Comparison2 - Half-bounded Range,expressions/comparison/Comparison2.feature,expressions.comparison,True
expressions-comparison-Comparison2-02,[2] Comparing strings and integers using > in a OR'd predicate,Scenario,Comparison2 - Half-bounded Range,expressions/comparison/Comparison2.feature,expressions.comparison,True
expressions-comparison-Comparison2-03,"[3] Comparing across types yields null, except numbers",Scenario Outline,Comparison2 - Half-bounded Range,expressions/comparison/Comparison2.feature,expressions.comparison,True
expressions-comparison-Comparison2-04,[4] Comparing lists,Scenario Outline,Comparison2 - Half-bounded Range,expressions/comparison/Comparison2.feature,expressions.comparison,True
expressions-comparison-Comparison2-05,[5] Comparing NaN,Scenario Outline,Comparison2 - Half-bounded Range,expressions/comparison/Comparison2.feature,expressions.comparison,True
expressions-comparison-Comparison2-06,[6] Comparability between numbers and strings,Scenario Outline,Comparison2 - Half-bounded Range,expressions/comparison/Comparison2.feature,expressions.comparison,True
expressions-comparison-Comparison3-01,[1] Handling numerical ranges 1,Scenario,Comparison3 - Full-Bound Range,expressions/comparison/Comparison3.feature,expressions.comparison,True
expressions-comparison-Comparison3-02,[2] Handling numerical ranges 2,Scenario,Comparison3 - Full-Bound Range,expressions/comparison/Comparison3.feature,expressions.comparison,True
expressions-comparison-Comparison3-03,[3] Handling numerical ranges 3,Scenario,Comparison3 - Full-Bound Range,expressions/comparison/Comparison3.feature,expressions.comparison,True
expressions-comparison-Comparison3-04,[4] Handling numerical ranges 4,Scenario,Comparison3 - Full-Bound Range,expressions/comparison/Comparison3.feature,expressions.comparison,True
expressions-comparison-Comparison3-05,[5] Handling string ranges 1,Scenario,Comparison3 - Full-Bound Range,expressions/comparison/Comparison3.feature,expressions.comparison,True
expressions-comparison-Comparison3-06,[6] Handling string ranges 2,Scenario,Comparison3 - Full-Bound Range,expressions/comparison/Comparison3.feature,expressions.comparison,True
expressions-comparison-Comparison3-07,[7] Handling string ranges 3,Scenario,Comparison3 - Full-Bound Range,expressions/comparison/Comparison3.feature,expressions.comparison,True
expressions-comparison-Comparison3-08,[8] Handling string ranges 4,Scenario,Comparison3 - Full-Bound Range,expressions/comparison/Comparison3.feature,expressions.comparison,True
expressions-comparison-Comparison3-09,[9] Handling empty range,Scenario,Comparison3 - Full-Bound Range,expressions/comparison/Comparison3.feature,expressions.comparison,True
expressions-comparison-Comparison4-01,[1] Handling long chains of operators,Scenario,Comparison4 - Combination of Comparisons,expressions/comparison/Comparison4.feature,expressions.comparison,True
expressions-conditional-Conditional1-01,[1] Run coalesce,Scenario,Conditional1 - Coalesce expression,expressions/conditional/Conditional1.feature,expressions.conditional,True
expressions-conditional-Conditional2-01,[1] Simple cases over integers,Scenario Outline,Conditional2 - Case Expression,expressions/conditional/Conditional2.feature,expressions.conditional,True
expressions-existentialSubqueries-ExistentialSubquery1-01,[1] Simple subquery without WHERE clause,Scenario,ExistentialSubquery1 - Simple existential subquery,expressions/existentialSubqueries/ExistentialSubquery1.feature,expressions.existentialSubqueries,True
expressions-existentialSubqueries-ExistentialSubquery1-02,[2] Simple subquery with WHERE clause,Scenario,ExistentialSubquery1 - Simple existential subquery,expressions/existentialSubqueries/ExistentialSubquery1.feature,expressions.existentialSubqueries,True
expressions-existentialSubqueries-ExistentialSubquery1-03,"[3] Simple subquery without WHERE clause, not existing pattern",Scenario,ExistentialSubquery1 - Simple existential subquery,expressions/existentialSubqueries/ExistentialSubquery1.feature,expressions.existentialSubqueries,True
expressions-existentialSubqueries-ExistentialSubquery1-04,"[4] Simple subquery with WHERE clause, not existing pattern",Scenario,ExistentialSubquery1 - Simple existential subquery,expressions/existentialSubqueries/ExistentialSubquery1.feature,expressions.existentialSubqueries,True
expressions-existentialSubqueries-ExistentialSubquery2-01,[1] Full existential subquery,Scenario,ExistentialSubquery2 - Full existential subquery,expressions/existentialSubqueries/ExistentialSubquery2.feature,expressions.existentialSubqueries,False
expressions-existentialSubqueries-ExistentialSubquery2-02,[2] Full existential subquery with aggregation,Scenario,ExistentialSubquery2 - Full existential subquery,expressions/existentialSubqueries/ExistentialSubquery2.feature,expressions.existentialSubqueries,False
expressions-existentialSubqueries-ExistentialSubquery2-03,[3] Full existential subquery with update clause should fail,Scenario,ExistentialSubquery2 - Full existential subquery,expressions/existentialSubqueries/ExistentialSubquery2.feature,expressions.existentialSubqueries,False
expressions-existentialSubqueries-ExistentialSubquery3-01,[1] Nested simple existential subquery,Scenario,ExistentialSubquery3 - Nested existential subquery,expressions/existentialSubqueries/ExistentialSubquery3.feature,expressions.existentialSubqueries,True
expressions-existentialSubqueries-ExistentialSubquery3-02,[2] Nested full existential subquery,Scenario,ExistentialSubquery3 - Nested existential subquery,expressions/existentialSubqueries/ExistentialSubquery3.feature,expressions.existentialSubqueries,True
expressions-existentialSubqueries-ExistentialSubquery3-03,[3] Nested full existential subquery with pattern predicate,Scenario,ExistentialSubquery3 - Nested existential subquery,expressions/existentialSubqueries/ExistentialSubquery3.feature,expressions.existentialSubqueries,True
expressions-graph-Graph3-01,[1] Creating node without label,Scenario,Graph3 - Node labels,expressions/graph/Graph3.feature,expressions.graph,False
expressions-graph-Graph3-02,[2] Creating node with two labels,Scenario,Graph3 - Node labels,expressions/graph/Graph3.feature,expressions.graph,False
expressions-graph-Graph3-03,[3] Ignore space when creating node with labels,Scenario,Graph3 - Node labels,expressions/graph/Graph3.feature,expressions.graph,False
expressions-graph-Graph3-04,[4] Create node with label in pattern,Scenario,Graph3 - Node labels,expressions/graph/Graph3.feature,expressions.graph,False
expressions-graph-Graph3-05,[5] Using `labels()` in return clauses,Scenario,Graph3 - Node labels,expressions/graph/Graph3.feature,expressions.graph,False
expressions-graph-Graph3-06,[6] `labels()` should accept type Any,Scenario,Graph3 - Node labels,expressions/graph/Graph3.feature,expressions.graph,False
expressions-graph-Graph3-07,[7] `labels()` on null node,Scenario,Graph3 - Node labels,expressions/graph/Graph3.feature,expressions.graph,False
expressions-graph-Graph3-08,[8] `labels()` failing on a path,Scenario,Graph3 - Node labels,expressions/graph/Graph3.feature,expressions.graph,False
expressions-graph-Graph3-09,[9] `labels()` failing on invalid arguments,Scenario,Graph3 - Node labels,expressions/graph/Graph3.feature,expressions.graph,False
expressions-graph-Graph4-01,[1] `type()`,Scenario,Graph4 - Edge relationship type,expressions/graph/Graph4.feature,expressions.graph,False
expressions-graph-Graph4-02,[2] `type()` on two relationships,Scenario,Graph4 - Edge relationship type,expressions/graph/Graph4.feature,expressions.graph,False
expressions-graph-Graph4-03,[3] `type()` on null relationship,Scenario,Graph4 - Edge relationship type,expressions/graph/Graph4.feature,expressions.graph,False
expressions-graph-Graph4-04,[4] `type()` on mixed null and non-null relationships,Scenario,Graph4 - Edge relationship type,expressions/graph/Graph4.feature,expressions.graph,False
expressions-graph-Graph4-05,[5] `type()` handling Any type,Scenario,Graph4 - Edge relationship type,expressions/graph/Graph4.feature,expressions.graph,False
expressions-graph-Graph4-06,[6] `type()` failing on invalid arguments,Scenario Outline,Graph4 - Edge relationship type,expressions/graph/Graph4.feature,expressions.graph,False
expressions-graph-Graph4-07,[7] Failing when using `type()` on a node,Scenario,Graph4 - Edge relationship type,expressions/graph/Graph4.feature,expressions.graph,False
expressions-graph-Graph5-01,[1] Single-labels expression on nodes,Scenario,Graph5 - Node and edge label expressions,expressions/graph/Graph5.feature,expressions.graph,True
expressions-graph-Graph5-02,[2] Single-labels expression on relationships,Scenario,Graph5 - Node and edge label expressions,expressions/graph/Graph5.feature,expressions.graph,True
expressions-graph-Graph5-03,[3] Conjunctive labels expression on nodes,Scenario,Graph5 - Node and edge label expressions,expressions/graph/Graph5.feature,expressions.graph,True
expressions-graph-Graph5-04,[4] Conjunctive labels expression on nodes with varying order and repeating labels,Scenario Outline,Graph5 - Node and edge label expressions,expressions/graph/Graph5.feature,expressions.graph,True
expressions-graph-Graph5-05,[5] Label expression on null,Scenario,Graph5 - Node and edge label expressions,expressions/graph/Graph5.feature,expressions.graph,True
expressions-graph-Graph6-01,[1] Statically access a property of a non-null node,Scenario,Graph6 - Static property access,expressions/graph/Graph6.feature,expressions.graph,False
expressions-graph-Graph6-02,[2] Statically access a property of a optional non-null node,Scenario,Graph6 - Static property access,expressions/graph/Graph6.feature,expressions.graph,False
expressions-graph-Graph6-03,[3] Statically access a property of a null node,Scenario,Graph6 - Static property access,expressions/graph/Graph6.feature,expressions.graph,False
expressions-graph-Graph6-04,[4] Statically access a property of a node resulting from an expression,Scenario,Graph6 - Static property access,expressions/graph/Graph6.feature,expressions.graph,False
expressions-graph-Graph6-05,[5] Statically access a property of a non-null relationship,Scenario,Graph6 - Static property access,expressions/graph/Graph6.feature,expressions.graph,False
expressions-graph-Graph6-06,[6] Statically access a property of a optional non-null relationship,Scenario,Graph6 - Static property access,expressions/graph/Graph6.feature,expressions.graph,False
expressions-graph-Graph6-07,[7] Statically access a property of a null relationship,Scenario,Graph6 - Static property access,expressions/graph/Graph6.feature,expressions.graph,False
expressions-graph-Graph6-08,[8] Statically access a property of a relationship resulting from an expression,Scenario,Graph6 - Static property access,expressions/graph/Graph6.feature,expressions.graph,False
expressions-graph-Graph6-09,[9] Fail when performing property access on a non-graph element,Scenario Outline,Graph6 - Static property access,expressions/graph/Graph6.feature,expressions.graph,False
expressions-graph-Graph7-01,[1] Execute n['name'] in read queries,Scenario,Graph7 - Dynamic property access,expressions/graph/Graph7.feature,expressions.graph,True
expressions-graph-Graph7-02,[2] Execute n['name'] in update queries,Scenario,Graph7 - Dynamic property access,expressions/graph/Graph7.feature,expressions.graph,True
expressions-graph-Graph7-03,[3] Use dynamic property lookup based on parameters when there is lhs type information,Scenario,Graph7 - Dynamic property access,expressions/graph/Graph7.feature,expressions.graph,True
expressions-graph-Graph8-01,"[1] Using `keys()` on a single node, non-empty result",Scenario,Graph8 - Property keys function,expressions/graph/Graph8.feature,expressions.graph,True
expressions-graph-Graph8-02,"[2] Using `keys()` on multiple nodes, non-empty result",Scenario,Graph8 - Property keys function,expressions/graph/Graph8.feature,expressions.graph,True
expressions-graph-Graph8-03,"[3] Using `keys()` on a single node, empty result",Scenario,Graph8 - Property keys function,expressions/graph/Graph8.feature,expressions.graph,True
expressions-graph-Graph8-04,[4] Using `keys()` on an optionally matched node,Scenario,Graph8 - Property keys function,expressions/graph/Graph8.feature,expressions.graph,True
expressions-graph-Graph8-05,"[5] Using `keys()` on a relationship, non-empty result",Scenario,Graph8 - Property keys function,expressions/graph/Graph8.feature,expressions.graph,True
expressions-graph-Graph8-06,"[6] Using `keys()` on a relationship, empty result",Scenario,Graph8 - Property keys function,expressions/graph/Graph8.feature,expressions.graph,True
expressions-graph-Graph8-07,[7] Using `keys()` on an optionally matched relationship,Scenario,Graph8 - Property keys function,expressions/graph/Graph8.feature,expressions.graph,True
expressions-graph-Graph8-08,[8] Using `keys()` and `IN` to check property existence,Scenario,Graph8 - Property keys function,expressions/graph/Graph8.feature,expressions.graph,True
expressions-graph-Graph9-01,[1] `properties()` on a node,Scenario,Graph9 - Retrieve all properties as a property map,expressions/graph/Graph9.feature,expressions.graph,False
expressions-graph-Graph9-02,[2] `properties()` on a relationship,Scenario,Graph9 - Retrieve all properties as a property map,expressions/graph/Graph9.feature,expressions.graph,False
expressions-graph-Graph9-03,[3] `properties()` on null,Scenario,Graph9 - Retrieve all properties as a property map,expressions/graph/Graph9.feature,expressions.graph,False
expressions-graph-Graph9-04,[4] `properties()` on a map,Scenario,Graph9 - Retrieve all properties as a property map,expressions/graph/Graph9.feature,expressions.graph,False
expressions-graph-Graph9-05,[5] `properties()` failing on an integer literal,Scenario,Graph9 - Retrieve all properties as a property map,expressions/graph/Graph9.feature,expressions.graph,False
expressions-graph-Graph9-06,[6] `properties()` failing on a string literal,Scenario,Graph9 - Retrieve all properties as a property map,expressions/graph/Graph9.feature,expressions.graph,False
expressions-graph-Graph9-07,[7] `properties()` failing on a list of booleans,Scenario,Graph9 - Retrieve all properties as a property map,expressions/graph/Graph9.feature,expressions.graph,False
expressions-list-List1-01,[1] Indexing into literal list,Scenario,List1 - Dynamic Element Access,expressions/list/List1.feature,expressions.list,True
expressions-list-List1-02,[2] Indexing into nested literal lists,Scenario,List1 - Dynamic Element Access,expressions/list/List1.feature,expressions.list,True
expressions-list-List1-03,[3] Use list lookup based on parameters when there is no type information,Scenario,List1 - Dynamic Element Access,expressions/list/List1.feature,expressions.list,True
expressions-list-List1-04,[4] Use list lookup based on parameters when there is lhs type information,Scenario,List1 - Dynamic Element Access,expressions/list/List1.feature,expressions.list,True
expressions-list-List1-05,[5] Use list lookup based on parameters when there is rhs type information,Scenario,List1 - Dynamic Element Access,expressions/list/List1.feature,expressions.list,True
expressions-list-List1-06,[6] Fail when indexing a non-list #Example: <exampleName>,Scenario Outline,List1 - Dynamic Element Access,expressions/list/List1.feature,expressions.list,True
expressions-list-List1-07,[7] Fail when indexing a non-list given by a parameter #Example: <exampleName>,Scenario Outline,List1 - Dynamic Element Access,expressions/list/List1.feature,expressions.list,True
expressions-list-List1-08,[8] Fail when indexing with a non-integer #Example: <exampleName>,Scenario Outline,List1 - Dynamic Element Access,expressions/list/List1.feature,expressions.list,True
expressions-list-List1-09,[9] Fail when indexing with a non-integer given by a parameter #Example: <exampleName>,Scenario Outline,List1 - Dynamic Element Access,expressions/list/List1.feature,expressions.list,True
expressions-list-List11-01,[1] Create list from `range()` with default step,Scenario Outline,List11 - Create a list from a range,expressions/list/List11.feature,expressions.list,True
expressions-list-List11-02,[2] Create list from `range()` with explicitly given step,Scenario Outline,List11 - Create a list from a range,expressions/list/List11.feature,expressions.list,True
expressions-list-List11-03,[3] Create an empty list if range direction and step direction are inconsistent,Scenario,List11 - Create a list from a range,expressions/list/List11.feature,expressions.list,True
expressions-list-List11-04,[4] Fail on invalid arguments for `range()`,Scenario Outline,List11 - Create a list from a range,expressions/list/List11.feature,expressions.list,True
expressions-list-List11-05,[5] Fail on invalid argument types for `range()`,Scenario Outline,List11 - Create a list from a range,expressions/list/List11.feature,expressions.list,True
expressions-list-List12-01,[1] Collect and extract using a list comprehension,Scenario,List12 - List Comprehension,expressions/list/List12.feature,expressions.list,False
expressions-list-List12-02,[2] Collect and filter using a list comprehension,Scenario,List12 - List Comprehension,expressions/list/List12.feature,expressions.list,False
expressions-list-List12-03,[3] Size of list comprehension,Scenario,List12 - List Comprehension,expressions/list/List12.feature,expressions.list,False
expressions-list-List12-04,[4] Returning a list comprehension,Scenario,List12 - List Comprehension,expressions/list/List12.feature,expressions.list,False
expressions-list-List12-05,[5] Using a list comprehension in a WITH,Scenario,List12 - List Comprehension,expressions/list/List12.feature,expressions.list,False
expressions-list-List12-06,[6] Using a list comprehension in a WHERE,Scenario,List12 - List Comprehension,expressions/list/List12.feature,expressions.list,False
expressions-list-List12-07,[7] Fail when using aggregation in list comprehension,Scenario,List12 - List Comprehension,expressions/list/List12.feature,expressions.list,False
expressions-list-List2-01,[1] List slice,Scenario,List2 - List Slicing,expressions/list/List2.feature,expressions.list,True
expressions-list-List2-02,[2] List slice with implicit end,Scenario,List2 - List Slicing,expressions/list/List2.feature,expressions.list,True
expressions-list-List2-03,[3] List slice with implicit start,Scenario,List2 - List Slicing,expressions/list/List2.feature,expressions.list,True
expressions-list-List2-04,[4] List slice with singleton range,Scenario,List2 - List Slicing,expressions/list/List2.feature,expressions.list,True
expressions-list-List2-05,[5] List slice with empty range,Scenario,List2 - List Slicing,expressions/list/List2.feature,expressions.list,True
expressions-list-List2-06,[6] List slice with negative range,Scenario,List2 - List Slicing,expressions/list/List2.feature,expressions.list,True
expressions-list-List2-07,[7] List slice with invalid range,Scenario,List2 - List Slicing,expressions/list/List2.feature,expressions.list,True
expressions-list-List2-08,[8] List slice with exceeding range,Scenario,List2 - List Slicing,expressions/list/List2.feature,expressions.list,True
expressions-list-List2-09,[9] List slice with null range,Scenario Outline,List2 - List Slicing,expressions/list/List2.feature,expressions.list,True
expressions-list-List2-10,[10] List slice with parameterised range,Scenario,List2 - List Slicing,expressions/list/List2.feature,expressions.list,True
expressions-list-List2-11,[11] List slice with parameterised invalid range,Scenario,List2 - List Slicing,expressions/list/List2.feature,expressions.list,True
expressions-list-List3-01,[1] Equality between list and literal should return false,Scenario,List3 - List Equality,expressions/list/List3.feature,expressions.list,True
expressions-list-List3-02,[2] Equality of lists of different length should return false despite nulls,Scenario,List3 - List Equality,expressions/list/List3.feature,expressions.list,True
expressions-list-List3-03,[3] Equality between different lists with null should return false,Scenario,List3 - List Equality,expressions/list/List3.feature,expressions.list,True
expressions-list-List3-04,[4] Equality between almost equal lists with null should return null,Scenario,List3 - List Equality,expressions/list/List3.feature,expressions.list,True
expressions-list-List3-05,[5] Equality of nested lists of different length should return false despite nulls,Scenario,List3 - List Equality,expressions/list/List3.feature,expressions.list,True
expressions-list-List3-06,[6] Equality between different nested lists with null should return false,Scenario,List3 - List Equality,expressions/list/List3.feature,expressions.list,True
expressions-list-List3-07,[7] Equality between almost equal nested lists with null should return null,Scenario,List3 - List Equality,expressions/list/List3.feature,expressions.list,True
expressions-list-List4-01,[1] Concatenating lists of same type,Scenario,List4 - List Concatenation,expressions/list/List4.feature,expressions.list,True
expressions-list-List4-02,[2] Concatenating a list with a scalar of same type,Scenario,List4 - List Concatenation,expressions/list/List4.feature,expressions.list,True
expressions-list-List5-01,[1] IN should work with nested list subscripting,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-02,[2] IN should work with nested literal list subscripting,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-03,[3] IN should work with list slices,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-04,[4] IN should work with literal list slices,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-05,[5] IN should return false when matching a number with a string,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-06,[6] IN should return false when matching a number with a string - list version,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-07,[7] IN should return false when types of LHS and RHS don't match - singleton list,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-08,[8] IN should return false when types of LHS and RHS don't match - list,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-09,[9] IN should return true when types of LHS and RHS match - singleton list,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-10,[10] IN should return true when types of LHS and RHS match - list,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-11,[11] IN should return false when order of elements in LHS list and RHS list don't match,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-12,[12] IN with different length lists should return false,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-13,[13] IN should return false when matching a list with a nested list with same elements,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-14,[14] IN should return true when both LHS and RHS contain nested lists,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-15,[15] IN should return true when both LHS and RHS contain a nested list alongside a scalar element,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-16,[16] IN should return true when LHS and RHS contain a nested list - singleton version,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-17,[17] IN should return true when LHS and RHS contain a nested list,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-18,[18] IN should return false when LHS contains a nested list and type mismatch on RHS - singleton version,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-19,[19] IN should return false when LHS contains a nested list and type mismatch on RHS,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-20,[20] IN should return null if LHS and RHS are null,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-21,[21] IN should return null if LHS and RHS are null - list version,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-22,"[22] IN should return null when LHS and RHS both ultimately contain null, even if LHS and RHS are of different types (nested list and flat list)",Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-23,[23] IN with different length lists should return false despite nulls,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-24,[24] IN should return true if match despite nulls,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-25,[25] IN should return null if comparison with null is required,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-26,[26] IN should return true if correct list found despite other lists having nulls,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-27,[27] IN should return true if correct list found despite null being another element within containing list,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-28,"[28] IN should return false if no match can be found, despite nulls",Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-29,"[29] IN should return null if comparison with null is required, list version",Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-30,"[30] IN should return false if different length lists compared, even if the extra element is null",Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-31,[31] IN should return null when comparing two so-called identical lists where one element is null,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-32,"[32] IN should return true with previous null match, list version",Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-33,"[33] IN should return false if different length lists with nested elements compared, even if the extra element is null",Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-34,"[34] IN should return null if comparison with null is required, list version 2",Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-35,[35] IN should work with an empty list,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-36,[36] IN should return false for the empty list if the LHS and RHS types differ,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-37,[37] IN should work with an empty list in the presence of other list elements: matching,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-38,[38] IN should work with an empty list in the presence of other list elements: not matching,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-39,[39] IN should work with an empty list when comparing nested lists,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-40,[40] IN should return null if comparison with null is required for empty list,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-41,[41] IN should return true when LHS and RHS contain nested list with multiple empty lists,Scenario,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List5-42,[42] Failing when using IN on a non-list literal,Scenario Outline,List5 - List Membership Validation - IN Operator,expressions/list/List5.feature,expressions.list,False
expressions-list-List6-01,[1] Return list size,Scenario,List6 - List size,expressions/list/List6.feature,expressions.list,False
expressions-list-List6-02,[2] Setting and returning the size of a list property,Scenario,List6 - List size,expressions/list/List6.feature,expressions.list,False
expressions-list-List6-03,[3] Concatenating and returning the size of literal lists,Scenario,List6 - List size,expressions/list/List6.feature,expressions.list,False
expressions-list-List6-04,[4] `size()` on null list,Scenario,List6 - List size,expressions/list/List6.feature,expressions.list,False
expressions-list-List6-05,[5] Fail for `size()` on paths,Scenario,List6 - List size,expressions/list/List6.feature,expressions.list,False
expressions-list-List6-06,[6] Fail for `size()` on pattern predicates,Scenario Outline,List6 - List size,expressions/list/List6.feature,expressions.list,False
expressions-list-List6-07,[7] Using size of pattern comprehension to test existence,Scenario,List6 - List size,expressions/list/List6.feature,expressions.list,False
expressions-list-List6-08,[8] Get node degree via size of pattern comprehension,Scenario,List6 - List size,expressions/list/List6.feature,expressions.list,False
expressions-list-List6-09,[9] Get node degree via size of pattern comprehension that specifies a relationship type,Scenario,List6 - List size,expressions/list/List6.feature,expressions.list,False
expressions-list-List6-10,[10] Get node degree via size of pattern comprehension that specifies multiple relationship types,Scenario,List6 - List size,expressions/list/List6.feature,expressions.list,False
expressions-list-List9-01,[1] Returning nested expressions based on list property,Scenario,List9 - List Tail,expressions/list/List9.feature,expressions.list,True
expressions-literals-Literals1-01,[1] Return a boolean true lower case,Scenario,Literals1 - Boolean and Null,expressions/literals/Literals1.feature,expressions.literals,True
expressions-literals-Literals1-02,[2] Return a boolean true upper case,Scenario,Literals1 - Boolean and Null,expressions/literals/Literals1.feature,expressions.literals,True
expressions-literals-Literals1-03,[3] Return a boolean false lower case,Scenario,Literals1 - Boolean and Null,expressions/literals/Literals1.feature,expressions.literals,True
expressions-literals-Literals1-04,[4] Return a boolean false upper case,Scenario,Literals1 - Boolean and Null,expressions/literals/Literals1.feature,expressions.literals,True
expressions-literals-Literals1-05,[5] Return null lower case,Scenario,Literals1 - Boolean and Null,expressions/literals/Literals1.feature,expressions.literals,True
expressions-literals-Literals1-06,[6] Return null upper case,Scenario,Literals1 - Boolean and Null,expressions/literals/Literals1.feature,expressions.literals,True
expressions-literals-Literals2-01,[1] Return a short positive integer,Scenario,Literals2 - Decimal integer,expressions/literals/Literals2.feature,expressions.literals,False
expressions-literals-Literals2-02,[2] Return a long positive integer,Scenario,Literals2 - Decimal integer,expressions/literals/Literals2.feature,expressions.literals,False
expressions-literals-Literals2-03,[3] Return the largest integer,Scenario,Literals2 - Decimal integer,expressions/literals/Literals2.feature,expressions.literals,False
expressions-literals-Literals2-04,[4] Return a positive zero,Scenario,Literals2 - Decimal integer,expressions/literals/Literals2.feature,expressions.literals,False
expressions-literals-Literals2-05,[5] Return a negative zero,Scenario,Literals2 - Decimal integer,expressions/literals/Literals2.feature,expressions.literals,False
expressions-literals-Literals2-06,[6] Return a short negative integer,Scenario,Literals2 - Decimal integer,expressions/literals/Literals2.feature,expressions.literals,False
expressions-literals-Literals2-07,[7] Return a long negative integer,Scenario,Literals2 - Decimal integer,expressions/literals/Literals2.feature,expressions.literals,False
expressions-literals-Literals2-08,[8] Return the smallest integer,Scenario,Literals2 - Decimal integer,expressions/literals/Literals2.feature,expressions.literals,False
expressions-literals-Literals2-09,[9] Fail on a too large integer,Scenario,Literals2 - Decimal integer,expressions/literals/Literals2.feature,expressions.literals,False
expressions-literals-Literals2-10,[10] Fail on a too small integer,Scenario,Literals2 - Decimal integer,expressions/literals/Literals2.feature,expressions.literals,False
expressions-literals-Literals2-11,[11] Fail on an integer containing a alphabetic character,Scenario,Literals2 - Decimal integer,expressions/literals/Literals2.feature,expressions.literals,False
expressions-literals-Literals2-12,[12] Fail on an integer containing a invalid symbol character,Scenario,Literals2 - Decimal integer,expressions/literals/Literals2.feature,expressions.literals,False
expressions-literals-Literals3-01,[1] Return a short positive hexadecimal integer,Scenario,Literals3 - Hexadecimal integer,expressions/literals/Literals3.feature,expressions.literals,False
expressions-literals-Literals3-02,[2] Return a long positive hexadecimal integer,Scenario,Literals3 - Hexadecimal integer,expressions/literals/Literals3.feature,expressions.literals,False
expressions-literals-Literals3-03,[3] Return the largest hexadecimal integer,Scenario,Literals3 - Hexadecimal integer,expressions/literals/Literals3.feature,expressions.literals,False
expressions-literals-Literals3-04,[4] Return a positive hexadecimal zero,Scenario,Literals3 - Hexadecimal integer,expressions/literals/Literals3.feature,expressions.literals,False
expressions-literals-Literals3-05,[5] Return a negative hexadecimal zero,Scenario,Literals3 - Hexadecimal integer,expressions/literals/Literals3.feature,expressions.literals,False
expressions-literals-Literals3-06,[6] Return a short negative hexadecimal integer,Scenario,Literals3 - Hexadecimal integer,expressions/literals/Literals3.feature,expressions.literals,False
expressions-literals-Literals3-07,[7] Return a long negative hexadecimal integer,Scenario,Literals3 - Hexadecimal integer,expressions/literals/Literals3.feature,expressions.literals,False
expressions-literals-Literals3-08,[8] Return the smallest hexadecimal integer,Scenario,Literals3 - Hexadecimal integer,expressions/literals/Literals3.feature,expressions.literals,False
expressions-literals-Literals3-09,[9] Return a lower case hexadecimal integer,Scenario,Literals3 - Hexadecimal integer,expressions/literals/Literals3.feature,expressions.literals,False
expressions-literals-Literals3-10,[10] Return a upper case hexadecimal integer,Scenario,Literals3 - Hexadecimal integer,expressions/literals/Literals3.feature,expressions.literals,False
expressions-literals-Literals3-11,[11] Return a mixed case hexadecimal integer,Scenario,Literals3 - Hexadecimal integer,expressions/literals/Literals3.feature,expressions.literals,False
expressions-literals-Literals3-12,[12] Fail on an incomplete hexadecimal integer,Scenario,Literals3 - Hexadecimal integer,expressions/literals/Literals3.feature,expressions.literals,False
expressions-literals-Literals3-13,[13] Fail on an hexadecimal literal containing a lower case invalid alphanumeric character,Scenario,Literals3 - Hexadecimal integer,expressions/literals/Literals3.feature,expressions.literals,False
expressions-literals-Literals3-14,[14] Fail on an hexadecimal literal containing a upper case invalid alphanumeric character,Scenario,Literals3 - Hexadecimal integer,expressions/literals/Literals3.feature,expressions.literals,False
expressions-literals-Literals3-15,[16] Fail on a too large hexadecimal integer,Scenario,Literals3 - Hexadecimal integer,expressions/literals/Literals3.feature,expressions.literals,False
expressions-literals-Literals3-16,[17] Fail on a too small hexadecimal integer,Scenario,Literals3 - Hexadecimal integer,expressions/literals/Literals3.feature,expressions.literals,False
expressions-literals-Literals4-01,[1] Return a short positive octal integer,Scenario,Literals4 - Octal integer,expressions/literals/Literals4.feature,expressions.literals,False
expressions-literals-Literals4-02,[2] Return a long positive octal integer,Scenario,Literals4 - Octal integer,expressions/literals/Literals4.feature,expressions.literals,False
expressions-literals-Literals4-03,[3] Return the largest octal integer,Scenario,Literals4 - Octal integer,expressions/literals/Literals4.feature,expressions.literals,False
expressions-literals-Literals4-04,[4] Return a positive octal zero,Scenario,Literals4 - Octal integer,expressions/literals/Literals4.feature,expressions.literals,False
expressions-literals-Literals4-05,[5] Return a negative octal zero,Scenario,Literals4 - Octal integer,expressions/literals/Literals4.feature,expressions.literals,False
expressions-literals-Literals4-06,[6] Return a short negative octal integer,Scenario,Literals4 - Octal integer,expressions/literals/Literals4.feature,expressions.literals,False
expressions-literals-Literals4-07,[7] Return a long negative octal integer,Scenario,Literals4 - Octal integer,expressions/literals/Literals4.feature,expressions.literals,False
expressions-literals-Literals4-08,[8] Return the smallest octal integer,Scenario,Literals4 - Octal integer,expressions/literals/Literals4.feature,expressions.literals,False
expressions-literals-Literals4-09,[9] Fail on a too large octal integer,Scenario,Literals4 - Octal integer,expressions/literals/Literals4.feature,expressions.literals,False
expressions-literals-Literals4-10,[10] Fail on a too small octal integer,Scenario,Literals4 - Octal integer,expressions/literals/Literals4.feature,expressions.literals,False
expressions-literals-Literals5-01,[1] Return a short positive float,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-02,[2] Return a short positive float without integer digits,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-03,[3] Return a long positive float,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-04,[4] Return a long positive float without integer digits,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-05,[5] Return a very long positive float,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-06,[6] Return a very long positive float without integer digits,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-07,[7] Return a positive zero float,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-08,[8] Return a positive zero float without integer digits,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-09,[9] Return a negative zero float,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-10,[10] Return a negative zero float without integer digits,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-11,[11] Return a very long negative float,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-12,[12] Return a very long negative float without integer digits,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-13,[13] Return a positive float with positive lower case exponent,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-14,[14] Return a positive float with positive upper case exponent,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-15,[15] Return a positive float with positive lower case exponent without integer digits,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-16,[16] Return a positive float with negative lower case exponent,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-17,[17] Return a positive float with negative lower case exponent without integer digits,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-18,[18] Return a positive float with negative upper case exponent without integer digits,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-19,[19] Return a negative float in with positive lower case exponent,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-20,[20] Return a negative float in with positive upper case exponent,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-21,[21] Return a negative float with positive lower case exponent without integer digits,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-22,[22] Return a negative float with negative lower case exponent,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-23,[23] Return a negative float with negative lower case exponent without integer digits,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-24,[24] Return a negative float with negative upper case exponent without integer digits,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-25,[25] Return a positive float with one integer digit and maximum positive exponent,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-26,[26] Return a positive float with nine integer digit and maximum positive exponent,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals5-27,[27] Fail when float value is too large,Scenario,Literals5 - Float,expressions/literals/Literals5.feature,expressions.literals,False
expressions-literals-Literals6-01,[1] Return a single-quoted empty string,Scenario,Literals6 - String,expressions/literals/Literals6.feature,expressions.literals,False
expressions-literals-Literals6-02,[2] Return a single-quoted string with one character,Scenario,Literals6 - String,expressions/literals/Literals6.feature,expressions.literals,False
expressions-literals-Literals6-03,[3] Return a single-quoted string with uft-8 characters,Scenario,Literals6 - String,expressions/literals/Literals6.feature,expressions.literals,False
expressions-literals-Literals6-04,[4] Return a single-quoted string with escaped single-quoted,Scenario,Literals6 - String,expressions/literals/Literals6.feature,expressions.literals,False
expressions-literals-Literals6-05,[5] Return a single-quoted string with escaped characters,Scenario,Literals6 - String,expressions/literals/Literals6.feature,expressions.literals,False
expressions-literals-Literals6-06,[6] Return a single-quoted string with 100 characters,Scenario,Literals6 - String,expressions/literals/Literals6.feature,expressions.literals,False
expressions-literals-Literals6-07,[7] Return a single-quoted string with 1000 characters,Scenario,Literals6 - String,expressions/literals/Literals6.feature,expressions.literals,False
expressions-literals-Literals6-08,[8] Return a single-quoted string with 10000 characters,Scenario,Literals6 - String,expressions/literals/Literals6.feature,expressions.literals,False
expressions-literals-Literals6-09,[9] Return a double-quoted empty string,Scenario,Literals6 - String,expressions/literals/Literals6.feature,expressions.literals,False
expressions-literals-Literals6-10,[10] Accept valid Unicode literal,Scenario,Literals6 - String,expressions/literals/Literals6.feature,expressions.literals,False
expressions-literals-Literals6-11,[11] Return a double-quoted string with one character,Scenario,Literals6 - String,expressions/literals/Literals6.feature,expressions.literals,False
expressions-literals-Literals6-12,[12] Return a double-quoted string with uft-8 characters,Scenario,Literals6 - String,expressions/literals/Literals6.feature,expressions.literals,False
expressions-literals-Literals6-13,[13] Failing on incorrect unicode literal,Scenario,Literals6 - String,expressions/literals/Literals6.feature,expressions.literals,False
expressions-literals-Literals7-01,[1] Return an empty list,Scenario,Literals7 - List,expressions/literals/Literals7.feature,expressions.literals,False
expressions-literals-Literals7-02,[2] Return a list containing a boolean,Scenario,Literals7 - List,expressions/literals/Literals7.feature,expressions.literals,False
expressions-literals-Literals7-03,[3] Return a list containing a null,Scenario,Literals7 - List,expressions/literals/Literals7.feature,expressions.literals,False
expressions-literals-Literals7-04,[4] Return a list containing a integer,Scenario,Literals7 - List,expressions/literals/Literals7.feature,expressions.literals,False
expressions-literals-Literals7-05,[5] Return a list containing a hexadecimal integer,Scenario,Literals7 - List,expressions/literals/Literals7.feature,expressions.literals,False
expressions-literals-Literals7-06,[6] Return a list containing a octal integer,Scenario,Literals7 - List,expressions/literals/Literals7.feature,expressions.literals,False
expressions-literals-Literals7-07,[7] Return a list containing a float,Scenario,Literals7 - List,expressions/literals/Literals7.feature,expressions.literals,False
expressions-literals-Literals7-08,[8] Return a list containing a string,Scenario,Literals7 - List,expressions/literals/Literals7.feature,expressions.literals,False
expressions-literals-Literals7-09,[9] Return a list containing an empty lists,Scenario,Literals7 - List,expressions/literals/Literals7.feature,expressions.literals,False
expressions-literals-Literals7-10,[10] Return seven-deep nested empty lists,Scenario,Literals7 - List,expressions/literals/Literals7.feature,expressions.literals,False
expressions-literals-Literals7-11,[11] Return 20-deep nested empty lists,Scenario,Literals7 - List,expressions/literals/Literals7.feature,expressions.literals,False
expressions-literals-Literals7-12,[12] Return 40-deep nested empty lists,Scenario,Literals7 - List,expressions/literals/Literals7.feature,expressions.literals,False
expressions-literals-Literals7-13,[13] Return a list containing an empty map,Scenario,Literals7 - List,expressions/literals/Literals7.feature,expressions.literals,False
expressions-literals-Literals7-14,[14] Return a list containing multiple integer,Scenario,Literals7 - List,expressions/literals/Literals7.feature,expressions.literals,False
expressions-literals-Literals7-15,[16] Return a list containing multiple mixed values,Scenario,Literals7 - List,expressions/literals/Literals7.feature,expressions.literals,False
expressions-literals-Literals7-16,[17] Return a list containing real and fake nested lists,Scenario,Literals7 - List,expressions/literals/Literals7.feature,expressions.literals,False
expressions-literals-Literals7-17,[18] Return a complex list containing multiple mixed and nested values,Scenario,Literals7 - List,expressions/literals/Literals7.feature,expressions.literals,False
expressions-literals-Literals7-18,[19] Fail on a list containing only a comma,Scenario,Literals7 - List,expressions/literals/Literals7.feature,expressions.literals,False
expressions-literals-Literals7-19,[20] Fail on a nested list with non-matching brackets,Scenario,Literals7 - List,expressions/literals/Literals7.feature,expressions.literals,False
expressions-literals-Literals7-20,[21] Fail on a nested list with missing commas,Scenario,Literals7 - List,expressions/literals/Literals7.feature,expressions.literals,False
expressions-literals-Literals8-01,[1] Return an empty map,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-02,[2] Return a map containing one value with alphabetic lower case key,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-03,[3] Return a map containing one value with alphabetic upper case key,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-04,[4] Return a map containing one value with alphabetic mixed case key,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-05,[5] Return a map containing one value with alphanumeric mixed case key,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-06,[6] Return a map containing a boolean,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-07,[7] Return a map containing a null,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-08,[8] Return a map containing a integer,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-09,[9] Return a map containing a hexadecimal integer,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-10,[10] Return a map containing a octal integer,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-11,[11] Return a map containing a float,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-12,[12] Return a map containing a string,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-13,[13] Return a map containing an empty map,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-14,[14] Return seven-deep nested maps,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-15,[15] Return 20-deep nested maps,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-16,[16] Return 40-deep nested maps,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-17,[17] Return a map containing real and fake nested maps,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-18,[18] Return a complex map containing multiple mixed and nested values,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-19,[19] Fail on a map containing key starting with a number,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-20,[20] Fail on a map containing key with symbol,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-21,[21] Fail on a map containing key with dot,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-22,[22] Fail on a map containing unquoted string,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-23,[23] Fail on a map containing only a comma,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-24,[24] Fail on a map containing a value without key,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-25,[25] Fail on a map containing a list without key,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-26,[26] Fail on a map containing a map without key,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-literals-Literals8-27,[27] Fail on a nested map with non-matching braces,Scenario,Literals8 - Maps,expressions/literals/Literals8.feature,expressions.literals,False
expressions-map-Map1-01,[1] Statically access a field of a non-null map,Scenario,Map1 - Static value access,expressions/map/Map1.feature,expressions.map,True
expressions-map-Map1-02,[2] Statically access a field of a null map,Scenario,Map1 - Static value access,expressions/map/Map1.feature,expressions.map,True
expressions-map-Map1-03,[3] Statically access a field of a map resulting from an expression,Scenario,Map1 - Static value access,expressions/map/Map1.feature,expressions.map,True
expressions-map-Map1-04,[4] Statically access a field is case-sensitive,Scenario Outline,Map1 - Static value access,expressions/map/Map1.feature,expressions.map,True
expressions-map-Map1-05,[5] Statically access a field with a delimited identifier,Scenario Outline,Map1 - Static value access,expressions/map/Map1.feature,expressions.map,True
expressions-map-Map1-06,[6] Fail when performing property access on a non-map,Scenario Outline,Map1 - Static value access,expressions/map/Map1.feature,expressions.map,True
expressions-map-Map2-01,[1] Dynamically access a field based on parameters when there is no type information,Scenario,Map2 - Dynamic Value Access,expressions/map/Map2.feature,expressions.map,True
expressions-map-Map2-02,[2] Dynamically access a field based on parameters when there is rhs type information,Scenario,Map2 - Dynamic Value Access,expressions/map/Map2.feature,expressions.map,True
expressions-map-Map2-03,[3] Dynamically access a field on null results in null,Scenario,Map2 - Dynamic Value Access,expressions/map/Map2.feature,expressions.map,True
expressions-map-Map2-04,[4] Dynamically access a field with null results in null,Scenario,Map2 - Dynamic Value Access,expressions/map/Map2.feature,expressions.map,True
expressions-map-Map2-05,[5] Dynamically access a field is case-sensitive,Scenario Outline,Map2 - Dynamic Value Access,expressions/map/Map2.feature,expressions.map,True
expressions-map-Map2-06,[6] Fail at runtime when attempting to index with an Int into a Map,Scenario,Map2 - Dynamic Value Access,expressions/map/Map2.feature,expressions.map,True
expressions-map-Map2-07,[7] Fail at runtime when trying to index into a map with a non-string,Scenario,Map2 - Dynamic Value Access,expressions/map/Map2.feature,expressions.map,True
expressions-map-Map2-08,[8] Fail at runtime when trying to index something which is not a map,Scenario,Map2 - Dynamic Value Access,expressions/map/Map2.feature,expressions.map,True
expressions-map-Map3-01,[1] Using `keys()` on a literal map,Scenario,Map3 - Keys function,expressions/map/Map3.feature,expressions.map,True
expressions-map-Map3-02,[2] Using `keys()` on a parameter map,Scenario,Map3 - Keys function,expressions/map/Map3.feature,expressions.map,True
expressions-map-Map3-03,[3] Using `keys()` on null map,Scenario,Map3 - Keys function,expressions/map/Map3.feature,expressions.map,True
expressions-map-Map3-04,[4] Using `keys()` on map with null values,Scenario Outline,Map3 - Keys function,expressions/map/Map3.feature,expressions.map,True
expressions-map-Map3-05,[5] Using `keys()` and `IN` to check field existence,Scenario,Map3 - Keys function,expressions/map/Map3.feature,expressions.map,True
expressions-mathematical-Mathematical11-01,[1] Absolute function,Scenario,Mathematical11 - Signed numbers functions,expressions/mathematical/Mathematical11.feature,expressions.mathematical,True
expressions-mathematical-Mathematical13-01,[1] `sqrt()` returning float values,Scenario,Mathematical13 - Square root,expressions/mathematical/Mathematical13.feature,expressions.mathematical,True
expressions-mathematical-Mathematical2-01,[1] Allow addition,Scenario,Mathematical2 - Addition,expressions/mathematical/Mathematical2.feature,expressions.mathematical,True
expressions-mathematical-Mathematical3-01,[1] Fail for invalid Unicode hyphen in subtraction,Scenario,Mathematical3 - Subtraction,expressions/mathematical/Mathematical3.feature,expressions.mathematical,False
expressions-mathematical-Mathematical8-01,[1] Arithmetic precedence test,Scenario,Mathematical8 - Arithmetic precedence,expressions/mathematical/Mathematical8.feature,expressions.mathematical,True
expressions-mathematical-Mathematical8-02,[2] Arithmetic precedence with parenthesis test,Scenario,Mathematical8 - Arithmetic precedence,expressions/mathematical/Mathematical8.feature,expressions.mathematical,True
expressions-null-Null1-01,[1] Property null check on non-null node,Scenario,Null1 - IS NULL validation,expressions/null/Null1.feature,expressions.null,True
expressions-null-Null1-02,[2] Property null check on optional non-null node,Scenario,Null1 - IS NULL validation,expressions/null/Null1.feature,expressions.null,True
expressions-null-Null1-03,[3] Property null check on null node,Scenario,Null1 - IS NULL validation,expressions/null/Null1.feature,expressions.null,True
expressions-null-Null1-04,[4] A literal null IS null,Scenario,Null1 - IS NULL validation,expressions/null/Null1.feature,expressions.null,True
expressions-null-Null1-05,[5] IS NULL on a map,Scenario Outline,Null1 - IS NULL validation,expressions/null/Null1.feature,expressions.null,True
expressions-null-Null1-06,[6] IS NULL is case insensitive,Scenario,Null1 - IS NULL validation,expressions/null/Null1.feature,expressions.null,True
expressions-null-Null2-01,[1] Property not null check on non-null node,Scenario,Null2 - IS NOT NULL validation,expressions/null/Null2.feature,expressions.null,True
expressions-null-Null2-02,[2] Property not null check on optional non-null node,Scenario,Null2 - IS NOT NULL validation,expressions/null/Null2.feature,expressions.null,True
expressions-null-Null2-03,[3] Property not null check on null node,Scenario,Null2 - IS NOT NULL validation,expressions/null/Null2.feature,expressions.null,True
expressions-null-Null2-04,[4] A literal null is not IS NOT null,Scenario,Null2 - IS NOT NULL validation,expressions/null/Null2.feature,expressions.null,True
expressions-null-Null2-05,[5] IS NOT NULL on a map,Scenario Outline,Null2 - IS NOT NULL validation,expressions/null/Null2.feature,expressions.null,True
expressions-null-Null2-06,[6] IS NOT NULL is case insensitive,Scenario,Null2 - IS NOT NULL validation,expressions/null/Null2.feature,expressions.null,True
expressions-null-Null3-01,[1] The inverse of a null is a null,Scenario,Null3 - Null evaluation,expressions/null/Null3.feature,expressions.null,True
expressions-null-Null3-02,[2] It is unknown - i.e. null - if a null is equal to a null,Scenario,Null3 - Null evaluation,expressions/null/Null3.feature,expressions.null,True
expressions-null-Null3-03,[3] It is unknown - i.e. null - if a null is not equal to a null,Scenario,Null3 - Null evaluation,expressions/null/Null3.feature,expressions.null,True
expressions-null-Null3-04,[4] Using null in IN,Scenario Outline,Null3 - Null evaluation,expressions/null/Null3.feature,expressions.null,True
expressions-path-Path1-01,[1] `nodes()` on null path,Scenario,Path1 - Nodes of a path,expressions/path/Path1.feature,expressions.path,True
expressions-path-Path2-01,[1] Return relationships by fetching them from the path,Scenario,Path2 - Relationships of a path,expressions/path/Path2.feature,expressions.path,True
expressions-path-Path2-02,[2] Return relationships by fetching them from the path - starting from the end,Scenario,Path2 - Relationships of a path,expressions/path/Path2.feature,expressions.path,True
expressions-path-Path2-03,[3] `relationships()` on null path,Scenario,Path2 - Relationships of a path,expressions/path/Path2.feature,expressions.path,True
expressions-path-Path3-01,[1] Return a var length path of length zero,Scenario,Path3 - Length of a path,expressions/path/Path3.feature,expressions.path,False
expressions-path-Path3-02,[2] Failing when using `length()` on a node,Scenario,Path3 - Length of a path,expressions/path/Path3.feature,expressions.path,False
expressions-path-Path3-03,[3] Failing when using `length()` on a relationship,Scenario,Path3 - Length of a path,expressions/path/Path3.feature,expressions.path,False
expressions-pattern-Pattern1-01,[1] Matching on any single outgoing directed connection,Scenario,Pattern1 - Pattern predicate,expressions/pattern/Pattern1.feature,expressions.pattern,False
expressions-pattern-Pattern1-02,[2] Matching on a single undirected connection,Scenario,Pattern1 - Pattern predicate,expressions/pattern/Pattern1.feature,expressions.pattern,False
expressions-pattern-Pattern1-03,[3] Matching on any single incoming directed connection,Scenario,Pattern1 - Pattern predicate,expressions/pattern/Pattern1.feature,expressions.pattern,False
expressions-pattern-Pattern1-04,[4] Matching on a specific type of single outgoing directed connection,Scenario,Pattern1 - Pattern predicate,expressions/pattern/Pattern1.feature,expressions.pattern,False
expressions-pattern-Pattern1-05,[5] Matching on a specific type of single undirected connection,Scenario,Pattern1 - Pattern predicate,expressions/pattern/Pattern1.feature,expressions.pattern,False
expressions-pattern-Pattern1-06,[6] Matching on a specific type of single incoming directed connection,Scenario,Pattern1 - Pattern predicate,expressions/pattern/Pattern1.feature,expressions.pattern,False
expressions-pattern-Pattern1-07,[7] Matching on a specific type of a variable length outgoing directed connection,Scenario,Pattern1 - Pattern predicate,expressions/pattern/Pattern1.feature,expressions.pattern,False
expressions-pattern-Pattern1-08,[8] Matching on a specific type of variable length undirected connection,Scenario,Pattern1 - Pattern predicate,expressions/pattern/Pattern1.feature,expressions.pattern,False
expressions-pattern-Pattern1-09,[9] Matching on a specific type of variable length incoming directed connection,Scenario,Pattern1 - Pattern predicate,expressions/pattern/Pattern1.feature,expressions.pattern,False
expressions-pattern-Pattern1-10,[10] Matching on a specific type of undirected connection with length 2,Scenario,Pattern1 - Pattern predicate,expressions/pattern/Pattern1.feature,expressions.pattern,False
expressions-pattern-Pattern1-11,[10] Fail on introducing unbounded variables in pattern,Scenario Outline,Pattern1 - Pattern predicate,expressions/pattern/Pattern1.feature,expressions.pattern,False
expressions-pattern-Pattern1-12,[11] Fail on checking self pattern,Scenario,Pattern1 - Pattern predicate,expressions/pattern/Pattern1.feature,expressions.pattern,False
expressions-pattern-Pattern1-13,[12] Matching two nodes on a single directed connection between them,Scenario,Pattern1 - Pattern predicate,expressions/pattern/Pattern1.feature,expressions.pattern,False
expressions-pattern-Pattern1-14,[13] Fail on matching two nodes on a single undirected connection between them,Scenario,Pattern1 - Pattern predicate,expressions/pattern/Pattern1.feature,expressions.pattern,False
expressions-pattern-Pattern1-15,[14] Matching two nodes on a specific type of single outgoing directed connection,Scenario,Pattern1 - Pattern predicate,expressions/pattern/Pattern1.feature,expressions.pattern,False
expressions-pattern-Pattern1-16,[15] Matching two nodes on a specific type of single undirected connection,Scenario,Pattern1 - Pattern predicate,expressions/pattern/Pattern1.feature,expressions.pattern,False
expressions-pattern-Pattern1-17,[16] Matching two nodes on a specific type of a variable length outgoing directed connection,Scenario,Pattern1 - Pattern predicate,expressions/pattern/Pattern1.feature,expressions.pattern,False
expressions-pattern-Pattern1-18,[17] Matching two nodes on a specific type of variable length undirected connection,Scenario,Pattern1 - Pattern predicate,expressions/pattern/Pattern1.feature,expressions.pattern,False
expressions-pattern-Pattern1-19,[18] Matching two nodes on a specific type of undirected connection with length 2,Scenario,Pattern1 - Pattern predicate,expressions/pattern/Pattern1.feature,expressions.pattern,False
expressions-pattern-Pattern1-20,[19] Using a negated existential pattern predicate,Scenario,Pattern1 - Pattern predicate,expressions/pattern/Pattern1.feature,expressions.pattern,False
expressions-pattern-Pattern1-21,[20] Using two existential pattern predicates in a conjunction,Scenario,Pattern1 - Pattern predicate,expressions/pattern/Pattern1.feature,expressions.pattern,False
expressions-pattern-Pattern1-22,[21] Using two existential pattern predicates in a disjunction,Scenario,Pattern1 - Pattern predicate,expressions/pattern/Pattern1.feature,expressions.pattern,False
expressions-pattern-Pattern1-23,[22] Fail on using pattern in RETURN projection,Scenario,Pattern1 - Pattern predicate,expressions/pattern/Pattern1.feature,expressions.pattern,False
expressions-pattern-Pattern1-24,[23] Fail on using pattern in WITH projection,Scenario,Pattern1 - Pattern predicate,expressions/pattern/Pattern1.feature,expressions.pattern,False
expressions-pattern-Pattern1-25,[24] Fail on using pattern in right-hand side of SET,Scenario,Pattern1 - Pattern predicate,expressions/pattern/Pattern1.feature,expressions.pattern,False
expressions-pattern-Pattern2-01,[1] Return a pattern comprehension,Scenario,Pattern2 - Pattern Comprehension,expressions/pattern/Pattern2.feature,expressions.pattern,True
expressions-pattern-Pattern2-02,[2] Return a pattern comprehension with label predicate,Scenario,Pattern2 - Pattern Comprehension,expressions/pattern/Pattern2.feature,expressions.pattern,True
expressions-pattern-Pattern2-03,[3] Return a pattern comprehension with bound nodes,Scenario,Pattern2 - Pattern Comprehension,expressions/pattern/Pattern2.feature,expressions.pattern,True
expressions-pattern-Pattern2-04,[4] Introduce a new node variable in pattern comprehension,Scenario,Pattern2 - Pattern Comprehension,expressions/pattern/Pattern2.feature,expressions.pattern,True
expressions-pattern-Pattern2-05,[5] Introduce a new relationship variable in pattern comprehension,Scenario,Pattern2 - Pattern Comprehension,expressions/pattern/Pattern2.feature,expressions.pattern,True
expressions-pattern-Pattern2-06,[6] Aggregate on a pattern comprehension,Scenario,Pattern2 - Pattern Comprehension,expressions/pattern/Pattern2.feature,expressions.pattern,True
expressions-pattern-Pattern2-07,[7] Use a pattern comprehension inside a list comprehension,Scenario,Pattern2 - Pattern Comprehension,expressions/pattern/Pattern2.feature,expressions.pattern,True
expressions-pattern-Pattern2-08,[8] Use a pattern comprehension in WITH,Scenario,Pattern2 - Pattern Comprehension,expressions/pattern/Pattern2.feature,expressions.pattern,True
expressions-pattern-Pattern2-09,[9] Use a variable-length pattern comprehension in WITH,Scenario,Pattern2 - Pattern Comprehension,expressions/pattern/Pattern2.feature,expressions.pattern,True
expressions-pattern-Pattern2-10,[10] Use a pattern comprehension in RETURN,Scenario,Pattern2 - Pattern Comprehension,expressions/pattern/Pattern2.feature,expressions.pattern,True
expressions-pattern-Pattern2-11,[11] Use a pattern comprehension and ORDER BY,Scenario,Pattern2 - Pattern Comprehension,expressions/pattern/Pattern2.feature,expressions.pattern,True
expressions-precedence-Precedence1-01,[1] Exclusive disjunction takes precedence over inclusive disjunction,Scenario,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-02,[2] Conjunction disjunction takes precedence over exclusive disjunction,Scenario,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-03,[3] Conjunction disjunction takes precedence over inclusive disjunction,Scenario,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-04,[4] Negation takes precedence over conjunction,Scenario,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-05,[5] Negation takes precedence over inclusive disjunction,Scenario,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-06,[6] Comparison operator takes precedence over boolean negation,Scenario,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-07,[7] Comparison operator takes precedence over binary boolean operator,Scenario,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-08,[8] Null predicate takes precedence over comparison operator,Scenario,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-09,[9] Null predicate takes precedence over negation,Scenario,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-10,[10] Null predicate takes precedence over boolean operator,Scenario,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-11,[11] List predicate takes precedence over comparison operator,Scenario,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-12,[12] List predicate takes precedence over negation,Scenario,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-13,[13] List predicate takes precedence over boolean operator,Scenario,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-14,[14] Exclusive disjunction takes precedence over inclusive disjunction in every combination of truth values,Scenario,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-15,[15] Conjunction takes precedence over exclusive disjunction in every combination of truth values,Scenario,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-16,[16] Conjunction takes precedence over inclusive disjunction in every combination of truth values,Scenario,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-17,[17] Negation takes precedence over conjunction in every combination of truth values,Scenario,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-18,[18] Negation takes precedence over inclusive disjunction in every combination of truth values,Scenario,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-19,[19] Comparison operators takes precedence over boolean negation in every combination of truth values,Scenario Outline,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-20,[20] Pairs of comparison operators and boolean negation that are associative in every combination of truth values,Scenario Outline,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-21,[21] Comparison operators take precedence over binary boolean operators in every combination of truth values,Scenario Outline,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-22,[22] Pairs of comparison operators and binary boolean operators that are associative in every combination of truth values,Scenario Outline,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-23,[23] Null predicates take precedence over comparison operators in every combination of truth values,Scenario Outline,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-24,[24] Null predicates take precedence over boolean negation on every truth values,Scenario Outline,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-25,[25] Null predicates take precedence over binary boolean operators in every combination of truth values,Scenario Outline,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-26,[26] List predicate takes precedence over comparison operators in every combination of truth values,Scenario Outline,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-27,[27] List predicate takes precedence over negation in every combination of truth values,Scenario,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence1-28,[28] List predicate takes precedence over binary boolean operators in every combination of truth values,Scenario Outline,Precedence1 - On boolean values,expressions/precedence/Precedence1.feature,expressions.precedence,True
expressions-precedence-Precedence2-01,[1] Numeric multiplicative operations takes precedence over numeric additive operations,Scenario Outline,Precedence2 - On numeric values,expressions/precedence/Precedence2.feature,expressions.precedence,True
expressions-precedence-Precedence2-02,[2] Exponentiation takes precedence over numeric multiplicative operations,Scenario Outline,Precedence2 - On numeric values,expressions/precedence/Precedence2.feature,expressions.precedence,True
expressions-precedence-Precedence2-03,[3] Exponentiation takes precedence over numeric additive operations,Scenario Outline,Precedence2 - On numeric values,expressions/precedence/Precedence2.feature,expressions.precedence,True
expressions-precedence-Precedence2-04,[4] Numeric unary negative takes precedence over exponentiation,Scenario,Precedence2 - On numeric values,expressions/precedence/Precedence2.feature,expressions.precedence,True
expressions-precedence-Precedence2-05,[5] Numeric unary negative takes precedence over numeric additive operations,Scenario Outline,Precedence2 - On numeric values,expressions/precedence/Precedence2.feature,expressions.precedence,True
expressions-precedence-Precedence3-01,[1] List element access takes precedence over list appending,Scenario,Precedence3 - On list values,expressions/precedence/Precedence3.feature,expressions.precedence,True
expressions-precedence-Precedence3-02,[2] List element access takes precedence over list concatenation,Scenario,Precedence3 - On list values,expressions/precedence/Precedence3.feature,expressions.precedence,True
expressions-precedence-Precedence3-03,[3] List slicing takes precedence over list concatenation,Scenario,Precedence3 - On list values,expressions/precedence/Precedence3.feature,expressions.precedence,True
expressions-precedence-Precedence3-04,[4] List appending takes precedence over list element containment,Scenario,Precedence3 - On list values,expressions/precedence/Precedence3.feature,expressions.precedence,True
expressions-precedence-Precedence3-05,[5] List concatenation takes precedence over list element containment,Scenario,Precedence3 - On list values,expressions/precedence/Precedence3.feature,expressions.precedence,True
expressions-precedence-Precedence3-06,[6] List element containment takes precedence over comparison operator,Scenario Outline,Precedence3 - On list values,expressions/precedence/Precedence3.feature,expressions.precedence,True
expressions-precedence-Precedence4-01,[1] Null predicate takes precedence over comparison operator,Scenario Outline,Precedence4 - On null value,expressions/precedence/Precedence4.feature,expressions.precedence,True
expressions-precedence-Precedence4-02,[2] Null predicate takes precedence over boolean negation,Scenario,Precedence4 - On null value,expressions/precedence/Precedence4.feature,expressions.precedence,True
expressions-precedence-Precedence4-03,[3] Null predicate takes precedence over binary boolean operator,Scenario Outline,Precedence4 - On null value,expressions/precedence/Precedence4.feature,expressions.precedence,True
expressions-precedence-Precedence4-04,[4] String predicate takes precedence over binary boolean operator,Scenario,Precedence4 - On null value,expressions/precedence/Precedence4.feature,expressions.precedence,True
expressions-quantifier-Quantifier1-01,[1] None quantifier is always true on empty list,Scenario,Quantifier1 - None quantifier,expressions/quantifier/Quantifier1.feature,expressions.quantifier,False
expressions-quantifier-Quantifier1-02,[2] None quantifier on list literal containing booleans,Scenario Outline,Quantifier1 - None quantifier,expressions/quantifier/Quantifier1.feature,expressions.quantifier,False
expressions-quantifier-Quantifier1-03,[3] None quantifier on list literal containing integers,Scenario Outline,Quantifier1 - None quantifier,expressions/quantifier/Quantifier1.feature,expressions.quantifier,False
expressions-quantifier-Quantifier1-04,[4] None quantifier on list literal containing floats,Scenario Outline,Quantifier1 - None quantifier,expressions/quantifier/Quantifier1.feature,expressions.quantifier,False
expressions-quantifier-Quantifier1-05,[5] None quantifier on list literal containing strings,Scenario Outline,Quantifier1 - None quantifier,expressions/quantifier/Quantifier1.feature,expressions.quantifier,False
expressions-quantifier-Quantifier1-06,[6] None quantifier on list literal containing lists,Scenario Outline,Quantifier1 - None quantifier,expressions/quantifier/Quantifier1.feature,expressions.quantifier,False
expressions-quantifier-Quantifier1-07,[7] None quantifier on list literal containing maps,Scenario Outline,Quantifier1 - None quantifier,expressions/quantifier/Quantifier1.feature,expressions.quantifier,False
expressions-quantifier-Quantifier1-08,[8] None quantifier on list containing nodes,Scenario,Quantifier1 - None quantifier,expressions/quantifier/Quantifier1.feature,expressions.quantifier,False
expressions-quantifier-Quantifier1-09,[9] None quantifier on list containing relationships,Scenario,Quantifier1 - None quantifier,expressions/quantifier/Quantifier1.feature,expressions.quantifier,False
expressions-quantifier-Quantifier1-10,[10] None quantifier on lists containing nulls,Scenario Outline,Quantifier1 - None quantifier,expressions/quantifier/Quantifier1.feature,expressions.quantifier,False
expressions-quantifier-Quantifier1-11,[11] None quantifier with IS NULL predicate,Scenario Outline,Quantifier1 - None quantifier,expressions/quantifier/Quantifier1.feature,expressions.quantifier,False
expressions-quantifier-Quantifier1-12,[12] None quantifier with IS NOT NULL predicate,Scenario Outline,Quantifier1 - None quantifier,expressions/quantifier/Quantifier1.feature,expressions.quantifier,False
expressions-quantifier-Quantifier1-13,[13] None quantifier is true if the predicate is statically false and the list is not empty,Scenario,Quantifier1 - None quantifier,expressions/quantifier/Quantifier1.feature,expressions.quantifier,False
expressions-quantifier-Quantifier1-14,[14] None quantifier is false if the predicate is statically true and the list is not empty,Scenario,Quantifier1 - None quantifier,expressions/quantifier/Quantifier1.feature,expressions.quantifier,False
expressions-quantifier-Quantifier1-15,[15] Fail none quantifier on type mismatch between list elements and predicate,Scenario Outline,Quantifier1 - None quantifier,expressions/quantifier/Quantifier1.feature,expressions.quantifier,False
expressions-quantifier-Quantifier10-01,[1] Single quantifier is always false if the predicate is statically false and the list is not empty,Scenario,Quantifier10 - Single quantifier invariants,expressions/quantifier/Quantifier10.feature,expressions.quantifier,True
expressions-quantifier-Quantifier10-02,[2] Single quantifier is always false if the predicate is statically true and the list has more than one element,Scenario,Quantifier10 - Single quantifier invariants,expressions/quantifier/Quantifier10.feature,expressions.quantifier,True
expressions-quantifier-Quantifier10-03,[3] Single quantifier is always true if the predicate is statically true and the list has exactly one non-null element,Scenario,Quantifier10 - Single quantifier invariants,expressions/quantifier/Quantifier10.feature,expressions.quantifier,True
expressions-quantifier-Quantifier10-04,[4] Single quantifier is always equal whether the size of the list filtered with same the predicate is one,Scenario Outline,Quantifier10 - Single quantifier invariants,expressions/quantifier/Quantifier10.feature,expressions.quantifier,True
expressions-quantifier-Quantifier11-01,[1] Any quantifier is always false if the predicate is statically false and the list is not empty,Scenario,Quantifier11 - Any quantifier invariants,expressions/quantifier/Quantifier11.feature,expressions.quantifier,True
expressions-quantifier-Quantifier11-02,[2] Any quantifier is always true if the predicate is statically true and the list is not empty,Scenario,Quantifier11 - Any quantifier invariants,expressions/quantifier/Quantifier11.feature,expressions.quantifier,True
expressions-quantifier-Quantifier11-03,[3] Any quantifier is always true if the single or the all quantifier is true,Scenario Outline,Quantifier11 - Any quantifier invariants,expressions/quantifier/Quantifier11.feature,expressions.quantifier,True
expressions-quantifier-Quantifier11-04,[4] Any quantifier is always equal the boolean negative of the none quantifier,Scenario Outline,Quantifier11 - Any quantifier invariants,expressions/quantifier/Quantifier11.feature,expressions.quantifier,True
expressions-quantifier-Quantifier11-05,[5] Any quantifier is always equal the boolean negative of the all quantifier on the boolean negative of the predicate,Scenario Outline,Quantifier11 - Any quantifier invariants,expressions/quantifier/Quantifier11.feature,expressions.quantifier,True
expressions-quantifier-Quantifier11-06,[6] Any quantifier is always equal whether the size of the list filtered with same the predicate is grater zero,Scenario Outline,Quantifier11 - Any quantifier invariants,expressions/quantifier/Quantifier11.feature,expressions.quantifier,True
expressions-quantifier-Quantifier12-01,[1] All quantifier is always false if the predicate is statically false and the list is not empty,Scenario,Quantifier12 - All quantifier invariants,expressions/quantifier/Quantifier12.feature,expressions.quantifier,True
expressions-quantifier-Quantifier12-02,[2] All quantifier is always true if the predicate is statically true and the list is not empty,Scenario,Quantifier12 - All quantifier invariants,expressions/quantifier/Quantifier12.feature,expressions.quantifier,True
expressions-quantifier-Quantifier12-03,[3] All quantifier is always equal the none quantifier on the boolean negative of the predicate,Scenario Outline,Quantifier12 - All quantifier invariants,expressions/quantifier/Quantifier12.feature,expressions.quantifier,True
expressions-quantifier-Quantifier12-04,[4] All quantifier is always equal the boolean negative of the any quantifier on the boolean negative of the predicate,Scenario Outline,Quantifier12 - All quantifier invariants,expressions/quantifier/Quantifier12.feature,expressions.quantifier,True
expressions-quantifier-Quantifier12-05,[5] All quantifier is always equal whether the size of the list filtered with same the predicate is equal the size of the unfiltered list,Scenario Outline,Quantifier12 - All quantifier invariants,expressions/quantifier/Quantifier12.feature,expressions.quantifier,True
expressions-quantifier-Quantifier2-01,[1] Single quantifier is always false on empty list,Scenario,Quantifier2 - Single quantifier,expressions/quantifier/Quantifier2.feature,expressions.quantifier,False
expressions-quantifier-Quantifier2-02,[2] Single quantifier on list literal,Scenario Outline,Quantifier2 - Single quantifier,expressions/quantifier/Quantifier2.feature,expressions.quantifier,False
expressions-quantifier-Quantifier2-03,[3] Single quantifier on list literal containing integers,Scenario Outline,Quantifier2 - Single quantifier,expressions/quantifier/Quantifier2.feature,expressions.quantifier,False
expressions-quantifier-Quantifier2-04,[4] Single quantifier on list literal containing floats,Scenario Outline,Quantifier2 - Single quantifier,expressions/quantifier/Quantifier2.feature,expressions.quantifier,False
expressions-quantifier-Quantifier2-05,[5] Single quantifier on list literal containing strings,Scenario Outline,Quantifier2 - Single quantifier,expressions/quantifier/Quantifier2.feature,expressions.quantifier,False
expressions-quantifier-Quantifier2-06,[6] Single quantifier on list literal containing lists,Scenario Outline,Quantifier2 - Single quantifier,expressions/quantifier/Quantifier2.feature,expressions.quantifier,False
expressions-quantifier-Quantifier2-07,[7] Single quantifier on list literal containing maps,Scenario Outline,Quantifier2 - Single quantifier,expressions/quantifier/Quantifier2.feature,expressions.quantifier,False
expressions-quantifier-Quantifier2-08,[8] Single quantifier on list containing nodes,Scenario,Quantifier2 - Single quantifier,expressions/quantifier/Quantifier2.feature,expressions.quantifier,False
expressions-quantifier-Quantifier2-09,[9] Single quantifier on list containing relationships,Scenario,Quantifier2 - Single quantifier,expressions/quantifier/Quantifier2.feature,expressions.quantifier,False
expressions-quantifier-Quantifier2-10,[10] Single quantifier on lists containing nulls,Scenario Outline,Quantifier2 - Single quantifier,expressions/quantifier/Quantifier2.feature,expressions.quantifier,False
expressions-quantifier-Quantifier2-11,[11] Single quantifier with IS NULL predicate,Scenario Outline,Quantifier2 - Single quantifier,expressions/quantifier/Quantifier2.feature,expressions.quantifier,False
expressions-quantifier-Quantifier2-12,[12] Single quantifier with IS NOT NULL predicate,Scenario Outline,Quantifier2 - Single quantifier,expressions/quantifier/Quantifier2.feature,expressions.quantifier,False
expressions-quantifier-Quantifier2-13,[13] Single quantifier is false if the predicate is statically false and the list is not empty,Scenario,Quantifier2 - Single quantifier,expressions/quantifier/Quantifier2.feature,expressions.quantifier,False
expressions-quantifier-Quantifier2-14,[14] Single quantifier is false if the predicate is statically true and the list has more than one element,Scenario,Quantifier2 - Single quantifier,expressions/quantifier/Quantifier2.feature,expressions.quantifier,False
expressions-quantifier-Quantifier2-15,[15] Single quantifier is true if the predicate is statically true and the list has exactly one non-null element,Scenario,Quantifier2 - Single quantifier,expressions/quantifier/Quantifier2.feature,expressions.quantifier,False
expressions-quantifier-Quantifier2-16,[16] Fail single quantifier on type mismatch between list elements and predicate,Scenario Outline,Quantifier2 - Single quantifier,expressions/quantifier/Quantifier2.feature,expressions.quantifier,False
expressions-quantifier-Quantifier3-01,[1] Any quantifier is always false on empty list,Scenario,Quantifier3 - Any quantifier,expressions/quantifier/Quantifier3.feature,expressions.quantifier,False
expressions-quantifier-Quantifier3-02,[2] Any quantifier on list literal,Scenario Outline,Quantifier3 - Any quantifier,expressions/quantifier/Quantifier3.feature,expressions.quantifier,False
expressions-quantifier-Quantifier3-03,[3] Any quantifier on list literal containing integers,Scenario Outline,Quantifier3 - Any quantifier,expressions/quantifier/Quantifier3.feature,expressions.quantifier,False
expressions-quantifier-Quantifier3-04,[4] Any quantifier on list literal containing floats,Scenario Outline,Quantifier3 - Any quantifier,expressions/quantifier/Quantifier3.feature,expressions.quantifier,False
expressions-quantifier-Quantifier3-05,[5] Any quantifier on list literal containing strings,Scenario Outline,Quantifier3 - Any quantifier,expressions/quantifier/Quantifier3.feature,expressions.quantifier,False
expressions-quantifier-Quantifier3-06,[6] Any quantifier on list literal containing lists,Scenario Outline,Quantifier3 - Any quantifier,expressions/quantifier/Quantifier3.feature,expressions.quantifier,False
expressions-quantifier-Quantifier3-07,[7] Any quantifier on list literal containing maps,Scenario Outline,Quantifier3 - Any quantifier,expressions/quantifier/Quantifier3.feature,expressions.quantifier,False
expressions-quantifier-Quantifier3-08,[8] Any quantifier on list containing nodes,Scenario,Quantifier3 - Any quantifier,expressions/quantifier/Quantifier3.feature,expressions.quantifier,False
expressions-quantifier-Quantifier3-09,[9] Any quantifier on list containing relationships,Scenario,Quantifier3 - Any quantifier,expressions/quantifier/Quantifier3.feature,expressions.quantifier,False
expressions-quantifier-Quantifier3-10,[10] Any quantifier on lists containing nulls,Scenario Outline,Quantifier3 - Any quantifier,expressions/quantifier/Quantifier3.feature,expressions.quantifier,False
expressions-quantifier-Quantifier3-11,[11] Any quantifier with IS NULL predicate,Scenario Outline,Quantifier3 - Any quantifier,expressions/quantifier/Quantifier3.feature,expressions.quantifier,False
expressions-quantifier-Quantifier3-12,[12] Any quantifier with IS NOT NULL predicate,Scenario Outline,Quantifier3 - Any quantifier,expressions/quantifier/Quantifier3.feature,expressions.quantifier,False
expressions-quantifier-Quantifier3-13,[13] Any quantifier is false if the predicate is statically false and the list is not empty,Scenario,Quantifier3 - Any quantifier,expressions/quantifier/Quantifier3.feature,expressions.quantifier,False
expressions-quantifier-Quantifier3-14,[14] Any quantifier is true if the predicate is statically true and the list is not empty,Scenario,Quantifier3 - Any quantifier,expressions/quantifier/Quantifier3.feature,expressions.quantifier,False
expressions-quantifier-Quantifier3-15,[15] Fail any quantifier on type mismatch between list elements and predicate,Scenario Outline,Quantifier3 - Any quantifier,expressions/quantifier/Quantifier3.feature,expressions.quantifier,False
expressions-quantifier-Quantifier4-01,[1] All quantifier is always true on empty list,Scenario,Quantifier4 - All quantifier,expressions/quantifier/Quantifier4.feature,expressions.quantifier,False
expressions-quantifier-Quantifier4-02,[2] All quantifier on list literal,Scenario Outline,Quantifier4 - All quantifier,expressions/quantifier/Quantifier4.feature,expressions.quantifier,False
expressions-quantifier-Quantifier4-03,[3] All quantifier on list literal containing integers,Scenario Outline,Quantifier4 - All quantifier,expressions/quantifier/Quantifier4.feature,expressions.quantifier,False
expressions-quantifier-Quantifier4-04,[4] All quantifier on list literal containing floats,Scenario Outline,Quantifier4 - All quantifier,expressions/quantifier/Quantifier4.feature,expressions.quantifier,False
expressions-quantifier-Quantifier4-05,[5] All quantifier on list literal containing strings,Scenario Outline,Quantifier4 - All quantifier,expressions/quantifier/Quantifier4.feature,expressions.quantifier,False
expressions-quantifier-Quantifier4-06,[6] All quantifier on list literal containing lists,Scenario Outline,Quantifier4 - All quantifier,expressions/quantifier/Quantifier4.feature,expressions.quantifier,False
expressions-quantifier-Quantifier4-07,[7] All quantifier on list literal containing maps,Scenario Outline,Quantifier4 - All quantifier,expressions/quantifier/Quantifier4.feature,expressions.quantifier,False
expressions-quantifier-Quantifier4-08,[8] All quantifier on list containing nodes,Scenario,Quantifier4 - All quantifier,expressions/quantifier/Quantifier4.feature,expressions.quantifier,False
expressions-quantifier-Quantifier4-09,[9] All quantifier on list containing relationships,Scenario,Quantifier4 - All quantifier,expressions/quantifier/Quantifier4.feature,expressions.quantifier,False
expressions-quantifier-Quantifier4-10,[10] All quantifier on lists containing nulls,Scenario Outline,Quantifier4 - All quantifier,expressions/quantifier/Quantifier4.feature,expressions.quantifier,False
expressions-quantifier-Quantifier4-11,[11] All quantifier with IS NULL predicate,Scenario Outline,Quantifier4 - All quantifier,expressions/quantifier/Quantifier4.feature,expressions.quantifier,False
expressions-quantifier-Quantifier4-12,[12] All quantifier with IS NOT NULL predicate,Scenario Outline,Quantifier4 - All quantifier,expressions/quantifier/Quantifier4.feature,expressions.quantifier,False
expressions-quantifier-Quantifier4-13,[13] All quantifier is false if the predicate is statically false and the list is not empty,Scenario,Quantifier4 - All quantifier,expressions/quantifier/Quantifier4.feature,expressions.quantifier,False
expressions-quantifier-Quantifier4-14,[14] All quantifier is true if the predicate is statically true and the list is not empty,Scenario,Quantifier4 - All quantifier,expressions/quantifier/Quantifier4.feature,expressions.quantifier,False
expressions-quantifier-Quantifier4-15,[15] Fail all quantifier on type mismatch between list elements and predicate,Scenario Outline,Quantifier4 - All quantifier,expressions/quantifier/Quantifier4.feature,expressions.quantifier,False
expressions-quantifier-Quantifier5-01,[1] None quantifier can nest itself and other quantifiers on nested lists,Scenario Outline,Quantifier5 - None quantifier interop,expressions/quantifier/Quantifier5.feature,expressions.quantifier,True
expressions-quantifier-Quantifier5-02,[2] None quantifier can nest itself and other quantifiers on the same list,Scenario Outline,Quantifier5 - None quantifier interop,expressions/quantifier/Quantifier5.feature,expressions.quantifier,True
expressions-quantifier-Quantifier5-03,[3] None quantifier is equal the boolean negative of the any quantifier,Scenario Outline,Quantifier5 - None quantifier interop,expressions/quantifier/Quantifier5.feature,expressions.quantifier,True
expressions-quantifier-Quantifier5-04,[4] None quantifier is equal the all quantifier on the boolean negative of the predicate,Scenario Outline,Quantifier5 - None quantifier interop,expressions/quantifier/Quantifier5.feature,expressions.quantifier,True
expressions-quantifier-Quantifier5-05,[5] None quantifier is equal whether the size of the list filtered with same the predicate is zero,Scenario Outline,Quantifier5 - None quantifier interop,expressions/quantifier/Quantifier5.feature,expressions.quantifier,True
expressions-quantifier-Quantifier6-01,[1] Single quantifier can nest itself and other quantifiers on nested lists,Scenario Outline,Quantifier6 - Single quantifier interop,expressions/quantifier/Quantifier6.feature,expressions.quantifier,True
expressions-quantifier-Quantifier6-02,[2] Single quantifier can nest itself and other quantifiers on the same list,Scenario Outline,Quantifier6 - Single quantifier interop,expressions/quantifier/Quantifier6.feature,expressions.quantifier,True
expressions-quantifier-Quantifier6-03,[3] Single quantifier is equal whether the size of the list filtered with same the predicate is one,Scenario Outline,Quantifier6 - Single quantifier interop,expressions/quantifier/Quantifier6.feature,expressions.quantifier,True
expressions-quantifier-Quantifier7-01,[1] Any quantifier can nest itself and other quantifiers on nested lists,Scenario Outline,Quantifier7 - Any quantifier interop,expressions/quantifier/Quantifier7.feature,expressions.quantifier,True
expressions-quantifier-Quantifier7-02,[2] Any quantifier can nest itself and other quantifiers on the same list,Scenario Outline,Quantifier7 - Any quantifier interop,expressions/quantifier/Quantifier7.feature,expressions.quantifier,True
expressions-quantifier-Quantifier7-03,[3] Any quantifier is true if the single or the all quantifier is true,Scenario Outline,Quantifier7 - Any quantifier interop,expressions/quantifier/Quantifier7.feature,expressions.quantifier,True
expressions-quantifier-Quantifier7-04,[4] Any quantifier is equal the boolean negative of the none quantifier,Scenario Outline,Quantifier7 - Any quantifier interop,expressions/quantifier/Quantifier7.feature,expressions.quantifier,True
expressions-quantifier-Quantifier7-05,[5] Any quantifier is equal the boolean negative of the all quantifier on the boolean negative of the predicate,Scenario Outline,Quantifier7 - Any quantifier interop,expressions/quantifier/Quantifier7.feature,expressions.quantifier,True
expressions-quantifier-Quantifier7-06,[6] Any quantifier is equal whether the size of the list filtered with same the predicate is grater zero,Scenario Outline,Quantifier7 - Any quantifier interop,expressions/quantifier/Quantifier7.feature,expressions.quantifier,True
expressions-quantifier-Quantifier8-01,[1] All quantifier can nest itself and other quantifiers on nested lists,Scenario Outline,Quantifier8 - All quantifier interop,expressions/quantifier/Quantifier8.feature,expressions.quantifier,True
expressions-quantifier-Quantifier8-02,[2] All quantifier can nest itself and other quantifiers on the same list,Scenario Outline,Quantifier8 - All quantifier interop,expressions/quantifier/Quantifier8.feature,expressions.quantifier,True
expressions-quantifier-Quantifier8-03,[3] All quantifier is equal the none quantifier on the boolean negative of the predicate,Scenario Outline,Quantifier8 - All quantifier interop,expressions/quantifier/Quantifier8.feature,expressions.quantifier,True
expressions-quantifier-Quantifier8-04,[4] All quantifier is equal the boolean negative of the any quantifier on the boolean negative of the predicate,Scenario Outline,Quantifier8 - All quantifier interop,expressions/quantifier/Quantifier8.feature,expressions.quantifier,True
expressions-quantifier-Quantifier8-05,[5] All quantifier is equal whether the size of the list filtered with same the predicate is equal the size of the unfiltered list,Scenario Outline,Quantifier8 - All quantifier interop,expressions/quantifier/Quantifier8.feature,expressions.quantifier,True
expressions-quantifier-Quantifier9-01,[1] None quantifier is always true if the predicate is statically false and the list is not empty,Scenario,Quantifier9 - None quantifier invariants,expressions/quantifier/Quantifier9.feature,expressions.quantifier,True
expressions-quantifier-Quantifier9-02,[2] None quantifier is always false if the predicate is statically true and the list is not empty,Scenario,Quantifier9 - None quantifier invariants,expressions/quantifier/Quantifier9.feature,expressions.quantifier,True
expressions-quantifier-Quantifier9-03,[3] None quantifier is always equal the boolean negative of the any quantifier,Scenario Outline,Quantifier9 - None quantifier invariants,expressions/quantifier/Quantifier9.feature,expressions.quantifier,True
expressions-quantifier-Quantifier9-04,[4] None quantifier is always equal the all quantifier on the boolean negative of the predicate,Scenario Outline,Quantifier9 - None quantifier invariants,expressions/quantifier/Quantifier9.feature,expressions.quantifier,True
expressions-quantifier-Quantifier9-05,[5] None quantifier is always equal whether the size of the list filtered with same the predicate is zero,Scenario Outline,Quantifier9 - None quantifier invariants,expressions/quantifier/Quantifier9.feature,expressions.quantifier,True
expressions-string-String1-01,[1] `substring()` with default second argument,Scenario,String1 - Substring extraction,expressions/string/String1.feature,expressions.string,True
expressions-string-String10-01,[1] Finding exact matches with non-proper substring,Scenario,String10 - Exact Substring Search,expressions/string/String10.feature,expressions.string,True
expressions-string-String10-02,[2] Finding substring of string,Scenario,String10 - Exact Substring Search,expressions/string/String10.feature,expressions.string,True
expressions-string-String10-03,[3] Finding the empty substring,Scenario,String10 - Exact Substring Search,expressions/string/String10.feature,expressions.string,True
expressions-string-String10-04,[4] Finding strings containing whitespace,Scenario,String10 - Exact Substring Search,expressions/string/String10.feature,expressions.string,True
expressions-string-String10-05,[5] Finding strings containing newline,Scenario,String10 - Exact Substring Search,expressions/string/String10.feature,expressions.string,True
expressions-string-String10-06,[6] No string contains null,Scenario,String10 - Exact Substring Search,expressions/string/String10.feature,expressions.string,True
expressions-string-String10-07,[7] No string does not contain null,Scenario,String10 - Exact Substring Search,expressions/string/String10.feature,expressions.string,True
expressions-string-String10-08,[8] Handling non-string operands for CONTAINS,Scenario,String10 - Exact Substring Search,expressions/string/String10.feature,expressions.string,True
expressions-string-String10-09,[9] NOT with CONTAINS,Scenario,String10 - Exact Substring Search,expressions/string/String10.feature,expressions.string,True
expressions-string-String11-01,[1] Combining prefix and suffix search,Scenario,String11 - Combining Exact String Search,expressions/string/String11.feature,expressions.string,True
expressions-string-String11-02,"[2] Combining prefix, suffix, and substring search",Scenario,String11 - Combining Exact String Search,expressions/string/String11.feature,expressions.string,True
expressions-string-String3-01,[1] `reverse()`,Scenario,String3 - String Reversal,expressions/string/String3.feature,expressions.string,True
expressions-string-String4-01,[1] `split()`,Scenario,String4 - String Splitting,expressions/string/String4.feature,expressions.string,True
expressions-string-String8-01,[1] Finding exact matches with non-proper prefix,Scenario,String8 - Exact String Prefix Search,expressions/string/String8.feature,expressions.string,True
expressions-string-String8-02,[2] Finding beginning of string,Scenario,String8 - Exact String Prefix Search,expressions/string/String8.feature,expressions.string,True
expressions-string-String8-03,[3] Finding the empty prefix,Scenario,String8 - Exact String Prefix Search,expressions/string/String8.feature,expressions.string,True
expressions-string-String8-04,[4] Finding strings starting with whitespace,Scenario,String8 - Exact String Prefix Search,expressions/string/String8.feature,expressions.string,True
expressions-string-String8-05,[5] Finding strings starting with newline,Scenario,String8 - Exact String Prefix Search,expressions/string/String8.feature,expressions.string,True
expressions-string-String8-06,[6] No string starts with null,Scenario,String8 - Exact String Prefix Search,expressions/string/String8.feature,expressions.string,True
expressions-string-String8-07,[7] No string does not start with null,Scenario,String8 - Exact String Prefix Search,expressions/string/String8.feature,expressions.string,True
expressions-string-String8-08,[8] Handling non-string operands for STARTS WITH,Scenario,String8 - Exact String Prefix Search,expressions/string/String8.feature,expressions.string,True
expressions-string-String8-09,[9] NOT with STARTS WITH,Scenario,String8 - Exact String Prefix Search,expressions/string/String8.feature,expressions.string,True
expressions-string-String9-01,[1] Finding exact matches with non-proper suffix,Scenario,String9 - Exact String Suffix Search,expressions/string/String9.feature,expressions.string,True
expressions-string-String9-02,[2] Finding end of string,Scenario,String9 - Exact String Suffix Search,expressions/string/String9.feature,expressions.string,True
expressions-string-String9-03,[3] Finding the empty suffix,Scenario,String9 - Exact String Suffix Search,expressions/string/String9.feature,expressions.string,True
expressions-string-String9-04,[4] Finding strings ending with whitespace,Scenario,String9 - Exact String Suffix Search,expressions/string/String9.feature,expressions.string,True
expressions-string-String9-05,[5] Finding strings ending with newline,Scenario,String9 - Exact String Suffix Search,expressions/string/String9.feature,expressions.string,True
expressions-string-String9-06,[6] No string ends with null,Scenario,String9 - Exact String Suffix Search,expressions/string/String9.feature,expressions.string,True
expressions-string-String9-07,[7] No string does not end with null,Scenario,String9 - Exact String Suffix Search,expressions/string/String9.feature,expressions.string,True
expressions-string-String9-08,[8] Handling non-string operands for ENDS WITH,Scenario,String9 - Exact String Suffix Search,expressions/string/String9.feature,expressions.string,True
expressions-string-String9-09,[9] NOT with ENDS WITH,Scenario,String9 - Exact String Suffix Search,expressions/string/String9.feature,expressions.string,True
expressions-temporal-Temporal1-01,[1] Should construct week date,Scenario Outline,Temporal1 - Create Temporal Values from a Map,expressions/temporal/Temporal1.feature,expressions.temporal,True
expressions-temporal-Temporal1-02,[2] Should construct week localdatetime,Scenario Outline,Temporal1 - Create Temporal Values from a Map,expressions/temporal/Temporal1.feature,expressions.temporal,True
expressions-temporal-Temporal1-03,[3] Should construct week datetime,Scenario Outline,Temporal1 - Create Temporal Values from a Map,expressions/temporal/Temporal1.feature,expressions.temporal,True
expressions-temporal-Temporal1-04,[4] Should construct date,Scenario Outline,Temporal1 - Create Temporal Values from a Map,expressions/temporal/Temporal1.feature,expressions.temporal,True
expressions-temporal-Temporal1-05,[5] Should construct local time,Scenario Outline,Temporal1 - Create Temporal Values from a Map,expressions/temporal/Temporal1.feature,expressions.temporal,True
expressions-temporal-Temporal1-06,[6] Should construct time,Scenario Outline,Temporal1 - Create Temporal Values from a Map,expressions/temporal/Temporal1.feature,expressions.temporal,True
expressions-temporal-Temporal1-07,[7] Should construct local date time,Scenario Outline,Temporal1 - Create Temporal Values from a Map,expressions/temporal/Temporal1.feature,expressions.temporal,True
expressions-temporal-Temporal1-08,[8] Should construct date time with default time zone,Scenario Outline,Temporal1 - Create Temporal Values from a Map,expressions/temporal/Temporal1.feature,expressions.temporal,True
expressions-temporal-Temporal1-09,[9] Should construct date time with offset time zone,Scenario Outline,Temporal1 - Create Temporal Values from a Map,expressions/temporal/Temporal1.feature,expressions.temporal,True
expressions-temporal-Temporal1-10,[10] Should construct date time with named time zone,Scenario Outline,Temporal1 - Create Temporal Values from a Map,expressions/temporal/Temporal1.feature,expressions.temporal,True
expressions-temporal-Temporal1-11,[11] Should construct date time from epoch,Scenario,Temporal1 - Create Temporal Values from a Map,expressions/temporal/Temporal1.feature,expressions.temporal,True
expressions-temporal-Temporal1-12,[12] Should construct duration,Scenario Outline,Temporal1 - Create Temporal Values from a Map,expressions/temporal/Temporal1.feature,expressions.temporal,True
expressions-temporal-Temporal1-13,[13] Should construct temporal with time offset with second precision,Scenario Outline,Temporal1 - Create Temporal Values from a Map,expressions/temporal/Temporal1.feature,expressions.temporal,True
expressions-temporal-Temporal10-01,[1] Should split between boundaries correctly,Scenario Outline,Temporal10 - Compute Durations Between two Temporal Values,expressions/temporal/Temporal10.feature,expressions.temporal,True
expressions-temporal-Temporal10-02,[2] Should compute duration between two temporals,Scenario Outline,Temporal10 - Compute Durations Between two Temporal Values,expressions/temporal/Temporal10.feature,expressions.temporal,True
expressions-temporal-Temporal10-03,[3] Should compute duration between two temporals in months,Scenario Outline,Temporal10 - Compute Durations Between two Temporal Values,expressions/temporal/Temporal10.feature,expressions.temporal,True
expressions-temporal-Temporal10-04,[4] Should compute duration between two temporals in days,Scenario Outline,Temporal10 - Compute Durations Between two Temporal Values,expressions/temporal/Temporal10.feature,expressions.temporal,True
expressions-temporal-Temporal10-05,[5] Should compute duration between two temporals in seconds,Scenario Outline,Temporal10 - Compute Durations Between two Temporal Values,expressions/temporal/Temporal10.feature,expressions.temporal,True
expressions-temporal-Temporal10-06,[6] Should compute duration between if they differ only by a fraction of a second and the first comes after the second.,Scenario,Temporal10 - Compute Durations Between two Temporal Values,expressions/temporal/Temporal10.feature,expressions.temporal,True
expressions-temporal-Temporal10-07,[7] Should compute negative duration between in big units,Scenario Outline,Temporal10 - Compute Durations Between two Temporal Values,expressions/temporal/Temporal10.feature,expressions.temporal,True
expressions-temporal-Temporal10-08,[8] Should handle durations at daylight saving time day,Scenario Outline,Temporal10 - Compute Durations Between two Temporal Values,expressions/temporal/Temporal10.feature,expressions.temporal,True
expressions-temporal-Temporal10-09,[9] Should handle large durations,Scenario,Temporal10 - Compute Durations Between two Temporal Values,expressions/temporal/Temporal10.feature,expressions.temporal,True
expressions-temporal-Temporal10-10,[10] Should handle large durations in seconds,Scenario,Temporal10 - Compute Durations Between two Temporal Values,expressions/temporal/Temporal10.feature,expressions.temporal,True
expressions-temporal-Temporal10-11,[11] Should handle when seconds and subseconds have different signs,Scenario Outline,Temporal10 - Compute Durations Between two Temporal Values,expressions/temporal/Temporal10.feature,expressions.temporal,True
expressions-temporal-Temporal10-12,[12] Should compute durations with no difference,Scenario Outline,Temporal10 - Compute Durations Between two Temporal Values,expressions/temporal/Temporal10.feature,expressions.temporal,True
expressions-temporal-Temporal10-13,[13] Should propagate null,Scenario Outline,Temporal10 - Compute Durations Between two Temporal Values,expressions/temporal/Temporal10.feature,expressions.temporal,True
expressions-temporal-Temporal2-01,[1] Should parse date from string,Scenario Outline,Temporal2 - Create Temporal Values from a String,expressions/temporal/Temporal2.feature,expressions.temporal,True
expressions-temporal-Temporal2-02,[2] Should parse local time from string,Scenario Outline,Temporal2 - Create Temporal Values from a String,expressions/temporal/Temporal2.feature,expressions.temporal,True
expressions-temporal-Temporal2-03,[3] Should parse time from string,Scenario Outline,Temporal2 - Create Temporal Values from a String,expressions/temporal/Temporal2.feature,expressions.temporal,True
expressions-temporal-Temporal2-04,[4] Should parse local date time from string,Scenario Outline,Temporal2 - Create Temporal Values from a String,expressions/temporal/Temporal2.feature,expressions.temporal,True
expressions-temporal-Temporal2-05,[5] Should parse date time from string,Scenario Outline,Temporal2 - Create Temporal Values from a String,expressions/temporal/Temporal2.feature,expressions.temporal,True
expressions-temporal-Temporal2-06,[6] Should parse date time with named time zone from string,Scenario Outline,Temporal2 - Create Temporal Values from a String,expressions/temporal/Temporal2.feature,expressions.temporal,True
expressions-temporal-Temporal2-07,[7] Should parse duration from string,Scenario Outline,Temporal2 - Create Temporal Values from a String,expressions/temporal/Temporal2.feature,expressions.temporal,True
expressions-temporal-Temporal3-01,[1] Should select date,Scenario Outline,Temporal3 - Project Temporal Values from other Temporal Values,expressions/temporal/Temporal3.feature,expressions.temporal,True
expressions-temporal-Temporal3-02,[2] Should select local time,Scenario Outline,Temporal3 - Project Temporal Values from other Temporal Values,expressions/temporal/Temporal3.feature,expressions.temporal,True
expressions-temporal-Temporal3-03,[3] Should select time,Scenario Outline,Temporal3 - Project Temporal Values from other Temporal Values,expressions/temporal/Temporal3.feature,expressions.temporal,True
expressions-temporal-Temporal3-04,[4] Should select date into local date time,Scenario Outline,Temporal3 - Project Temporal Values from other Temporal Values,expressions/temporal/Temporal3.feature,expressions.temporal,True
expressions-temporal-Temporal3-05,[5] Should select time into local date time,Scenario Outline,Temporal3 - Project Temporal Values from other Temporal Values,expressions/temporal/Temporal3.feature,expressions.temporal,True
expressions-temporal-Temporal3-06,[6] Should select date and time into local date time,Scenario Outline,Temporal3 - Project Temporal Values from other Temporal Values,expressions/temporal/Temporal3.feature,expressions.temporal,True
expressions-temporal-Temporal3-07,[7] Should select datetime into local date time,Scenario Outline,Temporal3 - Project Temporal Values from other Temporal Values,expressions/temporal/Temporal3.feature,expressions.temporal,True
expressions-temporal-Temporal3-08,[8] Should select date into date time,Scenario Outline,Temporal3 - Project Temporal Values from other Temporal Values,expressions/temporal/Temporal3.feature,expressions.temporal,True
expressions-temporal-Temporal3-09,[9] Should select time into date time,Scenario Outline,Temporal3 - Project Temporal Values from other Temporal Values,expressions/temporal/Temporal3.feature,expressions.temporal,True
expressions-temporal-Temporal3-10,[10] Should select date and time into date time,Scenario Outline,Temporal3 - Project Temporal Values from other Temporal Values,expressions/temporal/Temporal3.feature,expressions.temporal,True
expressions-temporal-Temporal3-11,[11] Should datetime into date time,Scenario Outline,Temporal3 - Project Temporal Values from other Temporal Values,expressions/temporal/Temporal3.feature,expressions.temporal,True
expressions-temporal-Temporal4-01,[1] Should store date,Scenario Outline,Temporal4 - Store Temporal Values,expressions/temporal/Temporal4.feature,expressions.temporal,True
expressions-temporal-Temporal4-02,[2] Should store date array,Scenario Outline,Temporal4 - Store Temporal Values,expressions/temporal/Temporal4.feature,expressions.temporal,True
expressions-temporal-Temporal4-03,[3] Should store local time,Scenario Outline,Temporal4 - Store Temporal Values,expressions/temporal/Temporal4.feature,expressions.temporal,True
expressions-temporal-Temporal4-04,[4] Should store local time array,Scenario Outline,Temporal4 - Store Temporal Values,expressions/temporal/Temporal4.feature,expressions.temporal,True
expressions-temporal-Temporal4-05,[5] Should store time,Scenario Outline,Temporal4 - Store Temporal Values,expressions/temporal/Temporal4.feature,expressions.temporal,True
expressions-temporal-Temporal4-06,[6] Should store time array,Scenario Outline,Temporal4 - Store Temporal Values,expressions/temporal/Temporal4.feature,expressions.temporal,True
expressions-temporal-Temporal4-07,[7] Should store local date time,Scenario Outline,Temporal4 - Store Temporal Values,expressions/temporal/Temporal4.feature,expressions.temporal,True
expressions-temporal-Temporal4-08,[8] Should store local date time array,Scenario Outline,Temporal4 - Store Temporal Values,expressions/temporal/Temporal4.feature,expressions.temporal,True
expressions-temporal-Temporal4-09,[9] Should store date time,Scenario Outline,Temporal4 - Store Temporal Values,expressions/temporal/Temporal4.feature,expressions.temporal,True
expressions-temporal-Temporal4-10,[10] Should store date time array,Scenario Outline,Temporal4 - Store Temporal Values,expressions/temporal/Temporal4.feature,expressions.temporal,True
expressions-temporal-Temporal4-11,[11] Should store duration,Scenario Outline,Temporal4 - Store Temporal Values,expressions/temporal/Temporal4.feature,expressions.temporal,True
expressions-temporal-Temporal4-12,[12] Should store duration array,Scenario Outline,Temporal4 - Store Temporal Values,expressions/temporal/Temporal4.feature,expressions.temporal,True
expressions-temporal-Temporal4-13,[13] Should propagate null,Scenario Outline,Temporal4 - Store Temporal Values,expressions/temporal/Temporal4.feature,expressions.temporal,True
expressions-temporal-Temporal5-01,[1] Should provide accessors for date,Scenario,Temporal5 - Access Components of Temporal Values,expressions/temporal/Temporal5.feature,expressions.temporal,True
expressions-temporal-Temporal5-02,[2] Should provide accessors for date in last weekYear,Scenario,Temporal5 - Access Components of Temporal Values,expressions/temporal/Temporal5.feature,expressions.temporal,True
expressions-temporal-Temporal5-03,[3] Should provide accessors for local time,Scenario,Temporal5 - Access Components of Temporal Values,expressions/temporal/Temporal5.feature,expressions.temporal,True
expressions-temporal-Temporal5-04,[4] Should provide accessors for time,Scenario,Temporal5 - Access Components of Temporal Values,expressions/temporal/Temporal5.feature,expressions.temporal,True
expressions-temporal-Temporal5-05,[5] Should provide accessors for local date time,Scenario,Temporal5 - Access Components of Temporal Values,expressions/temporal/Temporal5.feature,expressions.temporal,True
expressions-temporal-Temporal5-06,[6] Should provide accessors for date time,Scenario,Temporal5 - Access Components of Temporal Values,expressions/temporal/Temporal5.feature,expressions.temporal,True
expressions-temporal-Temporal5-07,[7] Should provide accessors for duration,Scenario,Temporal5 - Access Components of Temporal Values,expressions/temporal/Temporal5.feature,expressions.temporal,True
expressions-temporal-Temporal6-01,[1] Should serialize date,Scenario,Temporal6 - Render Temporal Values as a String,expressions/temporal/Temporal6.feature,expressions.temporal,True
expressions-temporal-Temporal6-02,[2] Should serialize local time,Scenario,Temporal6 - Render Temporal Values as a String,expressions/temporal/Temporal6.feature,expressions.temporal,True
expressions-temporal-Temporal6-03,[3] Should serialize time,Scenario,Temporal6 - Render Temporal Values as a String,expressions/temporal/Temporal6.feature,expressions.temporal,True
expressions-temporal-Temporal6-04,[4] Should serialize local date time,Scenario,Temporal6 - Render Temporal Values as a String,expressions/temporal/Temporal6.feature,expressions.temporal,True
expressions-temporal-Temporal6-05,[5] Should serialize date time,Scenario,Temporal6 - Render Temporal Values as a String,expressions/temporal/Temporal6.feature,expressions.temporal,True
expressions-temporal-Temporal6-06,[6] Should serialize duration,Scenario Outline,Temporal6 - Render Temporal Values as a String,expressions/temporal/Temporal6.feature,expressions.temporal,True
expressions-temporal-Temporal6-07,[7] Should serialize timezones correctly,Scenario,Temporal6 - Render Temporal Values as a String,expressions/temporal/Temporal6.feature,expressions.temporal,True
expressions-temporal-Temporal7-01,[1] Should compare dates,Scenario Outline,Temporal7 - Compare Temporal Values,expressions/temporal/Temporal7.feature,expressions.temporal,True
expressions-temporal-Temporal7-02,[2] Should compare local times,Scenario Outline,Temporal7 - Compare Temporal Values,expressions/temporal/Temporal7.feature,expressions.temporal,True
expressions-temporal-Temporal7-03,[3] Should compare times,Scenario Outline,Temporal7 - Compare Temporal Values,expressions/temporal/Temporal7.feature,expressions.temporal,True
expressions-temporal-Temporal7-04,[4] Should compare local date times,Scenario Outline,Temporal7 - Compare Temporal Values,expressions/temporal/Temporal7.feature,expressions.temporal,True
expressions-temporal-Temporal7-05,[5] Should compare date times,Scenario Outline,Temporal7 - Compare Temporal Values,expressions/temporal/Temporal7.feature,expressions.temporal,True
expressions-temporal-Temporal7-06,[6] Should compare durations for equality,Scenario Outline,Temporal7 - Compare Temporal Values,expressions/temporal/Temporal7.feature,expressions.temporal,True
expressions-temporal-Temporal8-01,[1] Should add or subtract duration to or from date,Scenario Outline,Temporal8 - Compute Arithmetic Operations on Temporal Values,expressions/temporal/Temporal8.feature,expressions.temporal,True
expressions-temporal-Temporal8-02,[2] Should add or subtract duration to or from local time,Scenario Outline,Temporal8 - Compute Arithmetic Operations on Temporal Values,expressions/temporal/Temporal8.feature,expressions.temporal,True
expressions-temporal-Temporal8-03,[3] Should add or subtract duration to or from time,Scenario Outline,Temporal8 - Compute Arithmetic Operations on Temporal Values,expressions/temporal/Temporal8.feature,expressions.temporal,True
expressions-temporal-Temporal8-04,[4] Should add or subtract duration to or from local date time,Scenario Outline,Temporal8 - Compute Arithmetic Operations on Temporal Values,expressions/temporal/Temporal8.feature,expressions.temporal,True
expressions-temporal-Temporal8-05,[5] Should add or subtract duration to or from date time,Scenario Outline,Temporal8 - Compute Arithmetic Operations on Temporal Values,expressions/temporal/Temporal8.feature,expressions.temporal,True
expressions-temporal-Temporal8-06,[6] Should add or subtract durations,Scenario Outline,Temporal8 - Compute Arithmetic Operations on Temporal Values,expressions/temporal/Temporal8.feature,expressions.temporal,True
expressions-temporal-Temporal8-07,[7] Should multiply or divide durations by numbers,Scenario Outline,Temporal8 - Compute Arithmetic Operations on Temporal Values,expressions/temporal/Temporal8.feature,expressions.temporal,True
expressions-temporal-Temporal9-01,[1] Should truncate date,Scenario Outline,Temporal9 - Truncate Temporal Values,expressions/temporal/Temporal9.feature,expressions.temporal,True
expressions-temporal-Temporal9-02,[2] Should truncate datetime,Scenario Outline,Temporal9 - Truncate Temporal Values,expressions/temporal/Temporal9.feature,expressions.temporal,True
expressions-temporal-Temporal9-03,[3] Should truncate localdatetime,Scenario Outline,Temporal9 - Truncate Temporal Values,expressions/temporal/Temporal9.feature,expressions.temporal,True
expressions-temporal-Temporal9-04,[4] Should truncate localtime,Scenario Outline,Temporal9 - Truncate Temporal Values,expressions/temporal/Temporal9.feature,expressions.temporal,True
expressions-temporal-Temporal9-05,[5] Should truncate time,Scenario Outline,Temporal9 - Truncate Temporal Values,expressions/temporal/Temporal9.feature,expressions.temporal,True
expressions-typeConversion-TypeConversion1-01,[1] `toBoolean()` on booleans,Scenario,TypeConversion1 - To Boolean,expressions/typeConversion/TypeConversion1.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion1-02,[2] `toBoolean()` on valid literal string,Scenario,TypeConversion1 - To Boolean,expressions/typeConversion/TypeConversion1.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion1-03,[3] `toBoolean()` on variables with valid string values,Scenario,TypeConversion1 - To Boolean,expressions/typeConversion/TypeConversion1.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion1-04,[4] `toBoolean()` on invalid strings,Scenario,TypeConversion1 - To Boolean,expressions/typeConversion/TypeConversion1.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion1-05,[5] Fail `toBoolean()` on invalid types #Example: <exampleName>,Scenario Outline,TypeConversion1 - To Boolean,expressions/typeConversion/TypeConversion1.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion2-01,[1] `toInteger()` on float,Scenario,TypeConversion2 - To Integer,expressions/typeConversion/TypeConversion2.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion2-02,[2] `toInteger()` returning null on non-numerical string,Scenario,TypeConversion2 - To Integer,expressions/typeConversion/TypeConversion2.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion2-03,[3] `toInteger()` handling mixed number types,Scenario,TypeConversion2 - To Integer,expressions/typeConversion/TypeConversion2.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion2-04,[4] `toInteger()` handling Any type,Scenario,TypeConversion2 - To Integer,expressions/typeConversion/TypeConversion2.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion2-05,[5] `toInteger()` on a list of strings,Scenario,TypeConversion2 - To Integer,expressions/typeConversion/TypeConversion2.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion2-06,[6] `toInteger()` on a complex-typed expression,Scenario,TypeConversion2 - To Integer,expressions/typeConversion/TypeConversion2.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion2-07,[7] `toInteger()` on node property,Scenario,TypeConversion2 - To Integer,expressions/typeConversion/TypeConversion2.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion2-08,[8] Fail `toInteger()` on invalid types #Example: <exampleName>,Scenario Outline,TypeConversion2 - To Integer,expressions/typeConversion/TypeConversion2.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion3-01,[1] `toFloat()` on mixed number types,Scenario,TypeConversion3 - To Float,expressions/typeConversion/TypeConversion3.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion3-02,[2] `toFloat()` returning null on non-numerical string,Scenario,TypeConversion3 - To Float,expressions/typeConversion/TypeConversion3.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion3-03,[3] `toFloat()` handling Any type,Scenario,TypeConversion3 - To Float,expressions/typeConversion/TypeConversion3.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion3-04,[4] `toFloat()` on a list of strings,Scenario,TypeConversion3 - To Float,expressions/typeConversion/TypeConversion3.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion3-05,[5] `toFloat()` on node property,Scenario,TypeConversion3 - To Float,expressions/typeConversion/TypeConversion3.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion3-06,[6] Fail `toFloat()` on invalid types #Example: <exampleName>,Scenario Outline,TypeConversion3 - To Float,expressions/typeConversion/TypeConversion3.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion4-01,[1] `toString()` handling integer literal,Scenario,TypeConversion4 - To String,expressions/typeConversion/TypeConversion4.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion4-02,[2] `toString()` handling boolean literal,Scenario,TypeConversion4 - To String,expressions/typeConversion/TypeConversion4.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion4-03,[3] `toString()` handling inlined boolean,Scenario,TypeConversion4 - To String,expressions/typeConversion/TypeConversion4.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion4-04,[4] `toString()` handling boolean properties,Scenario,TypeConversion4 - To String,expressions/typeConversion/TypeConversion4.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion4-05,[5] `toString()` should work on Any type,Scenario,TypeConversion4 - To String,expressions/typeConversion/TypeConversion4.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion4-06,[6] `toString()` on a list of integers,Scenario,TypeConversion4 - To String,expressions/typeConversion/TypeConversion4.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion4-07,[7] `toString()` on node property,Scenario,TypeConversion4 - To String,expressions/typeConversion/TypeConversion4.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion4-08,[8] `toString()` should accept potentially correct types 1,Scenario,TypeConversion4 - To String,expressions/typeConversion/TypeConversion4.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion4-09,[9] `toString()` should accept potentially correct types 2,Scenario,TypeConversion4 - To String,expressions/typeConversion/TypeConversion4.feature,expressions.typeConversion,True
expressions-typeConversion-TypeConversion4-10,[10] Fail `toString()` on invalid types #Example: <exampleName>,Scenario Outline,TypeConversion4 - To String,expressions/typeConversion/TypeConversion4.feature,expressions.typeConversion,True
useCases-countingSubgraphMatches-CountingSubgraphMatches1-01,"[1] Undirected match in self-relationship graph, count",Scenario,CountingSubgraphMatches1 - Matching subgraph patterns and count the number of matches,useCases/countingSubgraphMatches/CountingSubgraphMatches1.feature,useCases.countingSubgraphMatches,True
useCases-countingSubgraphMatches-CountingSubgraphMatches1-02,"[2] Undirected match of self-relationship in self-relationship graph, count",Scenario,CountingSubgraphMatches1 - Matching subgraph patterns and count the number of matches,useCases/countingSubgraphMatches/CountingSubgraphMatches1.feature,useCases.countingSubgraphMatches,True
useCases-countingSubgraphMatches-CountingSubgraphMatches1-03,"[3] Undirected match on simple relationship graph, count",Scenario,CountingSubgraphMatches1 - Matching subgraph patterns and count the number of matches,useCases/countingSubgraphMatches/CountingSubgraphMatches1.feature,useCases.countingSubgraphMatches,True
useCases-countingSubgraphMatches-CountingSubgraphMatches1-04,"[4] Directed match on self-relationship graph, count",Scenario,CountingSubgraphMatches1 - Matching subgraph patterns and count the number of matches,useCases/countingSubgraphMatches/CountingSubgraphMatches1.feature,useCases.countingSubgraphMatches,True
useCases-countingSubgraphMatches-CountingSubgraphMatches1-05,"[5] Directed match of self-relationship on self-relationship graph, count",Scenario,CountingSubgraphMatches1 - Matching subgraph patterns and count the number of matches,useCases/countingSubgraphMatches/CountingSubgraphMatches1.feature,useCases.countingSubgraphMatches,True
useCases-countingSubgraphMatches-CountingSubgraphMatches1-06,[6] Counting undirected self-relationships in self-relationship graph,Scenario,CountingSubgraphMatches1 - Matching subgraph patterns and count the number of matches,useCases/countingSubgraphMatches/CountingSubgraphMatches1.feature,useCases.countingSubgraphMatches,True
useCases-countingSubgraphMatches-CountingSubgraphMatches1-07,[7] Counting distinct undirected self-relationships in self-relationship graph,Scenario,CountingSubgraphMatches1 - Matching subgraph patterns and count the number of matches,useCases/countingSubgraphMatches/CountingSubgraphMatches1.feature,useCases.countingSubgraphMatches,True
useCases-countingSubgraphMatches-CountingSubgraphMatches1-08,"[8] Directed match of a simple relationship, count",Scenario,CountingSubgraphMatches1 - Matching subgraph patterns and count the number of matches,useCases/countingSubgraphMatches/CountingSubgraphMatches1.feature,useCases.countingSubgraphMatches,True
useCases-countingSubgraphMatches-CountingSubgraphMatches1-09,[9] Counting directed self-relationships,Scenario,CountingSubgraphMatches1 - Matching subgraph patterns and count the number of matches,useCases/countingSubgraphMatches/CountingSubgraphMatches1.feature,useCases.countingSubgraphMatches,True
useCases-countingSubgraphMatches-CountingSubgraphMatches1-10,"[10] Mixing directed and undirected pattern parts with self-relationship, count",Scenario,CountingSubgraphMatches1 - Matching subgraph patterns and count the number of matches,useCases/countingSubgraphMatches/CountingSubgraphMatches1.feature,useCases.countingSubgraphMatches,True
useCases-countingSubgraphMatches-CountingSubgraphMatches1-11,"[11] Mixing directed and undirected pattern parts with self-relationship, undirected count",Scenario,CountingSubgraphMatches1 - Matching subgraph patterns and count the number of matches,useCases/countingSubgraphMatches/CountingSubgraphMatches1.feature,useCases.countingSubgraphMatches,True
useCases-triadicSelection-TriadicSelection1-01,[1] Handling triadic friend of a friend,Scenario,TriadicSelection1 - Query three related nodes on binary-tree graphs,useCases/triadicSelection/TriadicSelection1.feature,useCases.triadicSelection,True
useCases-triadicSelection-TriadicSelection1-02,[2] Handling triadic friend of a friend that is not a friend,Scenario,TriadicSelection1 - Query three related nodes on binary-tree graphs,useCases/triadicSelection/TriadicSelection1.feature,useCases.triadicSelection,True
useCases-triadicSelection-TriadicSelection1-03,[3] Handling triadic friend of a friend that is not a friend with different relationship type,Scenario,TriadicSelection1 - Query three related nodes on binary-tree graphs,useCases/triadicSelection/TriadicSelection1.feature,useCases.triadicSelection,True
useCases-triadicSelection-TriadicSelection1-04,[4] Handling triadic friend of a friend that is not a friend with superset of relationship type,Scenario,TriadicSelection1 - Query three related nodes on binary-tree graphs,useCases/triadicSelection/TriadicSelection1.feature,useCases.triadicSelection,True
useCases-triadicSelection-TriadicSelection1-05,[5] Handling triadic friend of a friend that is not a friend with implicit subset of relationship type,Scenario,TriadicSelection1 - Query three related nodes on binary-tree graphs,useCases/triadicSelection/TriadicSelection1.feature,useCases.triadicSelection,True
useCases-triadicSelection-TriadicSelection1-06,[6] Handling triadic friend of a friend that is not a friend with explicit subset of relationship type,Scenario,TriadicSelection1 - Query three related nodes on binary-tree graphs,useCases/triadicSelection/TriadicSelection1.feature,useCases.triadicSelection,True
useCases-triadicSelection-TriadicSelection1-07,[7] Handling triadic friend of a friend that is not a friend with same labels,Scenario,TriadicSelection1 - Query three related nodes on binary-tree graphs,useCases/triadicSelection/TriadicSelection1.feature,useCases.triadicSelection,True
useCases-triadicSelection-TriadicSelection1-08,[8] Handling triadic friend of a friend that is not a friend with different labels,Scenario,TriadicSelection1 - Query three related nodes on binary-tree graphs,useCases/triadicSelection/TriadicSelection1.feature,useCases.triadicSelection,True
useCases-triadicSelection-TriadicSelection1-09,[9] Handling triadic friend of a friend that is not a friend with implicit subset of labels,Scenario,TriadicSelection1 - Query three related nodes on binary-tree graphs,useCases/triadicSelection/TriadicSelection1.feature,useCases.triadicSelection,True
useCases-triadicSelection-TriadicSelection1-10,[10] Handling triadic friend of a friend that is not a friend with implicit superset of labels,Scenario,TriadicSelection1 - Query three related nodes on binary-tree graphs,useCases/triadicSelection/TriadicSelection1.feature,useCases.triadicSelection,True
useCases-triadicSelection-TriadicSelection1-11,[11] Handling triadic friend of a friend that is a friend,Scenario,TriadicSelection1 - Query three related nodes on binary-tree graphs,useCases/triadicSelection/TriadicSelection1.feature,useCases.triadicSelection,True
useCases-triadicSelection-TriadicSelection1-12,[12] Handling triadic friend of a friend that is a friend with different relationship type,Scenario,TriadicSelection1 - Query three related nodes on binary-tree graphs,useCases/triadicSelection/TriadicSelection1.feature,useCases.triadicSelection,True
useCases-triadicSelection-TriadicSelection1-13,[13] Handling triadic friend of a friend that is a friend with superset of relationship type,Scenario,TriadicSelection1 - Query three related nodes on binary-tree graphs,useCases/triadicSelection/TriadicSelection1.feature,useCases.triadicSelection,True
useCases-triadicSelection-TriadicSelection1-14,[14] Handling triadic friend of a friend that is a friend with implicit subset of relationship type,Scenario,TriadicSelection1 - Query three related nodes on binary-tree graphs,useCases/triadicSelection/TriadicSelection1.feature,useCases.triadicSelection,True
useCases-triadicSelection-TriadicSelection1-15,[15] Handling triadic friend of a friend that is a friend with explicit subset of relationship type,Scenario,TriadicSelection1 - Query three related nodes on binary-tree graphs,useCases/triadicSelection/TriadicSelection1.feature,useCases.triadicSelection,True
useCases-triadicSelection-TriadicSelection1-16,[16] Handling triadic friend of a friend that is a friend with same labels,Scenario,TriadicSelection1 - Query three related nodes on binary-tree graphs,useCases/triadicSelection/TriadicSelection1.feature,useCases.triadicSelection,True
useCases-triadicSelection-TriadicSelection1-17,[17] Handling triadic friend of a friend that is a friend with different labels,Scenario,TriadicSelection1 - Query three related nodes on binary-tree graphs,useCases/triadicSelection/TriadicSelection1.feature,useCases.triadicSelection,True
useCases-triadicSelection-TriadicSelection1-18,[18] Handling triadic friend of a friend that is a friend with implicit subset of labels,Scenario,TriadicSelection1 - Query three related nodes on binary-tree graphs,useCases/triadicSelection/TriadicSelection1.feature,useCases.triadicSelection,True
useCases-triadicSelection-TriadicSelection1-19,[19] Handling triadic friend of a friend that is a friend with implicit superset of labels,Scenario,TriadicSelection1 - Query three related nodes on binary-tree graphs,useCases/triadicSelection/TriadicSelection1.feature,useCases.triadicSelection,True
